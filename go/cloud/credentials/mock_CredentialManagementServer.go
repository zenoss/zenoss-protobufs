// Code generated by mockery v2.14.0. DO NOT EDIT.

package credentials

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockCredentialManagementServer is an autogenerated mock type for the CredentialManagementServer type
type MockCredentialManagementServer struct {
	mock.Mock
}

type MockCredentialManagementServer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockCredentialManagementServer) EXPECT() *MockCredentialManagementServer_Expecter {
	return &MockCredentialManagementServer_Expecter{mock: &_m.Mock}
}

// GetCredential provides a mock function with given fields: _a0, _a1
func (_m *MockCredentialManagementServer) GetCredential(_a0 context.Context, _a1 *GetCredentialRequest) (*GetCredentialResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *GetCredentialResponse
	if rf, ok := ret.Get(0).(func(context.Context, *GetCredentialRequest) *GetCredentialResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*GetCredentialResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *GetCredentialRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockCredentialManagementServer_GetCredential_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetCredential'
type MockCredentialManagementServer_GetCredential_Call struct {
	*mock.Call
}

// GetCredential is a helper method to define mock.On call
//  - _a0 context.Context
//  - _a1 *GetCredentialRequest
func (_e *MockCredentialManagementServer_Expecter) GetCredential(_a0 interface{}, _a1 interface{}) *MockCredentialManagementServer_GetCredential_Call {
	return &MockCredentialManagementServer_GetCredential_Call{Call: _e.mock.On("GetCredential", _a0, _a1)}
}

func (_c *MockCredentialManagementServer_GetCredential_Call) Run(run func(_a0 context.Context, _a1 *GetCredentialRequest)) *MockCredentialManagementServer_GetCredential_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*GetCredentialRequest))
	})
	return _c
}

func (_c *MockCredentialManagementServer_GetCredential_Call) Return(_a0 *GetCredentialResponse, _a1 error) *MockCredentialManagementServer_GetCredential_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

// mustEmbedUnimplementedCredentialManagementServer provides a mock function with given fields:
func (_m *MockCredentialManagementServer) mustEmbedUnimplementedCredentialManagementServer() {
	_m.Called()
}

// MockCredentialManagementServer_mustEmbedUnimplementedCredentialManagementServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedCredentialManagementServer'
type MockCredentialManagementServer_mustEmbedUnimplementedCredentialManagementServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedCredentialManagementServer is a helper method to define mock.On call
func (_e *MockCredentialManagementServer_Expecter) mustEmbedUnimplementedCredentialManagementServer() *MockCredentialManagementServer_mustEmbedUnimplementedCredentialManagementServer_Call {
	return &MockCredentialManagementServer_mustEmbedUnimplementedCredentialManagementServer_Call{Call: _e.mock.On("mustEmbedUnimplementedCredentialManagementServer")}
}

func (_c *MockCredentialManagementServer_mustEmbedUnimplementedCredentialManagementServer_Call) Run(run func()) *MockCredentialManagementServer_mustEmbedUnimplementedCredentialManagementServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockCredentialManagementServer_mustEmbedUnimplementedCredentialManagementServer_Call) Return() *MockCredentialManagementServer_mustEmbedUnimplementedCredentialManagementServer_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTNewMockCredentialManagementServer interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockCredentialManagementServer creates a new instance of MockCredentialManagementServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockCredentialManagementServer(t mockConstructorTestingTNewMockCredentialManagementServer) *MockCredentialManagementServer {
	mock := &MockCredentialManagementServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
