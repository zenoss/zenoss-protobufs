// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zenoss/cloud/data_receiver.proto

package data_receiver

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Void struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Void) Reset()         { *m = Void{} }
func (m *Void) String() string { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()    {}
func (*Void) Descriptor() ([]byte, []int) {
	return fileDescriptor_7045cb94d153507c, []int{0}
}

func (m *Void) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Void.Unmarshal(m, b)
}
func (m *Void) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Void.Marshal(b, m, deterministic)
}
func (m *Void) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Void.Merge(m, src)
}
func (m *Void) XXX_Size() int {
	return xxx_messageInfo_Void.Size(m)
}
func (m *Void) XXX_DiscardUnknown() {
	xxx_messageInfo_Void.DiscardUnknown(m)
}

var xxx_messageInfo_Void proto.InternalMessageInfo

type TaggedMetric struct {
	// The metric name
	Metric string `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"`
	// The time at which the value was captured
	Timestamp int64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The metric value
	Value float64 `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	// Metadata associated with this datapoint.
	Tags                 map[string]string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TaggedMetric) Reset()         { *m = TaggedMetric{} }
func (m *TaggedMetric) String() string { return proto.CompactTextString(m) }
func (*TaggedMetric) ProtoMessage()    {}
func (*TaggedMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_7045cb94d153507c, []int{1}
}

func (m *TaggedMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaggedMetric.Unmarshal(m, b)
}
func (m *TaggedMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaggedMetric.Marshal(b, m, deterministic)
}
func (m *TaggedMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaggedMetric.Merge(m, src)
}
func (m *TaggedMetric) XXX_Size() int {
	return xxx_messageInfo_TaggedMetric.Size(m)
}
func (m *TaggedMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_TaggedMetric.DiscardUnknown(m)
}

var xxx_messageInfo_TaggedMetric proto.InternalMessageInfo

func (m *TaggedMetric) GetMetric() string {
	if m != nil {
		return m.Metric
	}
	return ""
}

func (m *TaggedMetric) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *TaggedMetric) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *TaggedMetric) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type CompactMetric struct {
	// The metric id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The time at which the value was captured
	Timestamp int64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The metric value
	Value                float64  `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompactMetric) Reset()         { *m = CompactMetric{} }
func (m *CompactMetric) String() string { return proto.CompactTextString(m) }
func (*CompactMetric) ProtoMessage()    {}
func (*CompactMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_7045cb94d153507c, []int{2}
}

func (m *CompactMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompactMetric.Unmarshal(m, b)
}
func (m *CompactMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompactMetric.Marshal(b, m, deterministic)
}
func (m *CompactMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompactMetric.Merge(m, src)
}
func (m *CompactMetric) XXX_Size() int {
	return xxx_messageInfo_CompactMetric.Size(m)
}
func (m *CompactMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_CompactMetric.DiscardUnknown(m)
}

var xxx_messageInfo_CompactMetric proto.InternalMessageInfo

func (m *CompactMetric) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CompactMetric) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *CompactMetric) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Canonical Metric format
type Metric struct {
	// The metric name
	Metric string `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"`
	// The time at which the value was captured
	Timestamp int64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The metric value
	Value float64 `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	// Dimensions associated with this datapoint.
	Dimensions map[string]string `protobuf:"bytes,4,rep,name=dimensions,proto3" json:"dimensions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Metadata for the datapoint. Note: using Struct as it is easier than AnyArray when using json representations
	MetadataFields       *_struct.Struct `protobuf:"bytes,6,opt,name=metadataFields,proto3" json:"metadataFields,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Metric) Reset()         { *m = Metric{} }
func (m *Metric) String() string { return proto.CompactTextString(m) }
func (*Metric) ProtoMessage()    {}
func (*Metric) Descriptor() ([]byte, []int) {
	return fileDescriptor_7045cb94d153507c, []int{3}
}

func (m *Metric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metric.Unmarshal(m, b)
}
func (m *Metric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metric.Marshal(b, m, deterministic)
}
func (m *Metric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metric.Merge(m, src)
}
func (m *Metric) XXX_Size() int {
	return xxx_messageInfo_Metric.Size(m)
}
func (m *Metric) XXX_DiscardUnknown() {
	xxx_messageInfo_Metric.DiscardUnknown(m)
}

var xxx_messageInfo_Metric proto.InternalMessageInfo

func (m *Metric) GetMetric() string {
	if m != nil {
		return m.Metric
	}
	return ""
}

func (m *Metric) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Metric) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Metric) GetDimensions() map[string]string {
	if m != nil {
		return m.Dimensions
	}
	return nil
}

func (m *Metric) GetMetadataFields() *_struct.Struct {
	if m != nil {
		return m.MetadataFields
	}
	return nil
}

type Model struct {
	// The time when the value was sent.
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Dimensions associated with this model.
	Dimensions map[string]string `protobuf:"bytes,2,rep,name=dimensions,proto3" json:"dimensions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Fields associated with this model.
	Fields               *_struct.Struct `protobuf:"bytes,3,opt,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Model) Reset()         { *m = Model{} }
func (m *Model) String() string { return proto.CompactTextString(m) }
func (*Model) ProtoMessage()    {}
func (*Model) Descriptor() ([]byte, []int) {
	return fileDescriptor_7045cb94d153507c, []int{4}
}

func (m *Model) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Model.Unmarshal(m, b)
}
func (m *Model) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Model.Marshal(b, m, deterministic)
}
func (m *Model) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Model.Merge(m, src)
}
func (m *Model) XXX_Size() int {
	return xxx_messageInfo_Model.Size(m)
}
func (m *Model) XXX_DiscardUnknown() {
	xxx_messageInfo_Model.DiscardUnknown(m)
}

var xxx_messageInfo_Model proto.InternalMessageInfo

func (m *Model) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Model) GetDimensions() map[string]string {
	if m != nil {
		return m.Dimensions
	}
	return nil
}

func (m *Model) GetFields() *_struct.Struct {
	if m != nil {
		return m.Fields
	}
	return nil
}

// Batch of models
type ModelBatch struct {
	// Tags that apply to all models in the batch
	GlobalTags map[string]string `protobuf:"bytes,1,rep,name=global_tags,json=globalTags,proto3" json:"global_tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The models
	Models               []*Model `protobuf:"bytes,2,rep,name=models,proto3" json:"models,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModelBatch) Reset()         { *m = ModelBatch{} }
func (m *ModelBatch) String() string { return proto.CompactTextString(m) }
func (*ModelBatch) ProtoMessage()    {}
func (*ModelBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_7045cb94d153507c, []int{5}
}

func (m *ModelBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelBatch.Unmarshal(m, b)
}
func (m *ModelBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelBatch.Marshal(b, m, deterministic)
}
func (m *ModelBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelBatch.Merge(m, src)
}
func (m *ModelBatch) XXX_Size() int {
	return xxx_messageInfo_ModelBatch.Size(m)
}
func (m *ModelBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelBatch.DiscardUnknown(m)
}

var xxx_messageInfo_ModelBatch proto.InternalMessageInfo

func (m *ModelBatch) GetGlobalTags() map[string]string {
	if m != nil {
		return m.GlobalTags
	}
	return nil
}

func (m *ModelBatch) GetModels() []*Model {
	if m != nil {
		return m.Models
	}
	return nil
}

type StatusResult struct {
	// failed is the count of metrics that failed to be accepted
	Failed int32 `protobuf:"varint,1,opt,name=failed,proto3" json:"failed,omitempty"`
	// succeeded is the count of metrics that were accepted
	Succeeded int32 `protobuf:"varint,2,opt,name=succeeded,proto3" json:"succeeded,omitempty"`
	// message is an informational message that may or may not be set
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	//Failed metrics only returned if detailedResponse is set to true
	FailedCompactMetrics []*CompactMetricError `protobuf:"bytes,4,rep,name=failedCompactMetrics,proto3" json:"failedCompactMetrics,omitempty"`
	FailedTaggedMetrics  []*TaggedMetricError  `protobuf:"bytes,5,rep,name=failedTaggedMetrics,proto3" json:"failedTaggedMetrics,omitempty"`
	FailedMetrics        []*MetricError        `protobuf:"bytes,6,rep,name=failedMetrics,proto3" json:"failedMetrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *StatusResult) Reset()         { *m = StatusResult{} }
func (m *StatusResult) String() string { return proto.CompactTextString(m) }
func (*StatusResult) ProtoMessage()    {}
func (*StatusResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_7045cb94d153507c, []int{6}
}

func (m *StatusResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResult.Unmarshal(m, b)
}
func (m *StatusResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResult.Marshal(b, m, deterministic)
}
func (m *StatusResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResult.Merge(m, src)
}
func (m *StatusResult) XXX_Size() int {
	return xxx_messageInfo_StatusResult.Size(m)
}
func (m *StatusResult) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResult.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResult proto.InternalMessageInfo

func (m *StatusResult) GetFailed() int32 {
	if m != nil {
		return m.Failed
	}
	return 0
}

func (m *StatusResult) GetSucceeded() int32 {
	if m != nil {
		return m.Succeeded
	}
	return 0
}

func (m *StatusResult) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *StatusResult) GetFailedCompactMetrics() []*CompactMetricError {
	if m != nil {
		return m.FailedCompactMetrics
	}
	return nil
}

func (m *StatusResult) GetFailedTaggedMetrics() []*TaggedMetricError {
	if m != nil {
		return m.FailedTaggedMetrics
	}
	return nil
}

func (m *StatusResult) GetFailedMetrics() []*MetricError {
	if m != nil {
		return m.FailedMetrics
	}
	return nil
}

type MetricWrapper struct {
	// Types that are valid to be assigned to MetricType:
	//	*MetricWrapper_Tagged
	//	*MetricWrapper_Compact
	//	*MetricWrapper_Canonical
	MetricType           isMetricWrapper_MetricType `protobuf_oneof:"metric_type"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *MetricWrapper) Reset()         { *m = MetricWrapper{} }
func (m *MetricWrapper) String() string { return proto.CompactTextString(m) }
func (*MetricWrapper) ProtoMessage()    {}
func (*MetricWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_7045cb94d153507c, []int{7}
}

func (m *MetricWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricWrapper.Unmarshal(m, b)
}
func (m *MetricWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricWrapper.Marshal(b, m, deterministic)
}
func (m *MetricWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricWrapper.Merge(m, src)
}
func (m *MetricWrapper) XXX_Size() int {
	return xxx_messageInfo_MetricWrapper.Size(m)
}
func (m *MetricWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_MetricWrapper proto.InternalMessageInfo

type isMetricWrapper_MetricType interface {
	isMetricWrapper_MetricType()
}

type MetricWrapper_Tagged struct {
	Tagged *TaggedMetric `protobuf:"bytes,1,opt,name=tagged,proto3,oneof"`
}

type MetricWrapper_Compact struct {
	Compact *CompactMetric `protobuf:"bytes,2,opt,name=compact,proto3,oneof"`
}

type MetricWrapper_Canonical struct {
	Canonical *Metric `protobuf:"bytes,3,opt,name=canonical,proto3,oneof"`
}

func (*MetricWrapper_Tagged) isMetricWrapper_MetricType() {}

func (*MetricWrapper_Compact) isMetricWrapper_MetricType() {}

func (*MetricWrapper_Canonical) isMetricWrapper_MetricType() {}

func (m *MetricWrapper) GetMetricType() isMetricWrapper_MetricType {
	if m != nil {
		return m.MetricType
	}
	return nil
}

func (m *MetricWrapper) GetTagged() *TaggedMetric {
	if x, ok := m.GetMetricType().(*MetricWrapper_Tagged); ok {
		return x.Tagged
	}
	return nil
}

func (m *MetricWrapper) GetCompact() *CompactMetric {
	if x, ok := m.GetMetricType().(*MetricWrapper_Compact); ok {
		return x.Compact
	}
	return nil
}

func (m *MetricWrapper) GetCanonical() *Metric {
	if x, ok := m.GetMetricType().(*MetricWrapper_Canonical); ok {
		return x.Canonical
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MetricWrapper) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MetricWrapper_Tagged)(nil),
		(*MetricWrapper_Compact)(nil),
		(*MetricWrapper_Canonical)(nil),
	}
}

// DEPRECATED Batch of metrics
type MetricBatch struct {
	// Tags that apply to all metrics in the batch
	GlobalTags map[string]string `protobuf:"bytes,2,rep,name=global_tags,json=globalTags,proto3" json:"global_tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The metrics
	Metrics              []*MetricWrapper `protobuf:"bytes,3,rep,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MetricBatch) Reset()         { *m = MetricBatch{} }
func (m *MetricBatch) String() string { return proto.CompactTextString(m) }
func (*MetricBatch) ProtoMessage()    {}
func (*MetricBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_7045cb94d153507c, []int{8}
}

func (m *MetricBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricBatch.Unmarshal(m, b)
}
func (m *MetricBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricBatch.Marshal(b, m, deterministic)
}
func (m *MetricBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricBatch.Merge(m, src)
}
func (m *MetricBatch) XXX_Size() int {
	return xxx_messageInfo_MetricBatch.Size(m)
}
func (m *MetricBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricBatch.DiscardUnknown(m)
}

var xxx_messageInfo_MetricBatch proto.InternalMessageInfo

func (m *MetricBatch) GetGlobalTags() map[string]string {
	if m != nil {
		return m.GlobalTags
	}
	return nil
}

func (m *MetricBatch) GetMetrics() []*MetricWrapper {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type CompactMetricError struct {
	Error                string         `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Metric               *CompactMetric `protobuf:"bytes,2,opt,name=metric,proto3" json:"metric,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CompactMetricError) Reset()         { *m = CompactMetricError{} }
func (m *CompactMetricError) String() string { return proto.CompactTextString(m) }
func (*CompactMetricError) ProtoMessage()    {}
func (*CompactMetricError) Descriptor() ([]byte, []int) {
	return fileDescriptor_7045cb94d153507c, []int{9}
}

func (m *CompactMetricError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompactMetricError.Unmarshal(m, b)
}
func (m *CompactMetricError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompactMetricError.Marshal(b, m, deterministic)
}
func (m *CompactMetricError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompactMetricError.Merge(m, src)
}
func (m *CompactMetricError) XXX_Size() int {
	return xxx_messageInfo_CompactMetricError.Size(m)
}
func (m *CompactMetricError) XXX_DiscardUnknown() {
	xxx_messageInfo_CompactMetricError.DiscardUnknown(m)
}

var xxx_messageInfo_CompactMetricError proto.InternalMessageInfo

func (m *CompactMetricError) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *CompactMetricError) GetMetric() *CompactMetric {
	if m != nil {
		return m.Metric
	}
	return nil
}

type MetricError struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Metric               *Metric  `protobuf:"bytes,2,opt,name=metric,proto3" json:"metric,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricError) Reset()         { *m = MetricError{} }
func (m *MetricError) String() string { return proto.CompactTextString(m) }
func (*MetricError) ProtoMessage()    {}
func (*MetricError) Descriptor() ([]byte, []int) {
	return fileDescriptor_7045cb94d153507c, []int{10}
}

func (m *MetricError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricError.Unmarshal(m, b)
}
func (m *MetricError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricError.Marshal(b, m, deterministic)
}
func (m *MetricError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricError.Merge(m, src)
}
func (m *MetricError) XXX_Size() int {
	return xxx_messageInfo_MetricError.Size(m)
}
func (m *MetricError) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricError.DiscardUnknown(m)
}

var xxx_messageInfo_MetricError proto.InternalMessageInfo

func (m *MetricError) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *MetricError) GetMetric() *Metric {
	if m != nil {
		return m.Metric
	}
	return nil
}

type TaggedMetricError struct {
	Error                string        `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Metric               *TaggedMetric `protobuf:"bytes,2,opt,name=metric,proto3" json:"metric,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TaggedMetricError) Reset()         { *m = TaggedMetricError{} }
func (m *TaggedMetricError) String() string { return proto.CompactTextString(m) }
func (*TaggedMetricError) ProtoMessage()    {}
func (*TaggedMetricError) Descriptor() ([]byte, []int) {
	return fileDescriptor_7045cb94d153507c, []int{11}
}

func (m *TaggedMetricError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaggedMetricError.Unmarshal(m, b)
}
func (m *TaggedMetricError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaggedMetricError.Marshal(b, m, deterministic)
}
func (m *TaggedMetricError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaggedMetricError.Merge(m, src)
}
func (m *TaggedMetricError) XXX_Size() int {
	return xxx_messageInfo_TaggedMetricError.Size(m)
}
func (m *TaggedMetricError) XXX_DiscardUnknown() {
	xxx_messageInfo_TaggedMetricError.DiscardUnknown(m)
}

var xxx_messageInfo_TaggedMetricError proto.InternalMessageInfo

func (m *TaggedMetricError) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *TaggedMetricError) GetMetric() *TaggedMetric {
	if m != nil {
		return m.Metric
	}
	return nil
}

type Metrics struct {
	// detailedResponse if set to true will return any metrics that failed to be sent
	DetailedResponse     bool             `protobuf:"varint,1,opt,name=detailedResponse,proto3" json:"detailedResponse,omitempty"`
	CompactMetrics       []*CompactMetric `protobuf:"bytes,3,rep,name=compactMetrics,proto3" json:"compactMetrics,omitempty"`
	TaggedMetrics        []*TaggedMetric  `protobuf:"bytes,4,rep,name=taggedMetrics,proto3" json:"taggedMetrics,omitempty"`
	Metrics              []*Metric        `protobuf:"bytes,5,rep,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Metrics) Reset()         { *m = Metrics{} }
func (m *Metrics) String() string { return proto.CompactTextString(m) }
func (*Metrics) ProtoMessage()    {}
func (*Metrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_7045cb94d153507c, []int{12}
}

func (m *Metrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metrics.Unmarshal(m, b)
}
func (m *Metrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metrics.Marshal(b, m, deterministic)
}
func (m *Metrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metrics.Merge(m, src)
}
func (m *Metrics) XXX_Size() int {
	return xxx_messageInfo_Metrics.Size(m)
}
func (m *Metrics) XXX_DiscardUnknown() {
	xxx_messageInfo_Metrics.DiscardUnknown(m)
}

var xxx_messageInfo_Metrics proto.InternalMessageInfo

func (m *Metrics) GetDetailedResponse() bool {
	if m != nil {
		return m.DetailedResponse
	}
	return false
}

func (m *Metrics) GetCompactMetrics() []*CompactMetric {
	if m != nil {
		return m.CompactMetrics
	}
	return nil
}

func (m *Metrics) GetTaggedMetrics() []*TaggedMetric {
	if m != nil {
		return m.TaggedMetrics
	}
	return nil
}

func (m *Metrics) GetMetrics() []*Metric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func init() {
	proto.RegisterType((*Void)(nil), "zenoss.cloud.Void")
	proto.RegisterType((*TaggedMetric)(nil), "zenoss.cloud.TaggedMetric")
	proto.RegisterMapType((map[string]string)(nil), "zenoss.cloud.TaggedMetric.TagsEntry")
	proto.RegisterType((*CompactMetric)(nil), "zenoss.cloud.CompactMetric")
	proto.RegisterType((*Metric)(nil), "zenoss.cloud.Metric")
	proto.RegisterMapType((map[string]string)(nil), "zenoss.cloud.Metric.DimensionsEntry")
	proto.RegisterType((*Model)(nil), "zenoss.cloud.Model")
	proto.RegisterMapType((map[string]string)(nil), "zenoss.cloud.Model.DimensionsEntry")
	proto.RegisterType((*ModelBatch)(nil), "zenoss.cloud.ModelBatch")
	proto.RegisterMapType((map[string]string)(nil), "zenoss.cloud.ModelBatch.GlobalTagsEntry")
	proto.RegisterType((*StatusResult)(nil), "zenoss.cloud.StatusResult")
	proto.RegisterType((*MetricWrapper)(nil), "zenoss.cloud.MetricWrapper")
	proto.RegisterType((*MetricBatch)(nil), "zenoss.cloud.MetricBatch")
	proto.RegisterMapType((map[string]string)(nil), "zenoss.cloud.MetricBatch.GlobalTagsEntry")
	proto.RegisterType((*CompactMetricError)(nil), "zenoss.cloud.CompactMetricError")
	proto.RegisterType((*MetricError)(nil), "zenoss.cloud.MetricError")
	proto.RegisterType((*TaggedMetricError)(nil), "zenoss.cloud.TaggedMetricError")
	proto.RegisterType((*Metrics)(nil), "zenoss.cloud.Metrics")
}

func init() { proto.RegisterFile("zenoss/cloud/data_receiver.proto", fileDescriptor_7045cb94d153507c) }

var fileDescriptor_7045cb94d153507c = []byte{
	// 876 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x5d, 0x6f, 0xf3, 0x34,
	0x18, 0xad, 0xd3, 0x35, 0xa3, 0x4f, 0xd7, 0xf1, 0xe2, 0x0d, 0x08, 0x7d, 0x87, 0xa8, 0x0a, 0x17,
	0xe5, 0x2b, 0x95, 0xba, 0xa1, 0x0d, 0x24, 0xb4, 0xb1, 0x0f, 0x18, 0x48, 0x93, 0x36, 0x77, 0x02,
	0x09, 0x81, 0x2a, 0x37, 0xf1, 0xb2, 0x88, 0xa4, 0xae, 0x62, 0x67, 0xd2, 0xf8, 0x29, 0xfc, 0x1d,
	0x6e, 0xb8, 0x41, 0xdc, 0xc3, 0x5f, 0xe0, 0x47, 0xa0, 0xd8, 0x49, 0xda, 0x64, 0x69, 0xa7, 0x31,
	0xbd, 0x57, 0x8d, 0x9f, 0x1c, 0x9f, 0x3c, 0xe7, 0xe4, 0xf8, 0x69, 0xa0, 0xfb, 0x2b, 0x9b, 0x72,
	0x21, 0x06, 0x4e, 0xc0, 0x63, 0x77, 0xe0, 0x52, 0x49, 0xc7, 0x11, 0x73, 0x98, 0x7f, 0xc7, 0x22,
	0x7b, 0x16, 0x71, 0xc9, 0xf1, 0x86, 0x46, 0xd8, 0x0a, 0xd1, 0xd9, 0xf1, 0x38, 0xf7, 0x02, 0x36,
	0x50, 0xf7, 0x26, 0xf1, 0xcd, 0x40, 0xc8, 0x28, 0x76, 0xa4, 0xc6, 0xf6, 0x4c, 0x58, 0xfb, 0x9e,
	0xfb, 0x6e, 0xef, 0x4f, 0x04, 0x1b, 0xd7, 0xd4, 0xf3, 0x98, 0x7b, 0xc1, 0x64, 0xe4, 0x3b, 0xf8,
	0x2d, 0x30, 0x43, 0x75, 0x65, 0xa1, 0x2e, 0xea, 0x37, 0x49, 0xba, 0xc2, 0x3b, 0xd0, 0x94, 0x7e,
	0xc8, 0x84, 0xa4, 0xe1, 0xcc, 0x32, 0xba, 0xa8, 0x5f, 0x27, 0xf3, 0x02, 0xde, 0x86, 0xc6, 0x1d,
	0x0d, 0x62, 0x66, 0xd5, 0xbb, 0xa8, 0x8f, 0x88, 0x5e, 0xe0, 0x03, 0x58, 0x93, 0xd4, 0x13, 0xd6,
	0x5a, 0xb7, 0xde, 0x6f, 0x0d, 0x3f, 0xb0, 0x17, 0xfb, 0xb3, 0x17, 0x9f, 0x9a, 0x2c, 0xc4, 0xd9,
	0x54, 0x46, 0xf7, 0x44, 0xed, 0xe8, 0xec, 0x43, 0x33, 0x2f, 0xe1, 0x17, 0x50, 0xff, 0x85, 0xdd,
	0xa7, 0xfd, 0x24, 0x97, 0xf3, 0xc7, 0x19, 0xaa, 0xa6, 0x17, 0x5f, 0x18, 0x07, 0xa8, 0x37, 0x82,
	0xf6, 0x09, 0x0f, 0x67, 0xd4, 0x91, 0xa9, 0x9e, 0x4d, 0x30, 0x7c, 0x37, 0xdd, 0x6b, 0xf8, 0xee,
	0xff, 0xd1, 0xd1, 0xfb, 0xcd, 0x00, 0xf3, 0x15, 0xd8, 0x73, 0x0a, 0xe0, 0xfa, 0x21, 0x9b, 0x0a,
	0x9f, 0x4f, 0x97, 0x98, 0x94, 0xda, 0x73, 0x9a, 0xc3, 0xb4, 0x49, 0x0b, 0xfb, 0xf0, 0x21, 0x6c,
	0x86, 0x4c, 0xd2, 0x24, 0x10, 0x5f, 0xfb, 0x2c, 0x70, 0x85, 0x65, 0x76, 0x51, 0xbf, 0x35, 0x7c,
	0xdb, 0xd6, 0x01, 0xb0, 0xb3, 0x00, 0xd8, 0x23, 0x15, 0x00, 0x52, 0x82, 0x77, 0xbe, 0x84, 0xd7,
	0x4b, 0xfc, 0x4f, 0x72, 0xfc, 0x6f, 0x04, 0x8d, 0x0b, 0xee, 0xb2, 0xa0, 0xe8, 0x01, 0x2a, 0x7b,
	0x70, 0x52, 0x50, 0x6b, 0x28, 0xb5, 0xef, 0x97, 0xd4, 0x26, 0x34, 0x2b, 0xc5, 0x0e, 0xc0, 0xbc,
	0xd1, 0x22, 0xeb, 0xab, 0x45, 0xa6, 0xb0, 0xe7, 0x8a, 0xfb, 0x1d, 0x01, 0xa8, 0xae, 0x8e, 0xa9,
	0x74, 0x6e, 0xf1, 0xb7, 0xd0, 0xf2, 0x02, 0x3e, 0xa1, 0xc1, 0x58, 0xe5, 0x1a, 0x29, 0x11, 0xfd,
	0x0a, 0x11, 0x0a, 0x6e, 0x7f, 0xa3, 0xb0, 0xf3, 0x6c, 0x83, 0x97, 0x17, 0xf0, 0xc7, 0x60, 0x86,
	0x09, 0x32, 0xb3, 0x62, 0xab, 0x82, 0x85, 0xa4, 0x90, 0x44, 0x45, 0x89, 0xeb, 0x49, 0x2a, 0xfe,
	0x30, 0x60, 0x63, 0x24, 0xa9, 0x8c, 0x05, 0x61, 0x22, 0x0e, 0x64, 0x92, 0xe2, 0x1b, 0xea, 0x07,
	0x4c, 0x1f, 0x8c, 0x06, 0x49, 0x57, 0xc9, 0x1b, 0x14, 0xb1, 0xe3, 0x30, 0xe6, 0x32, 0x57, 0xd1,
	0x34, 0xc8, 0xbc, 0x80, 0x2d, 0x58, 0x0f, 0x99, 0x10, 0xd4, 0xd3, 0x39, 0x6e, 0x92, 0x6c, 0x89,
	0xaf, 0x61, 0x5b, 0x33, 0x14, 0xce, 0x5e, 0x96, 0xe9, 0x6e, 0x51, 0x5a, 0x01, 0x73, 0x16, 0x45,
	0x3c, 0x22, 0x95, 0xbb, 0xf1, 0x15, 0x6c, 0xe9, 0xfa, 0xe2, 0xa8, 0x10, 0x56, 0x43, 0x91, 0xbe,
	0xb7, 0x7c, 0x9a, 0x68, 0xce, 0xaa, 0xbd, 0xf8, 0x10, 0xda, 0xba, 0x9c, 0x91, 0x99, 0x8a, 0xec,
	0x9d, 0xaa, 0x53, 0xa7, 0x69, 0x8a, 0xf8, 0x24, 0x10, 0x6d, 0x7d, 0xfd, 0x43, 0x44, 0x67, 0x33,
	0x16, 0xe1, 0x3d, 0x30, 0xa5, 0x7a, 0x86, 0xf2, 0xb2, 0x35, 0xec, 0x2c, 0x6f, 0xec, 0xbc, 0x46,
	0x52, 0x2c, 0xde, 0x87, 0x75, 0x47, 0xab, 0x55, 0x3e, 0xb7, 0x86, 0x2f, 0x57, 0x98, 0x74, 0x5e,
	0x23, 0x19, 0x1a, 0xef, 0x41, 0xd3, 0xa1, 0x53, 0x3e, 0xf5, 0x1d, 0x1a, 0xa4, 0x87, 0x60, 0xbb,
	0xaa, 0xfb, 0xf3, 0x1a, 0x99, 0x03, 0x8f, 0xdb, 0xd0, 0xd2, 0x83, 0x6a, 0x2c, 0xef, 0x67, 0xac,
	0xf7, 0x17, 0x82, 0x96, 0x86, 0xe9, 0x5c, 0x7f, 0x57, 0xcc, 0xb5, 0x4e, 0xe4, 0x87, 0x55, 0xb4,
	0x8f, 0x07, 0xfb, 0xb3, 0x24, 0x25, 0xda, 0xdc, 0xba, 0xe2, 0x79, 0x59, 0xc5, 0x93, 0xba, 0x47,
	0x32, 0xec, 0x73, 0x23, 0x3e, 0x06, 0xfc, 0x30, 0x57, 0x09, 0x9e, 0x25, 0x17, 0x29, 0x87, 0x5e,
	0xe0, 0xdd, 0x7c, 0x86, 0x3f, 0x6e, 0x7d, 0x36, 0xe0, 0x7b, 0x57, 0x99, 0x63, 0xab, 0x98, 0x3f,
	0x29, 0x31, 0x57, 0xbe, 0x99, 0x9c, 0xf2, 0x67, 0x78, 0xe3, 0x41, 0x6c, 0x97, 0x10, 0x0f, 0x4b,
	0xc4, 0x2b, 0x42, 0x96, 0xd3, 0xff, 0x8b, 0x60, 0x3d, 0xcb, 0xfd, 0x47, 0xf0, 0xc2, 0x65, 0x52,
	0x25, 0x99, 0x30, 0x31, 0xe3, 0x53, 0xc1, 0xd4, 0x03, 0x5e, 0x23, 0x0f, 0xea, 0xf8, 0x04, 0x36,
	0x9d, 0xe2, 0x31, 0xae, 0x7c, 0x8f, 0x45, 0x9b, 0x4a, 0x5b, 0xf0, 0x11, 0xb4, 0x65, 0xe1, 0xd4,
	0xea, 0x51, 0xb0, 0xaa, 0xef, 0xe2, 0x06, 0x6c, 0xcf, 0x73, 0xa4, 0x4f, 0x7c, 0xb5, 0x99, 0x19,
	0x68, 0xf8, 0x0f, 0x82, 0xad, 0x53, 0x2a, 0x29, 0x49, 0x3f, 0x8a, 0x46, 0x2c, 0xba, 0xf3, 0x1d,
	0x86, 0xbf, 0x02, 0xb8, 0x8c, 0xf3, 0xbe, 0xde, 0xac, 0x22, 0x11, 0x9d, 0x52, 0x5f, 0x8b, 0xc3,
	0xb2, 0x57, 0xc3, 0x47, 0xd0, 0xcc, 0x29, 0xf0, 0xaa, 0x38, 0x77, 0x70, 0xf1, 0xa6, 0xfa, 0xc4,
	0xaa, 0xf5, 0x51, 0x32, 0x77, 0x2e, 0xe3, 0x49, 0xe0, 0x8b, 0x5b, 0x35, 0xd8, 0x05, 0xb6, 0x96,
	0xfd, 0x69, 0x54, 0x53, 0x1c, 0xff, 0x04, 0xef, 0xf2, 0xc8, 0x2b, 0xde, 0x72, 0x17, 0xd4, 0x5e,
	0xa2, 0x1f, 0x3f, 0xf7, 0x7c, 0x79, 0x1b, 0x4f, 0x6c, 0x87, 0x87, 0x83, 0xf4, 0x5b, 0x51, 0xff,
	0x7c, 0x9a, 0xfd, 0x39, 0x8a, 0x81, 0xc7, 0xab, 0xbe, 0x1f, 0x27, 0xa6, 0x42, 0xec, 0xfe, 0x17,
	0x00, 0x00, 0xff, 0xff, 0x75, 0xd4, 0xbf, 0xb0, 0x64, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataReceiverServiceClient is the client API for DataReceiverService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataReceiverServiceClient interface {
	// Send MetricBatch
	PutMetrics(ctx context.Context, in *Metrics, opts ...grpc.CallOption) (*StatusResult, error)
	// Stream Metric of any type
	PutMetric(ctx context.Context, opts ...grpc.CallOption) (DataReceiverService_PutMetricClient, error)
	// Send model batch
	PublishModels(ctx context.Context, in *ModelBatch, opts ...grpc.CallOption) (*Void, error)
}

type dataReceiverServiceClient struct {
	cc *grpc.ClientConn
}

func NewDataReceiverServiceClient(cc *grpc.ClientConn) DataReceiverServiceClient {
	return &dataReceiverServiceClient{cc}
}

func (c *dataReceiverServiceClient) PutMetrics(ctx context.Context, in *Metrics, opts ...grpc.CallOption) (*StatusResult, error) {
	out := new(StatusResult)
	err := c.cc.Invoke(ctx, "/zenoss.cloud.DataReceiverService/PutMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataReceiverServiceClient) PutMetric(ctx context.Context, opts ...grpc.CallOption) (DataReceiverService_PutMetricClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DataReceiverService_serviceDesc.Streams[0], "/zenoss.cloud.DataReceiverService/PutMetric", opts...)
	if err != nil {
		return nil, err
	}
	x := &dataReceiverServicePutMetricClient{stream}
	return x, nil
}

type DataReceiverService_PutMetricClient interface {
	Send(*MetricWrapper) error
	CloseAndRecv() (*Void, error)
	grpc.ClientStream
}

type dataReceiverServicePutMetricClient struct {
	grpc.ClientStream
}

func (x *dataReceiverServicePutMetricClient) Send(m *MetricWrapper) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dataReceiverServicePutMetricClient) CloseAndRecv() (*Void, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Void)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dataReceiverServiceClient) PublishModels(ctx context.Context, in *ModelBatch, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/zenoss.cloud.DataReceiverService/PublishModels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataReceiverServiceServer is the server API for DataReceiverService service.
type DataReceiverServiceServer interface {
	// Send MetricBatch
	PutMetrics(context.Context, *Metrics) (*StatusResult, error)
	// Stream Metric of any type
	PutMetric(DataReceiverService_PutMetricServer) error
	// Send model batch
	PublishModels(context.Context, *ModelBatch) (*Void, error)
}

func RegisterDataReceiverServiceServer(s *grpc.Server, srv DataReceiverServiceServer) {
	s.RegisterService(&_DataReceiverService_serviceDesc, srv)
}

func _DataReceiverService_PutMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Metrics)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataReceiverServiceServer).PutMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zenoss.cloud.DataReceiverService/PutMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataReceiverServiceServer).PutMetrics(ctx, req.(*Metrics))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataReceiverService_PutMetric_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DataReceiverServiceServer).PutMetric(&dataReceiverServicePutMetricServer{stream})
}

type DataReceiverService_PutMetricServer interface {
	SendAndClose(*Void) error
	Recv() (*MetricWrapper, error)
	grpc.ServerStream
}

type dataReceiverServicePutMetricServer struct {
	grpc.ServerStream
}

func (x *dataReceiverServicePutMetricServer) SendAndClose(m *Void) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dataReceiverServicePutMetricServer) Recv() (*MetricWrapper, error) {
	m := new(MetricWrapper)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _DataReceiverService_PublishModels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModelBatch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataReceiverServiceServer).PublishModels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zenoss.cloud.DataReceiverService/PublishModels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataReceiverServiceServer).PublishModels(ctx, req.(*ModelBatch))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataReceiverService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zenoss.cloud.DataReceiverService",
	HandlerType: (*DataReceiverServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PutMetrics",
			Handler:    _DataReceiverService_PutMetrics_Handler,
		},
		{
			MethodName: "PublishModels",
			Handler:    _DataReceiverService_PublishModels_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PutMetric",
			Handler:       _DataReceiverService_PutMetric_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "zenoss/cloud/data_receiver.proto",
}
