syntax = "proto3";
package zenoss.cloud.collection_cfg;

option go_package = "github.com/zenoss/zenoss-protobufs/go/cloud/collection";
option java_package = "org.zenoss.cloud.collection";
option java_multiple_files = true;

// CollectionConfigService is the gRPC & HTTP service responsible for managing
// collection configurations.
service CollectionConfigService {
  rpc WaitForProbeConfig(stream WaitForProbeConfigResponse)
      returns (stream WaitForProbeConfigRequest) {}
  rpc GetConfigStream(GetConfigStreamRequest)
      returns (stream GetConfigStreamResponse) {}
}

message Config {
  string id = 1;
  string name = 2;
  string tenant = 3;
  Configuration configuration = 4;
}

message Configuration {
  string type = 1;
  string data = 2;
}

message ListConfigsRequest {}

message ListConfigsResponse { repeated Config configurations = 1; }

message GetConfigRequest { string name = 1; }

message GetConfigResponse { Config configuration = 1; }

message CreateConfigRequest { Config configuration = 1; }

message UpdateConfigRequest { Config configuration = 1; }

message DeleteConfigRequest { string name = 1; }

message DeleteConfigResponse { string name = 1; }

message ProbeSuccess {}

message ProbeError {
  string description = 1;
  repeated FieldError field_errors = 2;
}

message FieldError {
  string field = 1;
  string description = 2;
}

message ProbeResult {
  oneof result {
    ProbeSuccess success = 1;
    ProbeError error = 2;
  }
}

message WaitForProbeConfigRequest {
  Config configuration = 1;
  int64 deadline = 2;
}

message WaitForProbeConfigResponse {
  string config_id = 1;
  ProbeResult result = 2;
}

message ProbeConfigRequest { Config configuration = 1; }

message ProbeConfigResponse { ProbeResult result = 1; }

message GetConfigStreamRequest {}

message GetConfigStreamResponse { repeated Config configuration = 1; }