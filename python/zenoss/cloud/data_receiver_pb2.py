# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: zenoss/cloud/data_receiver.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='zenoss/cloud/data_receiver.proto',
  package='zenoss.cloud',
  syntax='proto3',
  serialized_options=_b('\n\035org.zenoss.cloud.dataReceiverP\001Z9github.com/zenoss/zenoss-protobufs/go/cloud/data_receiver'),
  serialized_pb=_b('\n zenoss/cloud/data_receiver.proto\x12\x0czenoss.cloud\x1a\x1cgoogle/protobuf/struct.proto\"\x06\n\x04Void\"\xa1\x01\n\x0cTaggedMetric\x12\x0e\n\x06metric\x18\x01 \x01(\t\x12\x11\n\ttimestamp\x18\x02 \x01(\x03\x12\r\n\x05value\x18\x03 \x01(\x01\x12\x32\n\x04tags\x18\x04 \x03(\x0b\x32$.zenoss.cloud.TaggedMetric.TagsEntry\x1a+\n\tTagsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"=\n\rCompactMetric\x12\n\n\x02id\x18\x01 \x01(\t\x12\x11\n\ttimestamp\x18\x02 \x01(\x03\x12\r\n\x05value\x18\x03 \x01(\x01\"\xd8\x01\n\x06Metric\x12\x0e\n\x06metric\x18\x01 \x01(\t\x12\x11\n\ttimestamp\x18\x02 \x01(\x03\x12\r\n\x05value\x18\x03 \x01(\x01\x12\x38\n\ndimensions\x18\x04 \x03(\x0b\x32$.zenoss.cloud.Metric.DimensionsEntry\x12/\n\x0emetadataFields\x18\x06 \x01(\x0b\x32\x17.google.protobuf.Struct\x1a\x31\n\x0f\x44imensionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xaf\x01\n\x05Model\x12\x11\n\ttimestamp\x18\x01 \x01(\x03\x12\x37\n\ndimensions\x18\x02 \x03(\x0b\x32#.zenoss.cloud.Model.DimensionsEntry\x12\'\n\x06\x66ields\x18\x03 \x01(\x0b\x32\x17.google.protobuf.Struct\x1a\x31\n\x0f\x44imensionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa3\x01\n\nModelBatch\x12=\n\x0bglobal_tags\x18\x01 \x03(\x0b\x32(.zenoss.cloud.ModelBatch.GlobalTagsEntry\x12#\n\x06models\x18\x02 \x03(\x0b\x32\x13.zenoss.cloud.Model\x1a\x31\n\x0fGlobalTagsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf2\x01\n\x0cStatusResult\x12\x0e\n\x06\x66\x61iled\x18\x01 \x01(\x05\x12\x11\n\tsucceeded\x18\x02 \x01(\x05\x12\x0f\n\x07message\x18\x03 \x01(\t\x12>\n\x14\x66\x61iledCompactMetrics\x18\x04 \x03(\x0b\x32 .zenoss.cloud.CompactMetricError\x12<\n\x13\x66\x61iledTaggedMetrics\x18\x05 \x03(\x0b\x32\x1f.zenoss.cloud.TaggedMetricError\x12\x30\n\rfailedMetrics\x18\x06 \x03(\x0b\x32\x19.zenoss.cloud.MetricError\"\xa7\x01\n\rMetricWrapper\x12,\n\x06tagged\x18\x01 \x01(\x0b\x32\x1a.zenoss.cloud.TaggedMetricH\x00\x12.\n\x07\x63ompact\x18\x02 \x01(\x0b\x32\x1b.zenoss.cloud.CompactMetricH\x00\x12)\n\tcanonical\x18\x03 \x01(\x0b\x32\x14.zenoss.cloud.MetricH\x00\x42\r\n\x0bmetric_type\"\xae\x01\n\x0bMetricBatch\x12>\n\x0bglobal_tags\x18\x02 \x03(\x0b\x32).zenoss.cloud.MetricBatch.GlobalTagsEntry\x12,\n\x07metrics\x18\x03 \x03(\x0b\x32\x1b.zenoss.cloud.MetricWrapper\x1a\x31\n\x0fGlobalTagsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"P\n\x12\x43ompactMetricError\x12\r\n\x05\x65rror\x18\x01 \x01(\t\x12+\n\x06metric\x18\x02 \x01(\x0b\x32\x1b.zenoss.cloud.CompactMetric\"B\n\x0bMetricError\x12\r\n\x05\x65rror\x18\x01 \x01(\t\x12$\n\x06metric\x18\x02 \x01(\x0b\x32\x14.zenoss.cloud.Metric\"N\n\x11TaggedMetricError\x12\r\n\x05\x65rror\x18\x01 \x01(\t\x12*\n\x06metric\x18\x02 \x01(\x0b\x32\x1a.zenoss.cloud.TaggedMetric\"\xb2\x01\n\x07Metrics\x12\x18\n\x10\x64\x65tailedResponse\x18\x01 \x01(\x08\x12\x33\n\x0e\x63ompactMetrics\x18\x03 \x03(\x0b\x32\x1b.zenoss.cloud.CompactMetric\x12\x31\n\rtaggedMetrics\x18\x04 \x03(\x0b\x32\x1a.zenoss.cloud.TaggedMetric\x12%\n\x07metrics\x18\x05 \x03(\x0b\x32\x14.zenoss.cloud.Metric2\xdb\x01\n\x13\x44\x61taReceiverService\x12\x41\n\nPutMetrics\x12\x15.zenoss.cloud.Metrics\x1a\x1a.zenoss.cloud.StatusResult\"\x00\x12@\n\tPutMetric\x12\x1b.zenoss.cloud.MetricWrapper\x1a\x12.zenoss.cloud.Void\"\x00(\x01\x12?\n\rPublishModels\x12\x18.zenoss.cloud.ModelBatch\x1a\x12.zenoss.cloud.Void\"\x00\x42\\\n\x1dorg.zenoss.cloud.dataReceiverP\x01Z9github.com/zenoss/zenoss-protobufs/go/cloud/data_receiverb\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_struct__pb2.DESCRIPTOR,])




_VOID = _descriptor.Descriptor(
  name='Void',
  full_name='zenoss.cloud.Void',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=80,
  serialized_end=86,
)


_TAGGEDMETRIC_TAGSENTRY = _descriptor.Descriptor(
  name='TagsEntry',
  full_name='zenoss.cloud.TaggedMetric.TagsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='zenoss.cloud.TaggedMetric.TagsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='zenoss.cloud.TaggedMetric.TagsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=207,
  serialized_end=250,
)

_TAGGEDMETRIC = _descriptor.Descriptor(
  name='TaggedMetric',
  full_name='zenoss.cloud.TaggedMetric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='metric', full_name='zenoss.cloud.TaggedMetric.metric', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='zenoss.cloud.TaggedMetric.timestamp', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='zenoss.cloud.TaggedMetric.value', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tags', full_name='zenoss.cloud.TaggedMetric.tags', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_TAGGEDMETRIC_TAGSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=89,
  serialized_end=250,
)


_COMPACTMETRIC = _descriptor.Descriptor(
  name='CompactMetric',
  full_name='zenoss.cloud.CompactMetric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='zenoss.cloud.CompactMetric.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='zenoss.cloud.CompactMetric.timestamp', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='zenoss.cloud.CompactMetric.value', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=252,
  serialized_end=313,
)


_METRIC_DIMENSIONSENTRY = _descriptor.Descriptor(
  name='DimensionsEntry',
  full_name='zenoss.cloud.Metric.DimensionsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='zenoss.cloud.Metric.DimensionsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='zenoss.cloud.Metric.DimensionsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=483,
  serialized_end=532,
)

_METRIC = _descriptor.Descriptor(
  name='Metric',
  full_name='zenoss.cloud.Metric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='metric', full_name='zenoss.cloud.Metric.metric', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='zenoss.cloud.Metric.timestamp', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='zenoss.cloud.Metric.value', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dimensions', full_name='zenoss.cloud.Metric.dimensions', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='metadataFields', full_name='zenoss.cloud.Metric.metadataFields', index=4,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_METRIC_DIMENSIONSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=316,
  serialized_end=532,
)


_MODEL_DIMENSIONSENTRY = _descriptor.Descriptor(
  name='DimensionsEntry',
  full_name='zenoss.cloud.Model.DimensionsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='zenoss.cloud.Model.DimensionsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='zenoss.cloud.Model.DimensionsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=483,
  serialized_end=532,
)

_MODEL = _descriptor.Descriptor(
  name='Model',
  full_name='zenoss.cloud.Model',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='zenoss.cloud.Model.timestamp', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dimensions', full_name='zenoss.cloud.Model.dimensions', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fields', full_name='zenoss.cloud.Model.fields', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_MODEL_DIMENSIONSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=535,
  serialized_end=710,
)


_MODELBATCH_GLOBALTAGSENTRY = _descriptor.Descriptor(
  name='GlobalTagsEntry',
  full_name='zenoss.cloud.ModelBatch.GlobalTagsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='zenoss.cloud.ModelBatch.GlobalTagsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='zenoss.cloud.ModelBatch.GlobalTagsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=827,
  serialized_end=876,
)

_MODELBATCH = _descriptor.Descriptor(
  name='ModelBatch',
  full_name='zenoss.cloud.ModelBatch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='global_tags', full_name='zenoss.cloud.ModelBatch.global_tags', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='models', full_name='zenoss.cloud.ModelBatch.models', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_MODELBATCH_GLOBALTAGSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=713,
  serialized_end=876,
)


_STATUSRESULT = _descriptor.Descriptor(
  name='StatusResult',
  full_name='zenoss.cloud.StatusResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='failed', full_name='zenoss.cloud.StatusResult.failed', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='succeeded', full_name='zenoss.cloud.StatusResult.succeeded', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message', full_name='zenoss.cloud.StatusResult.message', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='failedCompactMetrics', full_name='zenoss.cloud.StatusResult.failedCompactMetrics', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='failedTaggedMetrics', full_name='zenoss.cloud.StatusResult.failedTaggedMetrics', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='failedMetrics', full_name='zenoss.cloud.StatusResult.failedMetrics', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=879,
  serialized_end=1121,
)


_METRICWRAPPER = _descriptor.Descriptor(
  name='MetricWrapper',
  full_name='zenoss.cloud.MetricWrapper',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tagged', full_name='zenoss.cloud.MetricWrapper.tagged', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='compact', full_name='zenoss.cloud.MetricWrapper.compact', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='canonical', full_name='zenoss.cloud.MetricWrapper.canonical', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='metric_type', full_name='zenoss.cloud.MetricWrapper.metric_type',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1124,
  serialized_end=1291,
)


_METRICBATCH_GLOBALTAGSENTRY = _descriptor.Descriptor(
  name='GlobalTagsEntry',
  full_name='zenoss.cloud.MetricBatch.GlobalTagsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='zenoss.cloud.MetricBatch.GlobalTagsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='zenoss.cloud.MetricBatch.GlobalTagsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=827,
  serialized_end=876,
)

_METRICBATCH = _descriptor.Descriptor(
  name='MetricBatch',
  full_name='zenoss.cloud.MetricBatch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='global_tags', full_name='zenoss.cloud.MetricBatch.global_tags', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='metrics', full_name='zenoss.cloud.MetricBatch.metrics', index=1,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_METRICBATCH_GLOBALTAGSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1294,
  serialized_end=1468,
)


_COMPACTMETRICERROR = _descriptor.Descriptor(
  name='CompactMetricError',
  full_name='zenoss.cloud.CompactMetricError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='error', full_name='zenoss.cloud.CompactMetricError.error', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='metric', full_name='zenoss.cloud.CompactMetricError.metric', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1470,
  serialized_end=1550,
)


_METRICERROR = _descriptor.Descriptor(
  name='MetricError',
  full_name='zenoss.cloud.MetricError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='error', full_name='zenoss.cloud.MetricError.error', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='metric', full_name='zenoss.cloud.MetricError.metric', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1552,
  serialized_end=1618,
)


_TAGGEDMETRICERROR = _descriptor.Descriptor(
  name='TaggedMetricError',
  full_name='zenoss.cloud.TaggedMetricError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='error', full_name='zenoss.cloud.TaggedMetricError.error', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='metric', full_name='zenoss.cloud.TaggedMetricError.metric', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1620,
  serialized_end=1698,
)


_METRICS = _descriptor.Descriptor(
  name='Metrics',
  full_name='zenoss.cloud.Metrics',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='detailedResponse', full_name='zenoss.cloud.Metrics.detailedResponse', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='compactMetrics', full_name='zenoss.cloud.Metrics.compactMetrics', index=1,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='taggedMetrics', full_name='zenoss.cloud.Metrics.taggedMetrics', index=2,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='metrics', full_name='zenoss.cloud.Metrics.metrics', index=3,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1701,
  serialized_end=1879,
)

_TAGGEDMETRIC_TAGSENTRY.containing_type = _TAGGEDMETRIC
_TAGGEDMETRIC.fields_by_name['tags'].message_type = _TAGGEDMETRIC_TAGSENTRY
_METRIC_DIMENSIONSENTRY.containing_type = _METRIC
_METRIC.fields_by_name['dimensions'].message_type = _METRIC_DIMENSIONSENTRY
_METRIC.fields_by_name['metadataFields'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
_MODEL_DIMENSIONSENTRY.containing_type = _MODEL
_MODEL.fields_by_name['dimensions'].message_type = _MODEL_DIMENSIONSENTRY
_MODEL.fields_by_name['fields'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
_MODELBATCH_GLOBALTAGSENTRY.containing_type = _MODELBATCH
_MODELBATCH.fields_by_name['global_tags'].message_type = _MODELBATCH_GLOBALTAGSENTRY
_MODELBATCH.fields_by_name['models'].message_type = _MODEL
_STATUSRESULT.fields_by_name['failedCompactMetrics'].message_type = _COMPACTMETRICERROR
_STATUSRESULT.fields_by_name['failedTaggedMetrics'].message_type = _TAGGEDMETRICERROR
_STATUSRESULT.fields_by_name['failedMetrics'].message_type = _METRICERROR
_METRICWRAPPER.fields_by_name['tagged'].message_type = _TAGGEDMETRIC
_METRICWRAPPER.fields_by_name['compact'].message_type = _COMPACTMETRIC
_METRICWRAPPER.fields_by_name['canonical'].message_type = _METRIC
_METRICWRAPPER.oneofs_by_name['metric_type'].fields.append(
  _METRICWRAPPER.fields_by_name['tagged'])
_METRICWRAPPER.fields_by_name['tagged'].containing_oneof = _METRICWRAPPER.oneofs_by_name['metric_type']
_METRICWRAPPER.oneofs_by_name['metric_type'].fields.append(
  _METRICWRAPPER.fields_by_name['compact'])
_METRICWRAPPER.fields_by_name['compact'].containing_oneof = _METRICWRAPPER.oneofs_by_name['metric_type']
_METRICWRAPPER.oneofs_by_name['metric_type'].fields.append(
  _METRICWRAPPER.fields_by_name['canonical'])
_METRICWRAPPER.fields_by_name['canonical'].containing_oneof = _METRICWRAPPER.oneofs_by_name['metric_type']
_METRICBATCH_GLOBALTAGSENTRY.containing_type = _METRICBATCH
_METRICBATCH.fields_by_name['global_tags'].message_type = _METRICBATCH_GLOBALTAGSENTRY
_METRICBATCH.fields_by_name['metrics'].message_type = _METRICWRAPPER
_COMPACTMETRICERROR.fields_by_name['metric'].message_type = _COMPACTMETRIC
_METRICERROR.fields_by_name['metric'].message_type = _METRIC
_TAGGEDMETRICERROR.fields_by_name['metric'].message_type = _TAGGEDMETRIC
_METRICS.fields_by_name['compactMetrics'].message_type = _COMPACTMETRIC
_METRICS.fields_by_name['taggedMetrics'].message_type = _TAGGEDMETRIC
_METRICS.fields_by_name['metrics'].message_type = _METRIC
DESCRIPTOR.message_types_by_name['Void'] = _VOID
DESCRIPTOR.message_types_by_name['TaggedMetric'] = _TAGGEDMETRIC
DESCRIPTOR.message_types_by_name['CompactMetric'] = _COMPACTMETRIC
DESCRIPTOR.message_types_by_name['Metric'] = _METRIC
DESCRIPTOR.message_types_by_name['Model'] = _MODEL
DESCRIPTOR.message_types_by_name['ModelBatch'] = _MODELBATCH
DESCRIPTOR.message_types_by_name['StatusResult'] = _STATUSRESULT
DESCRIPTOR.message_types_by_name['MetricWrapper'] = _METRICWRAPPER
DESCRIPTOR.message_types_by_name['MetricBatch'] = _METRICBATCH
DESCRIPTOR.message_types_by_name['CompactMetricError'] = _COMPACTMETRICERROR
DESCRIPTOR.message_types_by_name['MetricError'] = _METRICERROR
DESCRIPTOR.message_types_by_name['TaggedMetricError'] = _TAGGEDMETRICERROR
DESCRIPTOR.message_types_by_name['Metrics'] = _METRICS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Void = _reflection.GeneratedProtocolMessageType('Void', (_message.Message,), dict(
  DESCRIPTOR = _VOID,
  __module__ = 'zenoss.cloud.data_receiver_pb2'
  # @@protoc_insertion_point(class_scope:zenoss.cloud.Void)
  ))
_sym_db.RegisterMessage(Void)

TaggedMetric = _reflection.GeneratedProtocolMessageType('TaggedMetric', (_message.Message,), dict(

  TagsEntry = _reflection.GeneratedProtocolMessageType('TagsEntry', (_message.Message,), dict(
    DESCRIPTOR = _TAGGEDMETRIC_TAGSENTRY,
    __module__ = 'zenoss.cloud.data_receiver_pb2'
    # @@protoc_insertion_point(class_scope:zenoss.cloud.TaggedMetric.TagsEntry)
    ))
  ,
  DESCRIPTOR = _TAGGEDMETRIC,
  __module__ = 'zenoss.cloud.data_receiver_pb2'
  # @@protoc_insertion_point(class_scope:zenoss.cloud.TaggedMetric)
  ))
_sym_db.RegisterMessage(TaggedMetric)
_sym_db.RegisterMessage(TaggedMetric.TagsEntry)

CompactMetric = _reflection.GeneratedProtocolMessageType('CompactMetric', (_message.Message,), dict(
  DESCRIPTOR = _COMPACTMETRIC,
  __module__ = 'zenoss.cloud.data_receiver_pb2'
  # @@protoc_insertion_point(class_scope:zenoss.cloud.CompactMetric)
  ))
_sym_db.RegisterMessage(CompactMetric)

Metric = _reflection.GeneratedProtocolMessageType('Metric', (_message.Message,), dict(

  DimensionsEntry = _reflection.GeneratedProtocolMessageType('DimensionsEntry', (_message.Message,), dict(
    DESCRIPTOR = _METRIC_DIMENSIONSENTRY,
    __module__ = 'zenoss.cloud.data_receiver_pb2'
    # @@protoc_insertion_point(class_scope:zenoss.cloud.Metric.DimensionsEntry)
    ))
  ,
  DESCRIPTOR = _METRIC,
  __module__ = 'zenoss.cloud.data_receiver_pb2'
  # @@protoc_insertion_point(class_scope:zenoss.cloud.Metric)
  ))
_sym_db.RegisterMessage(Metric)
_sym_db.RegisterMessage(Metric.DimensionsEntry)

Model = _reflection.GeneratedProtocolMessageType('Model', (_message.Message,), dict(

  DimensionsEntry = _reflection.GeneratedProtocolMessageType('DimensionsEntry', (_message.Message,), dict(
    DESCRIPTOR = _MODEL_DIMENSIONSENTRY,
    __module__ = 'zenoss.cloud.data_receiver_pb2'
    # @@protoc_insertion_point(class_scope:zenoss.cloud.Model.DimensionsEntry)
    ))
  ,
  DESCRIPTOR = _MODEL,
  __module__ = 'zenoss.cloud.data_receiver_pb2'
  # @@protoc_insertion_point(class_scope:zenoss.cloud.Model)
  ))
_sym_db.RegisterMessage(Model)
_sym_db.RegisterMessage(Model.DimensionsEntry)

ModelBatch = _reflection.GeneratedProtocolMessageType('ModelBatch', (_message.Message,), dict(

  GlobalTagsEntry = _reflection.GeneratedProtocolMessageType('GlobalTagsEntry', (_message.Message,), dict(
    DESCRIPTOR = _MODELBATCH_GLOBALTAGSENTRY,
    __module__ = 'zenoss.cloud.data_receiver_pb2'
    # @@protoc_insertion_point(class_scope:zenoss.cloud.ModelBatch.GlobalTagsEntry)
    ))
  ,
  DESCRIPTOR = _MODELBATCH,
  __module__ = 'zenoss.cloud.data_receiver_pb2'
  # @@protoc_insertion_point(class_scope:zenoss.cloud.ModelBatch)
  ))
_sym_db.RegisterMessage(ModelBatch)
_sym_db.RegisterMessage(ModelBatch.GlobalTagsEntry)

StatusResult = _reflection.GeneratedProtocolMessageType('StatusResult', (_message.Message,), dict(
  DESCRIPTOR = _STATUSRESULT,
  __module__ = 'zenoss.cloud.data_receiver_pb2'
  # @@protoc_insertion_point(class_scope:zenoss.cloud.StatusResult)
  ))
_sym_db.RegisterMessage(StatusResult)

MetricWrapper = _reflection.GeneratedProtocolMessageType('MetricWrapper', (_message.Message,), dict(
  DESCRIPTOR = _METRICWRAPPER,
  __module__ = 'zenoss.cloud.data_receiver_pb2'
  # @@protoc_insertion_point(class_scope:zenoss.cloud.MetricWrapper)
  ))
_sym_db.RegisterMessage(MetricWrapper)

MetricBatch = _reflection.GeneratedProtocolMessageType('MetricBatch', (_message.Message,), dict(

  GlobalTagsEntry = _reflection.GeneratedProtocolMessageType('GlobalTagsEntry', (_message.Message,), dict(
    DESCRIPTOR = _METRICBATCH_GLOBALTAGSENTRY,
    __module__ = 'zenoss.cloud.data_receiver_pb2'
    # @@protoc_insertion_point(class_scope:zenoss.cloud.MetricBatch.GlobalTagsEntry)
    ))
  ,
  DESCRIPTOR = _METRICBATCH,
  __module__ = 'zenoss.cloud.data_receiver_pb2'
  # @@protoc_insertion_point(class_scope:zenoss.cloud.MetricBatch)
  ))
_sym_db.RegisterMessage(MetricBatch)
_sym_db.RegisterMessage(MetricBatch.GlobalTagsEntry)

CompactMetricError = _reflection.GeneratedProtocolMessageType('CompactMetricError', (_message.Message,), dict(
  DESCRIPTOR = _COMPACTMETRICERROR,
  __module__ = 'zenoss.cloud.data_receiver_pb2'
  # @@protoc_insertion_point(class_scope:zenoss.cloud.CompactMetricError)
  ))
_sym_db.RegisterMessage(CompactMetricError)

MetricError = _reflection.GeneratedProtocolMessageType('MetricError', (_message.Message,), dict(
  DESCRIPTOR = _METRICERROR,
  __module__ = 'zenoss.cloud.data_receiver_pb2'
  # @@protoc_insertion_point(class_scope:zenoss.cloud.MetricError)
  ))
_sym_db.RegisterMessage(MetricError)

TaggedMetricError = _reflection.GeneratedProtocolMessageType('TaggedMetricError', (_message.Message,), dict(
  DESCRIPTOR = _TAGGEDMETRICERROR,
  __module__ = 'zenoss.cloud.data_receiver_pb2'
  # @@protoc_insertion_point(class_scope:zenoss.cloud.TaggedMetricError)
  ))
_sym_db.RegisterMessage(TaggedMetricError)

Metrics = _reflection.GeneratedProtocolMessageType('Metrics', (_message.Message,), dict(
  DESCRIPTOR = _METRICS,
  __module__ = 'zenoss.cloud.data_receiver_pb2'
  # @@protoc_insertion_point(class_scope:zenoss.cloud.Metrics)
  ))
_sym_db.RegisterMessage(Metrics)


DESCRIPTOR._options = None
_TAGGEDMETRIC_TAGSENTRY._options = None
_METRIC_DIMENSIONSENTRY._options = None
_MODEL_DIMENSIONSENTRY._options = None
_MODELBATCH_GLOBALTAGSENTRY._options = None
_METRICBATCH_GLOBALTAGSENTRY._options = None

_DATARECEIVERSERVICE = _descriptor.ServiceDescriptor(
  name='DataReceiverService',
  full_name='zenoss.cloud.DataReceiverService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=1882,
  serialized_end=2101,
  methods=[
  _descriptor.MethodDescriptor(
    name='PutMetrics',
    full_name='zenoss.cloud.DataReceiverService.PutMetrics',
    index=0,
    containing_service=None,
    input_type=_METRICS,
    output_type=_STATUSRESULT,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='PutMetric',
    full_name='zenoss.cloud.DataReceiverService.PutMetric',
    index=1,
    containing_service=None,
    input_type=_METRICWRAPPER,
    output_type=_VOID,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='PublishModels',
    full_name='zenoss.cloud.DataReceiverService.PublishModels',
    index=2,
    containing_service=None,
    input_type=_MODELBATCH,
    output_type=_VOID,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_DATARECEIVERSERVICE)

DESCRIPTOR.services_by_name['DataReceiverService'] = _DATARECEIVERSERVICE

# @@protoc_insertion_point(module_scope)
