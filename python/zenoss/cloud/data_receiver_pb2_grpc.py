# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from zenoss.cloud import data_receiver_pb2 as zenoss_dot_cloud_dot_data__receiver__pb2


class DataReceiverServiceStub(object):
  """Data Receiver API
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.PutMetrics = channel.unary_unary(
        '/zenoss.cloud.DataReceiverService/PutMetrics',
        request_serializer=zenoss_dot_cloud_dot_data__receiver__pb2.Metrics.SerializeToString,
        response_deserializer=zenoss_dot_cloud_dot_data__receiver__pb2.StatusResult.FromString,
        )
    self.PutMetric = channel.stream_unary(
        '/zenoss.cloud.DataReceiverService/PutMetric',
        request_serializer=zenoss_dot_cloud_dot_data__receiver__pb2.MetricWrapper.SerializeToString,
        response_deserializer=zenoss_dot_cloud_dot_data__receiver__pb2.Void.FromString,
        )
    self.PublishModels = channel.unary_unary(
        '/zenoss.cloud.DataReceiverService/PublishModels',
        request_serializer=zenoss_dot_cloud_dot_data__receiver__pb2.ModelBatch.SerializeToString,
        response_deserializer=zenoss_dot_cloud_dot_data__receiver__pb2.Void.FromString,
        )


class DataReceiverServiceServicer(object):
  """Data Receiver API
  """

  def PutMetrics(self, request, context):
    """Send MetricBatch
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PutMetric(self, request_iterator, context):
    """Stream Metric of any type
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PublishModels(self, request, context):
    """Send model batch 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DataReceiverServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'PutMetrics': grpc.unary_unary_rpc_method_handler(
          servicer.PutMetrics,
          request_deserializer=zenoss_dot_cloud_dot_data__receiver__pb2.Metrics.FromString,
          response_serializer=zenoss_dot_cloud_dot_data__receiver__pb2.StatusResult.SerializeToString,
      ),
      'PutMetric': grpc.stream_unary_rpc_method_handler(
          servicer.PutMetric,
          request_deserializer=zenoss_dot_cloud_dot_data__receiver__pb2.MetricWrapper.FromString,
          response_serializer=zenoss_dot_cloud_dot_data__receiver__pb2.Void.SerializeToString,
      ),
      'PublishModels': grpc.unary_unary_rpc_method_handler(
          servicer.PublishModels,
          request_deserializer=zenoss_dot_cloud_dot_data__receiver__pb2.ModelBatch.FromString,
          response_serializer=zenoss_dot_cloud_dot_data__receiver__pb2.Void.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'zenoss.cloud.DataReceiverService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
