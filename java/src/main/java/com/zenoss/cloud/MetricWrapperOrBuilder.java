// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zenoss/cloud/data_receiver.proto

package com.zenoss.cloud;

public interface MetricWrapperOrBuilder extends
    // @@protoc_insertion_point(interface_extends:zenoss.cloud.MetricWrapper)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Verbose format
   * </pre>
   *
   * <code>.zenoss.cloud.TaggedMetric tagged = 1 [json_name = "tagged"];</code>
   * @return Whether the tagged field is set.
   */
  boolean hasTagged();
  /**
   * <pre>
   * Verbose format
   * </pre>
   *
   * <code>.zenoss.cloud.TaggedMetric tagged = 1 [json_name = "tagged"];</code>
   * @return The tagged.
   */
  com.zenoss.cloud.TaggedMetric getTagged();
  /**
   * <pre>
   * Verbose format
   * </pre>
   *
   * <code>.zenoss.cloud.TaggedMetric tagged = 1 [json_name = "tagged"];</code>
   */
  com.zenoss.cloud.TaggedMetricOrBuilder getTaggedOrBuilder();

  /**
   * <pre>
   * Compact format
   * </pre>
   *
   * <code>.zenoss.cloud.CompactMetric compact = 2 [json_name = "compact"];</code>
   * @return Whether the compact field is set.
   */
  boolean hasCompact();
  /**
   * <pre>
   * Compact format
   * </pre>
   *
   * <code>.zenoss.cloud.CompactMetric compact = 2 [json_name = "compact"];</code>
   * @return The compact.
   */
  com.zenoss.cloud.CompactMetric getCompact();
  /**
   * <pre>
   * Compact format
   * </pre>
   *
   * <code>.zenoss.cloud.CompactMetric compact = 2 [json_name = "compact"];</code>
   */
  com.zenoss.cloud.CompactMetricOrBuilder getCompactOrBuilder();

  /**
   * <pre>
   * Canonical format
   * </pre>
   *
   * <code>.zenoss.cloud.Metric canonical = 3 [json_name = "canonical"];</code>
   * @return Whether the canonical field is set.
   */
  boolean hasCanonical();
  /**
   * <pre>
   * Canonical format
   * </pre>
   *
   * <code>.zenoss.cloud.Metric canonical = 3 [json_name = "canonical"];</code>
   * @return The canonical.
   */
  com.zenoss.cloud.Metric getCanonical();
  /**
   * <pre>
   * Canonical format
   * </pre>
   *
   * <code>.zenoss.cloud.Metric canonical = 3 [json_name = "canonical"];</code>
   */
  com.zenoss.cloud.MetricOrBuilder getCanonicalOrBuilder();

  com.zenoss.cloud.MetricWrapper.MetricTypeCase getMetricTypeCase();
}
