// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zenoss/cloud/data_receiver.proto

package com.zenoss.cloud;

/**
 * Protobuf type {@code zenoss.cloud.Metrics}
 */
public final class Metrics extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:zenoss.cloud.Metrics)
    MetricsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Metrics.newBuilder() to construct.
  private Metrics(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Metrics() {
    compactMetrics_ = java.util.Collections.emptyList();
    taggedMetrics_ = java.util.Collections.emptyList();
    metrics_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Metrics();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.zenoss.cloud.DataReceiverProto.internal_static_zenoss_cloud_Metrics_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.zenoss.cloud.DataReceiverProto.internal_static_zenoss_cloud_Metrics_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.zenoss.cloud.Metrics.class, com.zenoss.cloud.Metrics.Builder.class);
  }

  public static final int DETAILEDRESPONSE_FIELD_NUMBER = 1;
  private boolean detailedResponse_ = false;
  /**
   * <pre>
   * detailedResponse if set to true will return any metrics that failed to be sent
   * </pre>
   *
   * <code>bool detailedResponse = 1 [json_name = "detailedResponse"];</code>
   * @return The detailedResponse.
   */
  @java.lang.Override
  public boolean getDetailedResponse() {
    return detailedResponse_;
  }

  public static final int COMPACTMETRICS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.zenoss.cloud.CompactMetric> compactMetrics_;
  /**
   * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
   */
  @java.lang.Override
  public java.util.List<com.zenoss.cloud.CompactMetric> getCompactMetricsList() {
    return compactMetrics_;
  }
  /**
   * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.zenoss.cloud.CompactMetricOrBuilder> 
      getCompactMetricsOrBuilderList() {
    return compactMetrics_;
  }
  /**
   * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
   */
  @java.lang.Override
  public int getCompactMetricsCount() {
    return compactMetrics_.size();
  }
  /**
   * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
   */
  @java.lang.Override
  public com.zenoss.cloud.CompactMetric getCompactMetrics(int index) {
    return compactMetrics_.get(index);
  }
  /**
   * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
   */
  @java.lang.Override
  public com.zenoss.cloud.CompactMetricOrBuilder getCompactMetricsOrBuilder(
      int index) {
    return compactMetrics_.get(index);
  }

  public static final int TAGGEDMETRICS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<com.zenoss.cloud.TaggedMetric> taggedMetrics_;
  /**
   * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
   */
  @java.lang.Override
  public java.util.List<com.zenoss.cloud.TaggedMetric> getTaggedMetricsList() {
    return taggedMetrics_;
  }
  /**
   * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.zenoss.cloud.TaggedMetricOrBuilder> 
      getTaggedMetricsOrBuilderList() {
    return taggedMetrics_;
  }
  /**
   * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
   */
  @java.lang.Override
  public int getTaggedMetricsCount() {
    return taggedMetrics_.size();
  }
  /**
   * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
   */
  @java.lang.Override
  public com.zenoss.cloud.TaggedMetric getTaggedMetrics(int index) {
    return taggedMetrics_.get(index);
  }
  /**
   * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
   */
  @java.lang.Override
  public com.zenoss.cloud.TaggedMetricOrBuilder getTaggedMetricsOrBuilder(
      int index) {
    return taggedMetrics_.get(index);
  }

  public static final int METRICS_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private java.util.List<com.zenoss.cloud.Metric> metrics_;
  /**
   * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
   */
  @java.lang.Override
  public java.util.List<com.zenoss.cloud.Metric> getMetricsList() {
    return metrics_;
  }
  /**
   * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.zenoss.cloud.MetricOrBuilder> 
      getMetricsOrBuilderList() {
    return metrics_;
  }
  /**
   * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
   */
  @java.lang.Override
  public int getMetricsCount() {
    return metrics_.size();
  }
  /**
   * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
   */
  @java.lang.Override
  public com.zenoss.cloud.Metric getMetrics(int index) {
    return metrics_.get(index);
  }
  /**
   * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
   */
  @java.lang.Override
  public com.zenoss.cloud.MetricOrBuilder getMetricsOrBuilder(
      int index) {
    return metrics_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (detailedResponse_ != false) {
      output.writeBool(1, detailedResponse_);
    }
    for (int i = 0; i < compactMetrics_.size(); i++) {
      output.writeMessage(3, compactMetrics_.get(i));
    }
    for (int i = 0; i < taggedMetrics_.size(); i++) {
      output.writeMessage(4, taggedMetrics_.get(i));
    }
    for (int i = 0; i < metrics_.size(); i++) {
      output.writeMessage(5, metrics_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (detailedResponse_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, detailedResponse_);
    }
    for (int i = 0; i < compactMetrics_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, compactMetrics_.get(i));
    }
    for (int i = 0; i < taggedMetrics_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, taggedMetrics_.get(i));
    }
    for (int i = 0; i < metrics_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, metrics_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.zenoss.cloud.Metrics)) {
      return super.equals(obj);
    }
    com.zenoss.cloud.Metrics other = (com.zenoss.cloud.Metrics) obj;

    if (getDetailedResponse()
        != other.getDetailedResponse()) return false;
    if (!getCompactMetricsList()
        .equals(other.getCompactMetricsList())) return false;
    if (!getTaggedMetricsList()
        .equals(other.getTaggedMetricsList())) return false;
    if (!getMetricsList()
        .equals(other.getMetricsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DETAILEDRESPONSE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDetailedResponse());
    if (getCompactMetricsCount() > 0) {
      hash = (37 * hash) + COMPACTMETRICS_FIELD_NUMBER;
      hash = (53 * hash) + getCompactMetricsList().hashCode();
    }
    if (getTaggedMetricsCount() > 0) {
      hash = (37 * hash) + TAGGEDMETRICS_FIELD_NUMBER;
      hash = (53 * hash) + getTaggedMetricsList().hashCode();
    }
    if (getMetricsCount() > 0) {
      hash = (37 * hash) + METRICS_FIELD_NUMBER;
      hash = (53 * hash) + getMetricsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.zenoss.cloud.Metrics parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.zenoss.cloud.Metrics parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.zenoss.cloud.Metrics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.zenoss.cloud.Metrics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.zenoss.cloud.Metrics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.zenoss.cloud.Metrics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.zenoss.cloud.Metrics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.zenoss.cloud.Metrics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.zenoss.cloud.Metrics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.zenoss.cloud.Metrics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.zenoss.cloud.Metrics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.zenoss.cloud.Metrics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.zenoss.cloud.Metrics prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code zenoss.cloud.Metrics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:zenoss.cloud.Metrics)
      com.zenoss.cloud.MetricsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.zenoss.cloud.DataReceiverProto.internal_static_zenoss_cloud_Metrics_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.zenoss.cloud.DataReceiverProto.internal_static_zenoss_cloud_Metrics_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.zenoss.cloud.Metrics.class, com.zenoss.cloud.Metrics.Builder.class);
    }

    // Construct using com.zenoss.cloud.Metrics.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      detailedResponse_ = false;
      if (compactMetricsBuilder_ == null) {
        compactMetrics_ = java.util.Collections.emptyList();
      } else {
        compactMetrics_ = null;
        compactMetricsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (taggedMetricsBuilder_ == null) {
        taggedMetrics_ = java.util.Collections.emptyList();
      } else {
        taggedMetrics_ = null;
        taggedMetricsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (metricsBuilder_ == null) {
        metrics_ = java.util.Collections.emptyList();
      } else {
        metrics_ = null;
        metricsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.zenoss.cloud.DataReceiverProto.internal_static_zenoss_cloud_Metrics_descriptor;
    }

    @java.lang.Override
    public com.zenoss.cloud.Metrics getDefaultInstanceForType() {
      return com.zenoss.cloud.Metrics.getDefaultInstance();
    }

    @java.lang.Override
    public com.zenoss.cloud.Metrics build() {
      com.zenoss.cloud.Metrics result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.zenoss.cloud.Metrics buildPartial() {
      com.zenoss.cloud.Metrics result = new com.zenoss.cloud.Metrics(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.zenoss.cloud.Metrics result) {
      if (compactMetricsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          compactMetrics_ = java.util.Collections.unmodifiableList(compactMetrics_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.compactMetrics_ = compactMetrics_;
      } else {
        result.compactMetrics_ = compactMetricsBuilder_.build();
      }
      if (taggedMetricsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          taggedMetrics_ = java.util.Collections.unmodifiableList(taggedMetrics_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.taggedMetrics_ = taggedMetrics_;
      } else {
        result.taggedMetrics_ = taggedMetricsBuilder_.build();
      }
      if (metricsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          metrics_ = java.util.Collections.unmodifiableList(metrics_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.metrics_ = metrics_;
      } else {
        result.metrics_ = metricsBuilder_.build();
      }
    }

    private void buildPartial0(com.zenoss.cloud.Metrics result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.detailedResponse_ = detailedResponse_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.zenoss.cloud.Metrics) {
        return mergeFrom((com.zenoss.cloud.Metrics)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.zenoss.cloud.Metrics other) {
      if (other == com.zenoss.cloud.Metrics.getDefaultInstance()) return this;
      if (other.getDetailedResponse() != false) {
        setDetailedResponse(other.getDetailedResponse());
      }
      if (compactMetricsBuilder_ == null) {
        if (!other.compactMetrics_.isEmpty()) {
          if (compactMetrics_.isEmpty()) {
            compactMetrics_ = other.compactMetrics_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCompactMetricsIsMutable();
            compactMetrics_.addAll(other.compactMetrics_);
          }
          onChanged();
        }
      } else {
        if (!other.compactMetrics_.isEmpty()) {
          if (compactMetricsBuilder_.isEmpty()) {
            compactMetricsBuilder_.dispose();
            compactMetricsBuilder_ = null;
            compactMetrics_ = other.compactMetrics_;
            bitField0_ = (bitField0_ & ~0x00000002);
            compactMetricsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCompactMetricsFieldBuilder() : null;
          } else {
            compactMetricsBuilder_.addAllMessages(other.compactMetrics_);
          }
        }
      }
      if (taggedMetricsBuilder_ == null) {
        if (!other.taggedMetrics_.isEmpty()) {
          if (taggedMetrics_.isEmpty()) {
            taggedMetrics_ = other.taggedMetrics_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureTaggedMetricsIsMutable();
            taggedMetrics_.addAll(other.taggedMetrics_);
          }
          onChanged();
        }
      } else {
        if (!other.taggedMetrics_.isEmpty()) {
          if (taggedMetricsBuilder_.isEmpty()) {
            taggedMetricsBuilder_.dispose();
            taggedMetricsBuilder_ = null;
            taggedMetrics_ = other.taggedMetrics_;
            bitField0_ = (bitField0_ & ~0x00000004);
            taggedMetricsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTaggedMetricsFieldBuilder() : null;
          } else {
            taggedMetricsBuilder_.addAllMessages(other.taggedMetrics_);
          }
        }
      }
      if (metricsBuilder_ == null) {
        if (!other.metrics_.isEmpty()) {
          if (metrics_.isEmpty()) {
            metrics_ = other.metrics_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureMetricsIsMutable();
            metrics_.addAll(other.metrics_);
          }
          onChanged();
        }
      } else {
        if (!other.metrics_.isEmpty()) {
          if (metricsBuilder_.isEmpty()) {
            metricsBuilder_.dispose();
            metricsBuilder_ = null;
            metrics_ = other.metrics_;
            bitField0_ = (bitField0_ & ~0x00000008);
            metricsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMetricsFieldBuilder() : null;
          } else {
            metricsBuilder_.addAllMessages(other.metrics_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              detailedResponse_ = input.readBool();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 26: {
              com.zenoss.cloud.CompactMetric m =
                  input.readMessage(
                      com.zenoss.cloud.CompactMetric.parser(),
                      extensionRegistry);
              if (compactMetricsBuilder_ == null) {
                ensureCompactMetricsIsMutable();
                compactMetrics_.add(m);
              } else {
                compactMetricsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              com.zenoss.cloud.TaggedMetric m =
                  input.readMessage(
                      com.zenoss.cloud.TaggedMetric.parser(),
                      extensionRegistry);
              if (taggedMetricsBuilder_ == null) {
                ensureTaggedMetricsIsMutable();
                taggedMetrics_.add(m);
              } else {
                taggedMetricsBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              com.zenoss.cloud.Metric m =
                  input.readMessage(
                      com.zenoss.cloud.Metric.parser(),
                      extensionRegistry);
              if (metricsBuilder_ == null) {
                ensureMetricsIsMutable();
                metrics_.add(m);
              } else {
                metricsBuilder_.addMessage(m);
              }
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private boolean detailedResponse_ ;
    /**
     * <pre>
     * detailedResponse if set to true will return any metrics that failed to be sent
     * </pre>
     *
     * <code>bool detailedResponse = 1 [json_name = "detailedResponse"];</code>
     * @return The detailedResponse.
     */
    @java.lang.Override
    public boolean getDetailedResponse() {
      return detailedResponse_;
    }
    /**
     * <pre>
     * detailedResponse if set to true will return any metrics that failed to be sent
     * </pre>
     *
     * <code>bool detailedResponse = 1 [json_name = "detailedResponse"];</code>
     * @param value The detailedResponse to set.
     * @return This builder for chaining.
     */
    public Builder setDetailedResponse(boolean value) {

      detailedResponse_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * detailedResponse if set to true will return any metrics that failed to be sent
     * </pre>
     *
     * <code>bool detailedResponse = 1 [json_name = "detailedResponse"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDetailedResponse() {
      bitField0_ = (bitField0_ & ~0x00000001);
      detailedResponse_ = false;
      onChanged();
      return this;
    }

    private java.util.List<com.zenoss.cloud.CompactMetric> compactMetrics_ =
      java.util.Collections.emptyList();
    private void ensureCompactMetricsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        compactMetrics_ = new java.util.ArrayList<com.zenoss.cloud.CompactMetric>(compactMetrics_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.zenoss.cloud.CompactMetric, com.zenoss.cloud.CompactMetric.Builder, com.zenoss.cloud.CompactMetricOrBuilder> compactMetricsBuilder_;

    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
     */
    public java.util.List<com.zenoss.cloud.CompactMetric> getCompactMetricsList() {
      if (compactMetricsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(compactMetrics_);
      } else {
        return compactMetricsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
     */
    public int getCompactMetricsCount() {
      if (compactMetricsBuilder_ == null) {
        return compactMetrics_.size();
      } else {
        return compactMetricsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
     */
    public com.zenoss.cloud.CompactMetric getCompactMetrics(int index) {
      if (compactMetricsBuilder_ == null) {
        return compactMetrics_.get(index);
      } else {
        return compactMetricsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
     */
    public Builder setCompactMetrics(
        int index, com.zenoss.cloud.CompactMetric value) {
      if (compactMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCompactMetricsIsMutable();
        compactMetrics_.set(index, value);
        onChanged();
      } else {
        compactMetricsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
     */
    public Builder setCompactMetrics(
        int index, com.zenoss.cloud.CompactMetric.Builder builderForValue) {
      if (compactMetricsBuilder_ == null) {
        ensureCompactMetricsIsMutable();
        compactMetrics_.set(index, builderForValue.build());
        onChanged();
      } else {
        compactMetricsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
     */
    public Builder addCompactMetrics(com.zenoss.cloud.CompactMetric value) {
      if (compactMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCompactMetricsIsMutable();
        compactMetrics_.add(value);
        onChanged();
      } else {
        compactMetricsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
     */
    public Builder addCompactMetrics(
        int index, com.zenoss.cloud.CompactMetric value) {
      if (compactMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCompactMetricsIsMutable();
        compactMetrics_.add(index, value);
        onChanged();
      } else {
        compactMetricsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
     */
    public Builder addCompactMetrics(
        com.zenoss.cloud.CompactMetric.Builder builderForValue) {
      if (compactMetricsBuilder_ == null) {
        ensureCompactMetricsIsMutable();
        compactMetrics_.add(builderForValue.build());
        onChanged();
      } else {
        compactMetricsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
     */
    public Builder addCompactMetrics(
        int index, com.zenoss.cloud.CompactMetric.Builder builderForValue) {
      if (compactMetricsBuilder_ == null) {
        ensureCompactMetricsIsMutable();
        compactMetrics_.add(index, builderForValue.build());
        onChanged();
      } else {
        compactMetricsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
     */
    public Builder addAllCompactMetrics(
        java.lang.Iterable<? extends com.zenoss.cloud.CompactMetric> values) {
      if (compactMetricsBuilder_ == null) {
        ensureCompactMetricsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, compactMetrics_);
        onChanged();
      } else {
        compactMetricsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
     */
    public Builder clearCompactMetrics() {
      if (compactMetricsBuilder_ == null) {
        compactMetrics_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        compactMetricsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
     */
    public Builder removeCompactMetrics(int index) {
      if (compactMetricsBuilder_ == null) {
        ensureCompactMetricsIsMutable();
        compactMetrics_.remove(index);
        onChanged();
      } else {
        compactMetricsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
     */
    public com.zenoss.cloud.CompactMetric.Builder getCompactMetricsBuilder(
        int index) {
      return getCompactMetricsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
     */
    public com.zenoss.cloud.CompactMetricOrBuilder getCompactMetricsOrBuilder(
        int index) {
      if (compactMetricsBuilder_ == null) {
        return compactMetrics_.get(index);  } else {
        return compactMetricsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
     */
    public java.util.List<? extends com.zenoss.cloud.CompactMetricOrBuilder> 
         getCompactMetricsOrBuilderList() {
      if (compactMetricsBuilder_ != null) {
        return compactMetricsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(compactMetrics_);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
     */
    public com.zenoss.cloud.CompactMetric.Builder addCompactMetricsBuilder() {
      return getCompactMetricsFieldBuilder().addBuilder(
          com.zenoss.cloud.CompactMetric.getDefaultInstance());
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
     */
    public com.zenoss.cloud.CompactMetric.Builder addCompactMetricsBuilder(
        int index) {
      return getCompactMetricsFieldBuilder().addBuilder(
          index, com.zenoss.cloud.CompactMetric.getDefaultInstance());
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3 [json_name = "compactMetrics"];</code>
     */
    public java.util.List<com.zenoss.cloud.CompactMetric.Builder> 
         getCompactMetricsBuilderList() {
      return getCompactMetricsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.zenoss.cloud.CompactMetric, com.zenoss.cloud.CompactMetric.Builder, com.zenoss.cloud.CompactMetricOrBuilder> 
        getCompactMetricsFieldBuilder() {
      if (compactMetricsBuilder_ == null) {
        compactMetricsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.zenoss.cloud.CompactMetric, com.zenoss.cloud.CompactMetric.Builder, com.zenoss.cloud.CompactMetricOrBuilder>(
                compactMetrics_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        compactMetrics_ = null;
      }
      return compactMetricsBuilder_;
    }

    private java.util.List<com.zenoss.cloud.TaggedMetric> taggedMetrics_ =
      java.util.Collections.emptyList();
    private void ensureTaggedMetricsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        taggedMetrics_ = new java.util.ArrayList<com.zenoss.cloud.TaggedMetric>(taggedMetrics_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.zenoss.cloud.TaggedMetric, com.zenoss.cloud.TaggedMetric.Builder, com.zenoss.cloud.TaggedMetricOrBuilder> taggedMetricsBuilder_;

    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
     */
    public java.util.List<com.zenoss.cloud.TaggedMetric> getTaggedMetricsList() {
      if (taggedMetricsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(taggedMetrics_);
      } else {
        return taggedMetricsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
     */
    public int getTaggedMetricsCount() {
      if (taggedMetricsBuilder_ == null) {
        return taggedMetrics_.size();
      } else {
        return taggedMetricsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
     */
    public com.zenoss.cloud.TaggedMetric getTaggedMetrics(int index) {
      if (taggedMetricsBuilder_ == null) {
        return taggedMetrics_.get(index);
      } else {
        return taggedMetricsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
     */
    public Builder setTaggedMetrics(
        int index, com.zenoss.cloud.TaggedMetric value) {
      if (taggedMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTaggedMetricsIsMutable();
        taggedMetrics_.set(index, value);
        onChanged();
      } else {
        taggedMetricsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
     */
    public Builder setTaggedMetrics(
        int index, com.zenoss.cloud.TaggedMetric.Builder builderForValue) {
      if (taggedMetricsBuilder_ == null) {
        ensureTaggedMetricsIsMutable();
        taggedMetrics_.set(index, builderForValue.build());
        onChanged();
      } else {
        taggedMetricsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
     */
    public Builder addTaggedMetrics(com.zenoss.cloud.TaggedMetric value) {
      if (taggedMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTaggedMetricsIsMutable();
        taggedMetrics_.add(value);
        onChanged();
      } else {
        taggedMetricsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
     */
    public Builder addTaggedMetrics(
        int index, com.zenoss.cloud.TaggedMetric value) {
      if (taggedMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTaggedMetricsIsMutable();
        taggedMetrics_.add(index, value);
        onChanged();
      } else {
        taggedMetricsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
     */
    public Builder addTaggedMetrics(
        com.zenoss.cloud.TaggedMetric.Builder builderForValue) {
      if (taggedMetricsBuilder_ == null) {
        ensureTaggedMetricsIsMutable();
        taggedMetrics_.add(builderForValue.build());
        onChanged();
      } else {
        taggedMetricsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
     */
    public Builder addTaggedMetrics(
        int index, com.zenoss.cloud.TaggedMetric.Builder builderForValue) {
      if (taggedMetricsBuilder_ == null) {
        ensureTaggedMetricsIsMutable();
        taggedMetrics_.add(index, builderForValue.build());
        onChanged();
      } else {
        taggedMetricsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
     */
    public Builder addAllTaggedMetrics(
        java.lang.Iterable<? extends com.zenoss.cloud.TaggedMetric> values) {
      if (taggedMetricsBuilder_ == null) {
        ensureTaggedMetricsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, taggedMetrics_);
        onChanged();
      } else {
        taggedMetricsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
     */
    public Builder clearTaggedMetrics() {
      if (taggedMetricsBuilder_ == null) {
        taggedMetrics_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        taggedMetricsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
     */
    public Builder removeTaggedMetrics(int index) {
      if (taggedMetricsBuilder_ == null) {
        ensureTaggedMetricsIsMutable();
        taggedMetrics_.remove(index);
        onChanged();
      } else {
        taggedMetricsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
     */
    public com.zenoss.cloud.TaggedMetric.Builder getTaggedMetricsBuilder(
        int index) {
      return getTaggedMetricsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
     */
    public com.zenoss.cloud.TaggedMetricOrBuilder getTaggedMetricsOrBuilder(
        int index) {
      if (taggedMetricsBuilder_ == null) {
        return taggedMetrics_.get(index);  } else {
        return taggedMetricsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
     */
    public java.util.List<? extends com.zenoss.cloud.TaggedMetricOrBuilder> 
         getTaggedMetricsOrBuilderList() {
      if (taggedMetricsBuilder_ != null) {
        return taggedMetricsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(taggedMetrics_);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
     */
    public com.zenoss.cloud.TaggedMetric.Builder addTaggedMetricsBuilder() {
      return getTaggedMetricsFieldBuilder().addBuilder(
          com.zenoss.cloud.TaggedMetric.getDefaultInstance());
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
     */
    public com.zenoss.cloud.TaggedMetric.Builder addTaggedMetricsBuilder(
        int index) {
      return getTaggedMetricsFieldBuilder().addBuilder(
          index, com.zenoss.cloud.TaggedMetric.getDefaultInstance());
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4 [json_name = "taggedMetrics"];</code>
     */
    public java.util.List<com.zenoss.cloud.TaggedMetric.Builder> 
         getTaggedMetricsBuilderList() {
      return getTaggedMetricsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.zenoss.cloud.TaggedMetric, com.zenoss.cloud.TaggedMetric.Builder, com.zenoss.cloud.TaggedMetricOrBuilder> 
        getTaggedMetricsFieldBuilder() {
      if (taggedMetricsBuilder_ == null) {
        taggedMetricsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.zenoss.cloud.TaggedMetric, com.zenoss.cloud.TaggedMetric.Builder, com.zenoss.cloud.TaggedMetricOrBuilder>(
                taggedMetrics_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        taggedMetrics_ = null;
      }
      return taggedMetricsBuilder_;
    }

    private java.util.List<com.zenoss.cloud.Metric> metrics_ =
      java.util.Collections.emptyList();
    private void ensureMetricsIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        metrics_ = new java.util.ArrayList<com.zenoss.cloud.Metric>(metrics_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.zenoss.cloud.Metric, com.zenoss.cloud.Metric.Builder, com.zenoss.cloud.MetricOrBuilder> metricsBuilder_;

    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
     */
    public java.util.List<com.zenoss.cloud.Metric> getMetricsList() {
      if (metricsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(metrics_);
      } else {
        return metricsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
     */
    public int getMetricsCount() {
      if (metricsBuilder_ == null) {
        return metrics_.size();
      } else {
        return metricsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
     */
    public com.zenoss.cloud.Metric getMetrics(int index) {
      if (metricsBuilder_ == null) {
        return metrics_.get(index);
      } else {
        return metricsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
     */
    public Builder setMetrics(
        int index, com.zenoss.cloud.Metric value) {
      if (metricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetricsIsMutable();
        metrics_.set(index, value);
        onChanged();
      } else {
        metricsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
     */
    public Builder setMetrics(
        int index, com.zenoss.cloud.Metric.Builder builderForValue) {
      if (metricsBuilder_ == null) {
        ensureMetricsIsMutable();
        metrics_.set(index, builderForValue.build());
        onChanged();
      } else {
        metricsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
     */
    public Builder addMetrics(com.zenoss.cloud.Metric value) {
      if (metricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetricsIsMutable();
        metrics_.add(value);
        onChanged();
      } else {
        metricsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
     */
    public Builder addMetrics(
        int index, com.zenoss.cloud.Metric value) {
      if (metricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetricsIsMutable();
        metrics_.add(index, value);
        onChanged();
      } else {
        metricsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
     */
    public Builder addMetrics(
        com.zenoss.cloud.Metric.Builder builderForValue) {
      if (metricsBuilder_ == null) {
        ensureMetricsIsMutable();
        metrics_.add(builderForValue.build());
        onChanged();
      } else {
        metricsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
     */
    public Builder addMetrics(
        int index, com.zenoss.cloud.Metric.Builder builderForValue) {
      if (metricsBuilder_ == null) {
        ensureMetricsIsMutable();
        metrics_.add(index, builderForValue.build());
        onChanged();
      } else {
        metricsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
     */
    public Builder addAllMetrics(
        java.lang.Iterable<? extends com.zenoss.cloud.Metric> values) {
      if (metricsBuilder_ == null) {
        ensureMetricsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, metrics_);
        onChanged();
      } else {
        metricsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
     */
    public Builder clearMetrics() {
      if (metricsBuilder_ == null) {
        metrics_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        metricsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
     */
    public Builder removeMetrics(int index) {
      if (metricsBuilder_ == null) {
        ensureMetricsIsMutable();
        metrics_.remove(index);
        onChanged();
      } else {
        metricsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
     */
    public com.zenoss.cloud.Metric.Builder getMetricsBuilder(
        int index) {
      return getMetricsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
     */
    public com.zenoss.cloud.MetricOrBuilder getMetricsOrBuilder(
        int index) {
      if (metricsBuilder_ == null) {
        return metrics_.get(index);  } else {
        return metricsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
     */
    public java.util.List<? extends com.zenoss.cloud.MetricOrBuilder> 
         getMetricsOrBuilderList() {
      if (metricsBuilder_ != null) {
        return metricsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(metrics_);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
     */
    public com.zenoss.cloud.Metric.Builder addMetricsBuilder() {
      return getMetricsFieldBuilder().addBuilder(
          com.zenoss.cloud.Metric.getDefaultInstance());
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
     */
    public com.zenoss.cloud.Metric.Builder addMetricsBuilder(
        int index) {
      return getMetricsFieldBuilder().addBuilder(
          index, com.zenoss.cloud.Metric.getDefaultInstance());
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5 [json_name = "metrics"];</code>
     */
    public java.util.List<com.zenoss.cloud.Metric.Builder> 
         getMetricsBuilderList() {
      return getMetricsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.zenoss.cloud.Metric, com.zenoss.cloud.Metric.Builder, com.zenoss.cloud.MetricOrBuilder> 
        getMetricsFieldBuilder() {
      if (metricsBuilder_ == null) {
        metricsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.zenoss.cloud.Metric, com.zenoss.cloud.Metric.Builder, com.zenoss.cloud.MetricOrBuilder>(
                metrics_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        metrics_ = null;
      }
      return metricsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:zenoss.cloud.Metrics)
  }

  // @@protoc_insertion_point(class_scope:zenoss.cloud.Metrics)
  private static final com.zenoss.cloud.Metrics DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.zenoss.cloud.Metrics();
  }

  public static com.zenoss.cloud.Metrics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Metrics>
      PARSER = new com.google.protobuf.AbstractParser<Metrics>() {
    @java.lang.Override
    public Metrics parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Metrics> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Metrics> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.zenoss.cloud.Metrics getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

