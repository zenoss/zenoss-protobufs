// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zenoss/cloud/data_receiver.proto

package org.zenoss.cloud.dataReceiver;

public interface MetricOrBuilder extends
    // @@protoc_insertion_point(interface_extends:zenoss.cloud.Metric)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The metric name
   * </pre>
   *
   * <code>string metric = 1;</code>
   */
  java.lang.String getMetric();
  /**
   * <pre>
   * The metric name
   * </pre>
   *
   * <code>string metric = 1;</code>
   */
  com.google.protobuf.ByteString
      getMetricBytes();

  /**
   * <pre>
   * The time at which the value was captured
   * </pre>
   *
   * <code>int64 timestamp = 2;</code>
   */
  long getTimestamp();

  /**
   * <pre>
   * The metric value
   * </pre>
   *
   * <code>double value = 3;</code>
   */
  double getValue();

  /**
   * <pre>
   * Dimensions associated with this datapoint.
   * </pre>
   *
   * <code>map&lt;string, string&gt; dimensions = 4;</code>
   */
  int getDimensionsCount();
  /**
   * <pre>
   * Dimensions associated with this datapoint.
   * </pre>
   *
   * <code>map&lt;string, string&gt; dimensions = 4;</code>
   */
  boolean containsDimensions(
      java.lang.String key);
  /**
   * Use {@link #getDimensionsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getDimensions();
  /**
   * <pre>
   * Dimensions associated with this datapoint.
   * </pre>
   *
   * <code>map&lt;string, string&gt; dimensions = 4;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getDimensionsMap();
  /**
   * <pre>
   * Dimensions associated with this datapoint.
   * </pre>
   *
   * <code>map&lt;string, string&gt; dimensions = 4;</code>
   */

  java.lang.String getDimensionsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * Dimensions associated with this datapoint.
   * </pre>
   *
   * <code>map&lt;string, string&gt; dimensions = 4;</code>
   */

  java.lang.String getDimensionsOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Metadata for the datapoint. Note: using Struct as it is easier than AnyArray when using json representations
   * </pre>
   *
   * <code>.google.protobuf.Struct metadataFields = 6;</code>
   */
  boolean hasMetadataFields();
  /**
   * <pre>
   * Metadata for the datapoint. Note: using Struct as it is easier than AnyArray when using json representations
   * </pre>
   *
   * <code>.google.protobuf.Struct metadataFields = 6;</code>
   */
  com.google.protobuf.Struct getMetadataFields();
  /**
   * <pre>
   * Metadata for the datapoint. Note: using Struct as it is easier than AnyArray when using json representations
   * </pre>
   *
   * <code>.google.protobuf.Struct metadataFields = 6;</code>
   */
  com.google.protobuf.StructOrBuilder getMetadataFieldsOrBuilder();
}
