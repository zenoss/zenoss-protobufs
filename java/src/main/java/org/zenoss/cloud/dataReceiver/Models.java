// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zenoss/cloud/data_receiver.proto

package org.zenoss.cloud.dataReceiver;

/**
 * Protobuf type {@code zenoss.cloud.Models}
 */
public final class Models extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:zenoss.cloud.Models)
    ModelsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Models.newBuilder() to construct.
  private Models(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Models() {
    models_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Models();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.zenoss.cloud.dataReceiver.DataReceiver.internal_static_zenoss_cloud_Models_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.zenoss.cloud.dataReceiver.DataReceiver.internal_static_zenoss_cloud_Models_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.zenoss.cloud.dataReceiver.Models.class, org.zenoss.cloud.dataReceiver.Models.Builder.class);
  }

  public static final int DETAILEDRESPONSE_FIELD_NUMBER = 1;
  private boolean detailedResponse_ = false;
  /**
   * <pre>
   * detailedResponse if set to true will return any models that failed to be sent
   * </pre>
   *
   * <code>bool detailedResponse = 1 [json_name = "detailedResponse"];</code>
   * @return The detailedResponse.
   */
  @java.lang.Override
  public boolean getDetailedResponse() {
    return detailedResponse_;
  }

  public static final int MODELS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<org.zenoss.cloud.dataReceiver.Model> models_;
  /**
   * <pre>
   * The models
   * </pre>
   *
   * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
   */
  @java.lang.Override
  public java.util.List<org.zenoss.cloud.dataReceiver.Model> getModelsList() {
    return models_;
  }
  /**
   * <pre>
   * The models
   * </pre>
   *
   * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.zenoss.cloud.dataReceiver.ModelOrBuilder> 
      getModelsOrBuilderList() {
    return models_;
  }
  /**
   * <pre>
   * The models
   * </pre>
   *
   * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
   */
  @java.lang.Override
  public int getModelsCount() {
    return models_.size();
  }
  /**
   * <pre>
   * The models
   * </pre>
   *
   * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
   */
  @java.lang.Override
  public org.zenoss.cloud.dataReceiver.Model getModels(int index) {
    return models_.get(index);
  }
  /**
   * <pre>
   * The models
   * </pre>
   *
   * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
   */
  @java.lang.Override
  public org.zenoss.cloud.dataReceiver.ModelOrBuilder getModelsOrBuilder(
      int index) {
    return models_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (detailedResponse_ != false) {
      output.writeBool(1, detailedResponse_);
    }
    for (int i = 0; i < models_.size(); i++) {
      output.writeMessage(2, models_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (detailedResponse_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, detailedResponse_);
    }
    for (int i = 0; i < models_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, models_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.zenoss.cloud.dataReceiver.Models)) {
      return super.equals(obj);
    }
    org.zenoss.cloud.dataReceiver.Models other = (org.zenoss.cloud.dataReceiver.Models) obj;

    if (getDetailedResponse()
        != other.getDetailedResponse()) return false;
    if (!getModelsList()
        .equals(other.getModelsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DETAILEDRESPONSE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDetailedResponse());
    if (getModelsCount() > 0) {
      hash = (37 * hash) + MODELS_FIELD_NUMBER;
      hash = (53 * hash) + getModelsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.zenoss.cloud.dataReceiver.Models parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.zenoss.cloud.dataReceiver.Models parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.zenoss.cloud.dataReceiver.Models parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.zenoss.cloud.dataReceiver.Models parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.zenoss.cloud.dataReceiver.Models parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.zenoss.cloud.dataReceiver.Models parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.zenoss.cloud.dataReceiver.Models parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.zenoss.cloud.dataReceiver.Models parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.zenoss.cloud.dataReceiver.Models parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.zenoss.cloud.dataReceiver.Models parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.zenoss.cloud.dataReceiver.Models parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.zenoss.cloud.dataReceiver.Models parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.zenoss.cloud.dataReceiver.Models prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code zenoss.cloud.Models}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:zenoss.cloud.Models)
      org.zenoss.cloud.dataReceiver.ModelsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.zenoss.cloud.dataReceiver.DataReceiver.internal_static_zenoss_cloud_Models_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.zenoss.cloud.dataReceiver.DataReceiver.internal_static_zenoss_cloud_Models_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.zenoss.cloud.dataReceiver.Models.class, org.zenoss.cloud.dataReceiver.Models.Builder.class);
    }

    // Construct using org.zenoss.cloud.dataReceiver.Models.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      detailedResponse_ = false;
      if (modelsBuilder_ == null) {
        models_ = java.util.Collections.emptyList();
      } else {
        models_ = null;
        modelsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.zenoss.cloud.dataReceiver.DataReceiver.internal_static_zenoss_cloud_Models_descriptor;
    }

    @java.lang.Override
    public org.zenoss.cloud.dataReceiver.Models getDefaultInstanceForType() {
      return org.zenoss.cloud.dataReceiver.Models.getDefaultInstance();
    }

    @java.lang.Override
    public org.zenoss.cloud.dataReceiver.Models build() {
      org.zenoss.cloud.dataReceiver.Models result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.zenoss.cloud.dataReceiver.Models buildPartial() {
      org.zenoss.cloud.dataReceiver.Models result = new org.zenoss.cloud.dataReceiver.Models(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(org.zenoss.cloud.dataReceiver.Models result) {
      if (modelsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          models_ = java.util.Collections.unmodifiableList(models_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.models_ = models_;
      } else {
        result.models_ = modelsBuilder_.build();
      }
    }

    private void buildPartial0(org.zenoss.cloud.dataReceiver.Models result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.detailedResponse_ = detailedResponse_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.zenoss.cloud.dataReceiver.Models) {
        return mergeFrom((org.zenoss.cloud.dataReceiver.Models)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.zenoss.cloud.dataReceiver.Models other) {
      if (other == org.zenoss.cloud.dataReceiver.Models.getDefaultInstance()) return this;
      if (other.getDetailedResponse() != false) {
        setDetailedResponse(other.getDetailedResponse());
      }
      if (modelsBuilder_ == null) {
        if (!other.models_.isEmpty()) {
          if (models_.isEmpty()) {
            models_ = other.models_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureModelsIsMutable();
            models_.addAll(other.models_);
          }
          onChanged();
        }
      } else {
        if (!other.models_.isEmpty()) {
          if (modelsBuilder_.isEmpty()) {
            modelsBuilder_.dispose();
            modelsBuilder_ = null;
            models_ = other.models_;
            bitField0_ = (bitField0_ & ~0x00000002);
            modelsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getModelsFieldBuilder() : null;
          } else {
            modelsBuilder_.addAllMessages(other.models_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              detailedResponse_ = input.readBool();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              org.zenoss.cloud.dataReceiver.Model m =
                  input.readMessage(
                      org.zenoss.cloud.dataReceiver.Model.parser(),
                      extensionRegistry);
              if (modelsBuilder_ == null) {
                ensureModelsIsMutable();
                models_.add(m);
              } else {
                modelsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private boolean detailedResponse_ ;
    /**
     * <pre>
     * detailedResponse if set to true will return any models that failed to be sent
     * </pre>
     *
     * <code>bool detailedResponse = 1 [json_name = "detailedResponse"];</code>
     * @return The detailedResponse.
     */
    @java.lang.Override
    public boolean getDetailedResponse() {
      return detailedResponse_;
    }
    /**
     * <pre>
     * detailedResponse if set to true will return any models that failed to be sent
     * </pre>
     *
     * <code>bool detailedResponse = 1 [json_name = "detailedResponse"];</code>
     * @param value The detailedResponse to set.
     * @return This builder for chaining.
     */
    public Builder setDetailedResponse(boolean value) {

      detailedResponse_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * detailedResponse if set to true will return any models that failed to be sent
     * </pre>
     *
     * <code>bool detailedResponse = 1 [json_name = "detailedResponse"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDetailedResponse() {
      bitField0_ = (bitField0_ & ~0x00000001);
      detailedResponse_ = false;
      onChanged();
      return this;
    }

    private java.util.List<org.zenoss.cloud.dataReceiver.Model> models_ =
      java.util.Collections.emptyList();
    private void ensureModelsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        models_ = new java.util.ArrayList<org.zenoss.cloud.dataReceiver.Model>(models_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.zenoss.cloud.dataReceiver.Model, org.zenoss.cloud.dataReceiver.Model.Builder, org.zenoss.cloud.dataReceiver.ModelOrBuilder> modelsBuilder_;

    /**
     * <pre>
     * The models
     * </pre>
     *
     * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
     */
    public java.util.List<org.zenoss.cloud.dataReceiver.Model> getModelsList() {
      if (modelsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(models_);
      } else {
        return modelsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The models
     * </pre>
     *
     * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
     */
    public int getModelsCount() {
      if (modelsBuilder_ == null) {
        return models_.size();
      } else {
        return modelsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The models
     * </pre>
     *
     * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
     */
    public org.zenoss.cloud.dataReceiver.Model getModels(int index) {
      if (modelsBuilder_ == null) {
        return models_.get(index);
      } else {
        return modelsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The models
     * </pre>
     *
     * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
     */
    public Builder setModels(
        int index, org.zenoss.cloud.dataReceiver.Model value) {
      if (modelsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureModelsIsMutable();
        models_.set(index, value);
        onChanged();
      } else {
        modelsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The models
     * </pre>
     *
     * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
     */
    public Builder setModels(
        int index, org.zenoss.cloud.dataReceiver.Model.Builder builderForValue) {
      if (modelsBuilder_ == null) {
        ensureModelsIsMutable();
        models_.set(index, builderForValue.build());
        onChanged();
      } else {
        modelsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The models
     * </pre>
     *
     * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
     */
    public Builder addModels(org.zenoss.cloud.dataReceiver.Model value) {
      if (modelsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureModelsIsMutable();
        models_.add(value);
        onChanged();
      } else {
        modelsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The models
     * </pre>
     *
     * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
     */
    public Builder addModels(
        int index, org.zenoss.cloud.dataReceiver.Model value) {
      if (modelsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureModelsIsMutable();
        models_.add(index, value);
        onChanged();
      } else {
        modelsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The models
     * </pre>
     *
     * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
     */
    public Builder addModels(
        org.zenoss.cloud.dataReceiver.Model.Builder builderForValue) {
      if (modelsBuilder_ == null) {
        ensureModelsIsMutable();
        models_.add(builderForValue.build());
        onChanged();
      } else {
        modelsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The models
     * </pre>
     *
     * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
     */
    public Builder addModels(
        int index, org.zenoss.cloud.dataReceiver.Model.Builder builderForValue) {
      if (modelsBuilder_ == null) {
        ensureModelsIsMutable();
        models_.add(index, builderForValue.build());
        onChanged();
      } else {
        modelsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The models
     * </pre>
     *
     * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
     */
    public Builder addAllModels(
        java.lang.Iterable<? extends org.zenoss.cloud.dataReceiver.Model> values) {
      if (modelsBuilder_ == null) {
        ensureModelsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, models_);
        onChanged();
      } else {
        modelsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The models
     * </pre>
     *
     * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
     */
    public Builder clearModels() {
      if (modelsBuilder_ == null) {
        models_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        modelsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The models
     * </pre>
     *
     * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
     */
    public Builder removeModels(int index) {
      if (modelsBuilder_ == null) {
        ensureModelsIsMutable();
        models_.remove(index);
        onChanged();
      } else {
        modelsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The models
     * </pre>
     *
     * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
     */
    public org.zenoss.cloud.dataReceiver.Model.Builder getModelsBuilder(
        int index) {
      return getModelsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The models
     * </pre>
     *
     * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
     */
    public org.zenoss.cloud.dataReceiver.ModelOrBuilder getModelsOrBuilder(
        int index) {
      if (modelsBuilder_ == null) {
        return models_.get(index);  } else {
        return modelsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The models
     * </pre>
     *
     * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
     */
    public java.util.List<? extends org.zenoss.cloud.dataReceiver.ModelOrBuilder> 
         getModelsOrBuilderList() {
      if (modelsBuilder_ != null) {
        return modelsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(models_);
      }
    }
    /**
     * <pre>
     * The models
     * </pre>
     *
     * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
     */
    public org.zenoss.cloud.dataReceiver.Model.Builder addModelsBuilder() {
      return getModelsFieldBuilder().addBuilder(
          org.zenoss.cloud.dataReceiver.Model.getDefaultInstance());
    }
    /**
     * <pre>
     * The models
     * </pre>
     *
     * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
     */
    public org.zenoss.cloud.dataReceiver.Model.Builder addModelsBuilder(
        int index) {
      return getModelsFieldBuilder().addBuilder(
          index, org.zenoss.cloud.dataReceiver.Model.getDefaultInstance());
    }
    /**
     * <pre>
     * The models
     * </pre>
     *
     * <code>repeated .zenoss.cloud.Model models = 2 [json_name = "models"];</code>
     */
    public java.util.List<org.zenoss.cloud.dataReceiver.Model.Builder> 
         getModelsBuilderList() {
      return getModelsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.zenoss.cloud.dataReceiver.Model, org.zenoss.cloud.dataReceiver.Model.Builder, org.zenoss.cloud.dataReceiver.ModelOrBuilder> 
        getModelsFieldBuilder() {
      if (modelsBuilder_ == null) {
        modelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.zenoss.cloud.dataReceiver.Model, org.zenoss.cloud.dataReceiver.Model.Builder, org.zenoss.cloud.dataReceiver.ModelOrBuilder>(
                models_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        models_ = null;
      }
      return modelsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:zenoss.cloud.Models)
  }

  // @@protoc_insertion_point(class_scope:zenoss.cloud.Models)
  private static final org.zenoss.cloud.dataReceiver.Models DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.zenoss.cloud.dataReceiver.Models();
  }

  public static org.zenoss.cloud.dataReceiver.Models getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Models>
      PARSER = new com.google.protobuf.AbstractParser<Models>() {
    @java.lang.Override
    public Models parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Models> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Models> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.zenoss.cloud.dataReceiver.Models getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

