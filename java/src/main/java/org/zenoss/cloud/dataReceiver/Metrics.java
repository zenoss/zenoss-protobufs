// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zenoss/cloud/data_receiver.proto

package org.zenoss.cloud.dataReceiver;

/**
 * Protobuf type {@code zenoss.cloud.Metrics}
 */
public  final class Metrics extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:zenoss.cloud.Metrics)
    MetricsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Metrics.newBuilder() to construct.
  private Metrics(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Metrics() {
    detailedResponse_ = false;
    compactMetrics_ = java.util.Collections.emptyList();
    taggedMetrics_ = java.util.Collections.emptyList();
    metrics_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Metrics(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            detailedResponse_ = input.readBool();
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              compactMetrics_ = new java.util.ArrayList<org.zenoss.cloud.dataReceiver.CompactMetric>();
              mutable_bitField0_ |= 0x00000002;
            }
            compactMetrics_.add(
                input.readMessage(org.zenoss.cloud.dataReceiver.CompactMetric.parser(), extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              taggedMetrics_ = new java.util.ArrayList<org.zenoss.cloud.dataReceiver.TaggedMetric>();
              mutable_bitField0_ |= 0x00000004;
            }
            taggedMetrics_.add(
                input.readMessage(org.zenoss.cloud.dataReceiver.TaggedMetric.parser(), extensionRegistry));
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              metrics_ = new java.util.ArrayList<org.zenoss.cloud.dataReceiver.Metric>();
              mutable_bitField0_ |= 0x00000008;
            }
            metrics_.add(
                input.readMessage(org.zenoss.cloud.dataReceiver.Metric.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        compactMetrics_ = java.util.Collections.unmodifiableList(compactMetrics_);
      }
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        taggedMetrics_ = java.util.Collections.unmodifiableList(taggedMetrics_);
      }
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        metrics_ = java.util.Collections.unmodifiableList(metrics_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.zenoss.cloud.dataReceiver.DataReceiver.internal_static_zenoss_cloud_Metrics_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.zenoss.cloud.dataReceiver.DataReceiver.internal_static_zenoss_cloud_Metrics_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.zenoss.cloud.dataReceiver.Metrics.class, org.zenoss.cloud.dataReceiver.Metrics.Builder.class);
  }

  private int bitField0_;
  public static final int DETAILEDRESPONSE_FIELD_NUMBER = 1;
  private boolean detailedResponse_;
  /**
   * <pre>
   * detailedResponse if set to true will return any metrics that failed to be sent
   * </pre>
   *
   * <code>bool detailedResponse = 1;</code>
   */
  public boolean getDetailedResponse() {
    return detailedResponse_;
  }

  public static final int COMPACTMETRICS_FIELD_NUMBER = 3;
  private java.util.List<org.zenoss.cloud.dataReceiver.CompactMetric> compactMetrics_;
  /**
   * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
   */
  public java.util.List<org.zenoss.cloud.dataReceiver.CompactMetric> getCompactMetricsList() {
    return compactMetrics_;
  }
  /**
   * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
   */
  public java.util.List<? extends org.zenoss.cloud.dataReceiver.CompactMetricOrBuilder> 
      getCompactMetricsOrBuilderList() {
    return compactMetrics_;
  }
  /**
   * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
   */
  public int getCompactMetricsCount() {
    return compactMetrics_.size();
  }
  /**
   * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
   */
  public org.zenoss.cloud.dataReceiver.CompactMetric getCompactMetrics(int index) {
    return compactMetrics_.get(index);
  }
  /**
   * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
   */
  public org.zenoss.cloud.dataReceiver.CompactMetricOrBuilder getCompactMetricsOrBuilder(
      int index) {
    return compactMetrics_.get(index);
  }

  public static final int TAGGEDMETRICS_FIELD_NUMBER = 4;
  private java.util.List<org.zenoss.cloud.dataReceiver.TaggedMetric> taggedMetrics_;
  /**
   * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
   */
  public java.util.List<org.zenoss.cloud.dataReceiver.TaggedMetric> getTaggedMetricsList() {
    return taggedMetrics_;
  }
  /**
   * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
   */
  public java.util.List<? extends org.zenoss.cloud.dataReceiver.TaggedMetricOrBuilder> 
      getTaggedMetricsOrBuilderList() {
    return taggedMetrics_;
  }
  /**
   * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
   */
  public int getTaggedMetricsCount() {
    return taggedMetrics_.size();
  }
  /**
   * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
   */
  public org.zenoss.cloud.dataReceiver.TaggedMetric getTaggedMetrics(int index) {
    return taggedMetrics_.get(index);
  }
  /**
   * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
   */
  public org.zenoss.cloud.dataReceiver.TaggedMetricOrBuilder getTaggedMetricsOrBuilder(
      int index) {
    return taggedMetrics_.get(index);
  }

  public static final int METRICS_FIELD_NUMBER = 5;
  private java.util.List<org.zenoss.cloud.dataReceiver.Metric> metrics_;
  /**
   * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
   */
  public java.util.List<org.zenoss.cloud.dataReceiver.Metric> getMetricsList() {
    return metrics_;
  }
  /**
   * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
   */
  public java.util.List<? extends org.zenoss.cloud.dataReceiver.MetricOrBuilder> 
      getMetricsOrBuilderList() {
    return metrics_;
  }
  /**
   * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
   */
  public int getMetricsCount() {
    return metrics_.size();
  }
  /**
   * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
   */
  public org.zenoss.cloud.dataReceiver.Metric getMetrics(int index) {
    return metrics_.get(index);
  }
  /**
   * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
   */
  public org.zenoss.cloud.dataReceiver.MetricOrBuilder getMetricsOrBuilder(
      int index) {
    return metrics_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (detailedResponse_ != false) {
      output.writeBool(1, detailedResponse_);
    }
    for (int i = 0; i < compactMetrics_.size(); i++) {
      output.writeMessage(3, compactMetrics_.get(i));
    }
    for (int i = 0; i < taggedMetrics_.size(); i++) {
      output.writeMessage(4, taggedMetrics_.get(i));
    }
    for (int i = 0; i < metrics_.size(); i++) {
      output.writeMessage(5, metrics_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (detailedResponse_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, detailedResponse_);
    }
    for (int i = 0; i < compactMetrics_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, compactMetrics_.get(i));
    }
    for (int i = 0; i < taggedMetrics_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, taggedMetrics_.get(i));
    }
    for (int i = 0; i < metrics_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, metrics_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.zenoss.cloud.dataReceiver.Metrics)) {
      return super.equals(obj);
    }
    org.zenoss.cloud.dataReceiver.Metrics other = (org.zenoss.cloud.dataReceiver.Metrics) obj;

    boolean result = true;
    result = result && (getDetailedResponse()
        == other.getDetailedResponse());
    result = result && getCompactMetricsList()
        .equals(other.getCompactMetricsList());
    result = result && getTaggedMetricsList()
        .equals(other.getTaggedMetricsList());
    result = result && getMetricsList()
        .equals(other.getMetricsList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DETAILEDRESPONSE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDetailedResponse());
    if (getCompactMetricsCount() > 0) {
      hash = (37 * hash) + COMPACTMETRICS_FIELD_NUMBER;
      hash = (53 * hash) + getCompactMetricsList().hashCode();
    }
    if (getTaggedMetricsCount() > 0) {
      hash = (37 * hash) + TAGGEDMETRICS_FIELD_NUMBER;
      hash = (53 * hash) + getTaggedMetricsList().hashCode();
    }
    if (getMetricsCount() > 0) {
      hash = (37 * hash) + METRICS_FIELD_NUMBER;
      hash = (53 * hash) + getMetricsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.zenoss.cloud.dataReceiver.Metrics parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.zenoss.cloud.dataReceiver.Metrics parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.zenoss.cloud.dataReceiver.Metrics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.zenoss.cloud.dataReceiver.Metrics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.zenoss.cloud.dataReceiver.Metrics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.zenoss.cloud.dataReceiver.Metrics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.zenoss.cloud.dataReceiver.Metrics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.zenoss.cloud.dataReceiver.Metrics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.zenoss.cloud.dataReceiver.Metrics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.zenoss.cloud.dataReceiver.Metrics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.zenoss.cloud.dataReceiver.Metrics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.zenoss.cloud.dataReceiver.Metrics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.zenoss.cloud.dataReceiver.Metrics prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code zenoss.cloud.Metrics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:zenoss.cloud.Metrics)
      org.zenoss.cloud.dataReceiver.MetricsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.zenoss.cloud.dataReceiver.DataReceiver.internal_static_zenoss_cloud_Metrics_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.zenoss.cloud.dataReceiver.DataReceiver.internal_static_zenoss_cloud_Metrics_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.zenoss.cloud.dataReceiver.Metrics.class, org.zenoss.cloud.dataReceiver.Metrics.Builder.class);
    }

    // Construct using org.zenoss.cloud.dataReceiver.Metrics.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getCompactMetricsFieldBuilder();
        getTaggedMetricsFieldBuilder();
        getMetricsFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      detailedResponse_ = false;

      if (compactMetricsBuilder_ == null) {
        compactMetrics_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        compactMetricsBuilder_.clear();
      }
      if (taggedMetricsBuilder_ == null) {
        taggedMetrics_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        taggedMetricsBuilder_.clear();
      }
      if (metricsBuilder_ == null) {
        metrics_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        metricsBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.zenoss.cloud.dataReceiver.DataReceiver.internal_static_zenoss_cloud_Metrics_descriptor;
    }

    public org.zenoss.cloud.dataReceiver.Metrics getDefaultInstanceForType() {
      return org.zenoss.cloud.dataReceiver.Metrics.getDefaultInstance();
    }

    public org.zenoss.cloud.dataReceiver.Metrics build() {
      org.zenoss.cloud.dataReceiver.Metrics result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.zenoss.cloud.dataReceiver.Metrics buildPartial() {
      org.zenoss.cloud.dataReceiver.Metrics result = new org.zenoss.cloud.dataReceiver.Metrics(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.detailedResponse_ = detailedResponse_;
      if (compactMetricsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          compactMetrics_ = java.util.Collections.unmodifiableList(compactMetrics_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.compactMetrics_ = compactMetrics_;
      } else {
        result.compactMetrics_ = compactMetricsBuilder_.build();
      }
      if (taggedMetricsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          taggedMetrics_ = java.util.Collections.unmodifiableList(taggedMetrics_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.taggedMetrics_ = taggedMetrics_;
      } else {
        result.taggedMetrics_ = taggedMetricsBuilder_.build();
      }
      if (metricsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          metrics_ = java.util.Collections.unmodifiableList(metrics_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.metrics_ = metrics_;
      } else {
        result.metrics_ = metricsBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.zenoss.cloud.dataReceiver.Metrics) {
        return mergeFrom((org.zenoss.cloud.dataReceiver.Metrics)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.zenoss.cloud.dataReceiver.Metrics other) {
      if (other == org.zenoss.cloud.dataReceiver.Metrics.getDefaultInstance()) return this;
      if (other.getDetailedResponse() != false) {
        setDetailedResponse(other.getDetailedResponse());
      }
      if (compactMetricsBuilder_ == null) {
        if (!other.compactMetrics_.isEmpty()) {
          if (compactMetrics_.isEmpty()) {
            compactMetrics_ = other.compactMetrics_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCompactMetricsIsMutable();
            compactMetrics_.addAll(other.compactMetrics_);
          }
          onChanged();
        }
      } else {
        if (!other.compactMetrics_.isEmpty()) {
          if (compactMetricsBuilder_.isEmpty()) {
            compactMetricsBuilder_.dispose();
            compactMetricsBuilder_ = null;
            compactMetrics_ = other.compactMetrics_;
            bitField0_ = (bitField0_ & ~0x00000002);
            compactMetricsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCompactMetricsFieldBuilder() : null;
          } else {
            compactMetricsBuilder_.addAllMessages(other.compactMetrics_);
          }
        }
      }
      if (taggedMetricsBuilder_ == null) {
        if (!other.taggedMetrics_.isEmpty()) {
          if (taggedMetrics_.isEmpty()) {
            taggedMetrics_ = other.taggedMetrics_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureTaggedMetricsIsMutable();
            taggedMetrics_.addAll(other.taggedMetrics_);
          }
          onChanged();
        }
      } else {
        if (!other.taggedMetrics_.isEmpty()) {
          if (taggedMetricsBuilder_.isEmpty()) {
            taggedMetricsBuilder_.dispose();
            taggedMetricsBuilder_ = null;
            taggedMetrics_ = other.taggedMetrics_;
            bitField0_ = (bitField0_ & ~0x00000004);
            taggedMetricsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTaggedMetricsFieldBuilder() : null;
          } else {
            taggedMetricsBuilder_.addAllMessages(other.taggedMetrics_);
          }
        }
      }
      if (metricsBuilder_ == null) {
        if (!other.metrics_.isEmpty()) {
          if (metrics_.isEmpty()) {
            metrics_ = other.metrics_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureMetricsIsMutable();
            metrics_.addAll(other.metrics_);
          }
          onChanged();
        }
      } else {
        if (!other.metrics_.isEmpty()) {
          if (metricsBuilder_.isEmpty()) {
            metricsBuilder_.dispose();
            metricsBuilder_ = null;
            metrics_ = other.metrics_;
            bitField0_ = (bitField0_ & ~0x00000008);
            metricsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMetricsFieldBuilder() : null;
          } else {
            metricsBuilder_.addAllMessages(other.metrics_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.zenoss.cloud.dataReceiver.Metrics parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.zenoss.cloud.dataReceiver.Metrics) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private boolean detailedResponse_ ;
    /**
     * <pre>
     * detailedResponse if set to true will return any metrics that failed to be sent
     * </pre>
     *
     * <code>bool detailedResponse = 1;</code>
     */
    public boolean getDetailedResponse() {
      return detailedResponse_;
    }
    /**
     * <pre>
     * detailedResponse if set to true will return any metrics that failed to be sent
     * </pre>
     *
     * <code>bool detailedResponse = 1;</code>
     */
    public Builder setDetailedResponse(boolean value) {
      
      detailedResponse_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * detailedResponse if set to true will return any metrics that failed to be sent
     * </pre>
     *
     * <code>bool detailedResponse = 1;</code>
     */
    public Builder clearDetailedResponse() {
      
      detailedResponse_ = false;
      onChanged();
      return this;
    }

    private java.util.List<org.zenoss.cloud.dataReceiver.CompactMetric> compactMetrics_ =
      java.util.Collections.emptyList();
    private void ensureCompactMetricsIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        compactMetrics_ = new java.util.ArrayList<org.zenoss.cloud.dataReceiver.CompactMetric>(compactMetrics_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.zenoss.cloud.dataReceiver.CompactMetric, org.zenoss.cloud.dataReceiver.CompactMetric.Builder, org.zenoss.cloud.dataReceiver.CompactMetricOrBuilder> compactMetricsBuilder_;

    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
     */
    public java.util.List<org.zenoss.cloud.dataReceiver.CompactMetric> getCompactMetricsList() {
      if (compactMetricsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(compactMetrics_);
      } else {
        return compactMetricsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
     */
    public int getCompactMetricsCount() {
      if (compactMetricsBuilder_ == null) {
        return compactMetrics_.size();
      } else {
        return compactMetricsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
     */
    public org.zenoss.cloud.dataReceiver.CompactMetric getCompactMetrics(int index) {
      if (compactMetricsBuilder_ == null) {
        return compactMetrics_.get(index);
      } else {
        return compactMetricsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
     */
    public Builder setCompactMetrics(
        int index, org.zenoss.cloud.dataReceiver.CompactMetric value) {
      if (compactMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCompactMetricsIsMutable();
        compactMetrics_.set(index, value);
        onChanged();
      } else {
        compactMetricsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
     */
    public Builder setCompactMetrics(
        int index, org.zenoss.cloud.dataReceiver.CompactMetric.Builder builderForValue) {
      if (compactMetricsBuilder_ == null) {
        ensureCompactMetricsIsMutable();
        compactMetrics_.set(index, builderForValue.build());
        onChanged();
      } else {
        compactMetricsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
     */
    public Builder addCompactMetrics(org.zenoss.cloud.dataReceiver.CompactMetric value) {
      if (compactMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCompactMetricsIsMutable();
        compactMetrics_.add(value);
        onChanged();
      } else {
        compactMetricsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
     */
    public Builder addCompactMetrics(
        int index, org.zenoss.cloud.dataReceiver.CompactMetric value) {
      if (compactMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCompactMetricsIsMutable();
        compactMetrics_.add(index, value);
        onChanged();
      } else {
        compactMetricsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
     */
    public Builder addCompactMetrics(
        org.zenoss.cloud.dataReceiver.CompactMetric.Builder builderForValue) {
      if (compactMetricsBuilder_ == null) {
        ensureCompactMetricsIsMutable();
        compactMetrics_.add(builderForValue.build());
        onChanged();
      } else {
        compactMetricsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
     */
    public Builder addCompactMetrics(
        int index, org.zenoss.cloud.dataReceiver.CompactMetric.Builder builderForValue) {
      if (compactMetricsBuilder_ == null) {
        ensureCompactMetricsIsMutable();
        compactMetrics_.add(index, builderForValue.build());
        onChanged();
      } else {
        compactMetricsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
     */
    public Builder addAllCompactMetrics(
        java.lang.Iterable<? extends org.zenoss.cloud.dataReceiver.CompactMetric> values) {
      if (compactMetricsBuilder_ == null) {
        ensureCompactMetricsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, compactMetrics_);
        onChanged();
      } else {
        compactMetricsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
     */
    public Builder clearCompactMetrics() {
      if (compactMetricsBuilder_ == null) {
        compactMetrics_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        compactMetricsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
     */
    public Builder removeCompactMetrics(int index) {
      if (compactMetricsBuilder_ == null) {
        ensureCompactMetricsIsMutable();
        compactMetrics_.remove(index);
        onChanged();
      } else {
        compactMetricsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
     */
    public org.zenoss.cloud.dataReceiver.CompactMetric.Builder getCompactMetricsBuilder(
        int index) {
      return getCompactMetricsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
     */
    public org.zenoss.cloud.dataReceiver.CompactMetricOrBuilder getCompactMetricsOrBuilder(
        int index) {
      if (compactMetricsBuilder_ == null) {
        return compactMetrics_.get(index);  } else {
        return compactMetricsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
     */
    public java.util.List<? extends org.zenoss.cloud.dataReceiver.CompactMetricOrBuilder> 
         getCompactMetricsOrBuilderList() {
      if (compactMetricsBuilder_ != null) {
        return compactMetricsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(compactMetrics_);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
     */
    public org.zenoss.cloud.dataReceiver.CompactMetric.Builder addCompactMetricsBuilder() {
      return getCompactMetricsFieldBuilder().addBuilder(
          org.zenoss.cloud.dataReceiver.CompactMetric.getDefaultInstance());
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
     */
    public org.zenoss.cloud.dataReceiver.CompactMetric.Builder addCompactMetricsBuilder(
        int index) {
      return getCompactMetricsFieldBuilder().addBuilder(
          index, org.zenoss.cloud.dataReceiver.CompactMetric.getDefaultInstance());
    }
    /**
     * <code>repeated .zenoss.cloud.CompactMetric compactMetrics = 3;</code>
     */
    public java.util.List<org.zenoss.cloud.dataReceiver.CompactMetric.Builder> 
         getCompactMetricsBuilderList() {
      return getCompactMetricsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.zenoss.cloud.dataReceiver.CompactMetric, org.zenoss.cloud.dataReceiver.CompactMetric.Builder, org.zenoss.cloud.dataReceiver.CompactMetricOrBuilder> 
        getCompactMetricsFieldBuilder() {
      if (compactMetricsBuilder_ == null) {
        compactMetricsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.zenoss.cloud.dataReceiver.CompactMetric, org.zenoss.cloud.dataReceiver.CompactMetric.Builder, org.zenoss.cloud.dataReceiver.CompactMetricOrBuilder>(
                compactMetrics_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        compactMetrics_ = null;
      }
      return compactMetricsBuilder_;
    }

    private java.util.List<org.zenoss.cloud.dataReceiver.TaggedMetric> taggedMetrics_ =
      java.util.Collections.emptyList();
    private void ensureTaggedMetricsIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        taggedMetrics_ = new java.util.ArrayList<org.zenoss.cloud.dataReceiver.TaggedMetric>(taggedMetrics_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.zenoss.cloud.dataReceiver.TaggedMetric, org.zenoss.cloud.dataReceiver.TaggedMetric.Builder, org.zenoss.cloud.dataReceiver.TaggedMetricOrBuilder> taggedMetricsBuilder_;

    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
     */
    public java.util.List<org.zenoss.cloud.dataReceiver.TaggedMetric> getTaggedMetricsList() {
      if (taggedMetricsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(taggedMetrics_);
      } else {
        return taggedMetricsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
     */
    public int getTaggedMetricsCount() {
      if (taggedMetricsBuilder_ == null) {
        return taggedMetrics_.size();
      } else {
        return taggedMetricsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
     */
    public org.zenoss.cloud.dataReceiver.TaggedMetric getTaggedMetrics(int index) {
      if (taggedMetricsBuilder_ == null) {
        return taggedMetrics_.get(index);
      } else {
        return taggedMetricsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
     */
    public Builder setTaggedMetrics(
        int index, org.zenoss.cloud.dataReceiver.TaggedMetric value) {
      if (taggedMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTaggedMetricsIsMutable();
        taggedMetrics_.set(index, value);
        onChanged();
      } else {
        taggedMetricsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
     */
    public Builder setTaggedMetrics(
        int index, org.zenoss.cloud.dataReceiver.TaggedMetric.Builder builderForValue) {
      if (taggedMetricsBuilder_ == null) {
        ensureTaggedMetricsIsMutable();
        taggedMetrics_.set(index, builderForValue.build());
        onChanged();
      } else {
        taggedMetricsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
     */
    public Builder addTaggedMetrics(org.zenoss.cloud.dataReceiver.TaggedMetric value) {
      if (taggedMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTaggedMetricsIsMutable();
        taggedMetrics_.add(value);
        onChanged();
      } else {
        taggedMetricsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
     */
    public Builder addTaggedMetrics(
        int index, org.zenoss.cloud.dataReceiver.TaggedMetric value) {
      if (taggedMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTaggedMetricsIsMutable();
        taggedMetrics_.add(index, value);
        onChanged();
      } else {
        taggedMetricsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
     */
    public Builder addTaggedMetrics(
        org.zenoss.cloud.dataReceiver.TaggedMetric.Builder builderForValue) {
      if (taggedMetricsBuilder_ == null) {
        ensureTaggedMetricsIsMutable();
        taggedMetrics_.add(builderForValue.build());
        onChanged();
      } else {
        taggedMetricsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
     */
    public Builder addTaggedMetrics(
        int index, org.zenoss.cloud.dataReceiver.TaggedMetric.Builder builderForValue) {
      if (taggedMetricsBuilder_ == null) {
        ensureTaggedMetricsIsMutable();
        taggedMetrics_.add(index, builderForValue.build());
        onChanged();
      } else {
        taggedMetricsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
     */
    public Builder addAllTaggedMetrics(
        java.lang.Iterable<? extends org.zenoss.cloud.dataReceiver.TaggedMetric> values) {
      if (taggedMetricsBuilder_ == null) {
        ensureTaggedMetricsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, taggedMetrics_);
        onChanged();
      } else {
        taggedMetricsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
     */
    public Builder clearTaggedMetrics() {
      if (taggedMetricsBuilder_ == null) {
        taggedMetrics_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        taggedMetricsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
     */
    public Builder removeTaggedMetrics(int index) {
      if (taggedMetricsBuilder_ == null) {
        ensureTaggedMetricsIsMutable();
        taggedMetrics_.remove(index);
        onChanged();
      } else {
        taggedMetricsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
     */
    public org.zenoss.cloud.dataReceiver.TaggedMetric.Builder getTaggedMetricsBuilder(
        int index) {
      return getTaggedMetricsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
     */
    public org.zenoss.cloud.dataReceiver.TaggedMetricOrBuilder getTaggedMetricsOrBuilder(
        int index) {
      if (taggedMetricsBuilder_ == null) {
        return taggedMetrics_.get(index);  } else {
        return taggedMetricsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
     */
    public java.util.List<? extends org.zenoss.cloud.dataReceiver.TaggedMetricOrBuilder> 
         getTaggedMetricsOrBuilderList() {
      if (taggedMetricsBuilder_ != null) {
        return taggedMetricsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(taggedMetrics_);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
     */
    public org.zenoss.cloud.dataReceiver.TaggedMetric.Builder addTaggedMetricsBuilder() {
      return getTaggedMetricsFieldBuilder().addBuilder(
          org.zenoss.cloud.dataReceiver.TaggedMetric.getDefaultInstance());
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
     */
    public org.zenoss.cloud.dataReceiver.TaggedMetric.Builder addTaggedMetricsBuilder(
        int index) {
      return getTaggedMetricsFieldBuilder().addBuilder(
          index, org.zenoss.cloud.dataReceiver.TaggedMetric.getDefaultInstance());
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetric taggedMetrics = 4;</code>
     */
    public java.util.List<org.zenoss.cloud.dataReceiver.TaggedMetric.Builder> 
         getTaggedMetricsBuilderList() {
      return getTaggedMetricsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.zenoss.cloud.dataReceiver.TaggedMetric, org.zenoss.cloud.dataReceiver.TaggedMetric.Builder, org.zenoss.cloud.dataReceiver.TaggedMetricOrBuilder> 
        getTaggedMetricsFieldBuilder() {
      if (taggedMetricsBuilder_ == null) {
        taggedMetricsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.zenoss.cloud.dataReceiver.TaggedMetric, org.zenoss.cloud.dataReceiver.TaggedMetric.Builder, org.zenoss.cloud.dataReceiver.TaggedMetricOrBuilder>(
                taggedMetrics_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        taggedMetrics_ = null;
      }
      return taggedMetricsBuilder_;
    }

    private java.util.List<org.zenoss.cloud.dataReceiver.Metric> metrics_ =
      java.util.Collections.emptyList();
    private void ensureMetricsIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        metrics_ = new java.util.ArrayList<org.zenoss.cloud.dataReceiver.Metric>(metrics_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.zenoss.cloud.dataReceiver.Metric, org.zenoss.cloud.dataReceiver.Metric.Builder, org.zenoss.cloud.dataReceiver.MetricOrBuilder> metricsBuilder_;

    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
     */
    public java.util.List<org.zenoss.cloud.dataReceiver.Metric> getMetricsList() {
      if (metricsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(metrics_);
      } else {
        return metricsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
     */
    public int getMetricsCount() {
      if (metricsBuilder_ == null) {
        return metrics_.size();
      } else {
        return metricsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
     */
    public org.zenoss.cloud.dataReceiver.Metric getMetrics(int index) {
      if (metricsBuilder_ == null) {
        return metrics_.get(index);
      } else {
        return metricsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
     */
    public Builder setMetrics(
        int index, org.zenoss.cloud.dataReceiver.Metric value) {
      if (metricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetricsIsMutable();
        metrics_.set(index, value);
        onChanged();
      } else {
        metricsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
     */
    public Builder setMetrics(
        int index, org.zenoss.cloud.dataReceiver.Metric.Builder builderForValue) {
      if (metricsBuilder_ == null) {
        ensureMetricsIsMutable();
        metrics_.set(index, builderForValue.build());
        onChanged();
      } else {
        metricsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
     */
    public Builder addMetrics(org.zenoss.cloud.dataReceiver.Metric value) {
      if (metricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetricsIsMutable();
        metrics_.add(value);
        onChanged();
      } else {
        metricsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
     */
    public Builder addMetrics(
        int index, org.zenoss.cloud.dataReceiver.Metric value) {
      if (metricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetricsIsMutable();
        metrics_.add(index, value);
        onChanged();
      } else {
        metricsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
     */
    public Builder addMetrics(
        org.zenoss.cloud.dataReceiver.Metric.Builder builderForValue) {
      if (metricsBuilder_ == null) {
        ensureMetricsIsMutable();
        metrics_.add(builderForValue.build());
        onChanged();
      } else {
        metricsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
     */
    public Builder addMetrics(
        int index, org.zenoss.cloud.dataReceiver.Metric.Builder builderForValue) {
      if (metricsBuilder_ == null) {
        ensureMetricsIsMutable();
        metrics_.add(index, builderForValue.build());
        onChanged();
      } else {
        metricsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
     */
    public Builder addAllMetrics(
        java.lang.Iterable<? extends org.zenoss.cloud.dataReceiver.Metric> values) {
      if (metricsBuilder_ == null) {
        ensureMetricsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, metrics_);
        onChanged();
      } else {
        metricsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
     */
    public Builder clearMetrics() {
      if (metricsBuilder_ == null) {
        metrics_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        metricsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
     */
    public Builder removeMetrics(int index) {
      if (metricsBuilder_ == null) {
        ensureMetricsIsMutable();
        metrics_.remove(index);
        onChanged();
      } else {
        metricsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
     */
    public org.zenoss.cloud.dataReceiver.Metric.Builder getMetricsBuilder(
        int index) {
      return getMetricsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
     */
    public org.zenoss.cloud.dataReceiver.MetricOrBuilder getMetricsOrBuilder(
        int index) {
      if (metricsBuilder_ == null) {
        return metrics_.get(index);  } else {
        return metricsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
     */
    public java.util.List<? extends org.zenoss.cloud.dataReceiver.MetricOrBuilder> 
         getMetricsOrBuilderList() {
      if (metricsBuilder_ != null) {
        return metricsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(metrics_);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
     */
    public org.zenoss.cloud.dataReceiver.Metric.Builder addMetricsBuilder() {
      return getMetricsFieldBuilder().addBuilder(
          org.zenoss.cloud.dataReceiver.Metric.getDefaultInstance());
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
     */
    public org.zenoss.cloud.dataReceiver.Metric.Builder addMetricsBuilder(
        int index) {
      return getMetricsFieldBuilder().addBuilder(
          index, org.zenoss.cloud.dataReceiver.Metric.getDefaultInstance());
    }
    /**
     * <code>repeated .zenoss.cloud.Metric metrics = 5;</code>
     */
    public java.util.List<org.zenoss.cloud.dataReceiver.Metric.Builder> 
         getMetricsBuilderList() {
      return getMetricsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.zenoss.cloud.dataReceiver.Metric, org.zenoss.cloud.dataReceiver.Metric.Builder, org.zenoss.cloud.dataReceiver.MetricOrBuilder> 
        getMetricsFieldBuilder() {
      if (metricsBuilder_ == null) {
        metricsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.zenoss.cloud.dataReceiver.Metric, org.zenoss.cloud.dataReceiver.Metric.Builder, org.zenoss.cloud.dataReceiver.MetricOrBuilder>(
                metrics_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        metrics_ = null;
      }
      return metricsBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:zenoss.cloud.Metrics)
  }

  // @@protoc_insertion_point(class_scope:zenoss.cloud.Metrics)
  private static final org.zenoss.cloud.dataReceiver.Metrics DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.zenoss.cloud.dataReceiver.Metrics();
  }

  public static org.zenoss.cloud.dataReceiver.Metrics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Metrics>
      PARSER = new com.google.protobuf.AbstractParser<Metrics>() {
    public Metrics parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new Metrics(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Metrics> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Metrics> getParserForType() {
    return PARSER;
  }

  public org.zenoss.cloud.dataReceiver.Metrics getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

