// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zenoss/cloud/data_receiver.proto

package org.zenoss.cloud.dataReceiver;

/**
 * Protobuf type {@code zenoss.cloud.StatusResult}
 */
public final class StatusResult extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:zenoss.cloud.StatusResult)
    StatusResultOrBuilder {
private static final long serialVersionUID = 0L;
  // Use StatusResult.newBuilder() to construct.
  private StatusResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private StatusResult() {
    message_ = "";
    failedCompactMetrics_ = java.util.Collections.emptyList();
    failedTaggedMetrics_ = java.util.Collections.emptyList();
    failedMetrics_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new StatusResult();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.zenoss.cloud.dataReceiver.DataReceiver.internal_static_zenoss_cloud_StatusResult_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.zenoss.cloud.dataReceiver.DataReceiver.internal_static_zenoss_cloud_StatusResult_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.zenoss.cloud.dataReceiver.StatusResult.class, org.zenoss.cloud.dataReceiver.StatusResult.Builder.class);
  }

  public static final int FAILED_FIELD_NUMBER = 1;
  private int failed_;
  /**
   * <pre>
   * failed is the count of metrics that failed to be accepted
   * </pre>
   *
   * <code>int32 failed = 1 [json_name = "failed"];</code>
   * @return The failed.
   */
  @java.lang.Override
  public int getFailed() {
    return failed_;
  }

  public static final int SUCCEEDED_FIELD_NUMBER = 2;
  private int succeeded_;
  /**
   * <pre>
   * succeeded is the count of metrics that were accepted
   * </pre>
   *
   * <code>int32 succeeded = 2 [json_name = "succeeded"];</code>
   * @return The succeeded.
   */
  @java.lang.Override
  public int getSucceeded() {
    return succeeded_;
  }

  public static final int MESSAGE_FIELD_NUMBER = 3;
  private volatile java.lang.Object message_;
  /**
   * <pre>
   * message is an informational message that may or may not be set
   * </pre>
   *
   * <code>string message = 3 [json_name = "message"];</code>
   * @return The message.
   */
  @java.lang.Override
  public java.lang.String getMessage() {
    java.lang.Object ref = message_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      message_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * message is an informational message that may or may not be set
   * </pre>
   *
   * <code>string message = 3 [json_name = "message"];</code>
   * @return The bytes for message.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMessageBytes() {
    java.lang.Object ref = message_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      message_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FAILEDCOMPACTMETRICS_FIELD_NUMBER = 4;
  private java.util.List<org.zenoss.cloud.dataReceiver.CompactMetricError> failedCompactMetrics_;
  /**
   * <pre>
   *Failed metrics only returned if detailedResponse is set to true
   * </pre>
   *
   * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
   */
  @java.lang.Override
  public java.util.List<org.zenoss.cloud.dataReceiver.CompactMetricError> getFailedCompactMetricsList() {
    return failedCompactMetrics_;
  }
  /**
   * <pre>
   *Failed metrics only returned if detailedResponse is set to true
   * </pre>
   *
   * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.zenoss.cloud.dataReceiver.CompactMetricErrorOrBuilder> 
      getFailedCompactMetricsOrBuilderList() {
    return failedCompactMetrics_;
  }
  /**
   * <pre>
   *Failed metrics only returned if detailedResponse is set to true
   * </pre>
   *
   * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
   */
  @java.lang.Override
  public int getFailedCompactMetricsCount() {
    return failedCompactMetrics_.size();
  }
  /**
   * <pre>
   *Failed metrics only returned if detailedResponse is set to true
   * </pre>
   *
   * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
   */
  @java.lang.Override
  public org.zenoss.cloud.dataReceiver.CompactMetricError getFailedCompactMetrics(int index) {
    return failedCompactMetrics_.get(index);
  }
  /**
   * <pre>
   *Failed metrics only returned if detailedResponse is set to true
   * </pre>
   *
   * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
   */
  @java.lang.Override
  public org.zenoss.cloud.dataReceiver.CompactMetricErrorOrBuilder getFailedCompactMetricsOrBuilder(
      int index) {
    return failedCompactMetrics_.get(index);
  }

  public static final int FAILEDTAGGEDMETRICS_FIELD_NUMBER = 5;
  private java.util.List<org.zenoss.cloud.dataReceiver.TaggedMetricError> failedTaggedMetrics_;
  /**
   * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
   */
  @java.lang.Override
  public java.util.List<org.zenoss.cloud.dataReceiver.TaggedMetricError> getFailedTaggedMetricsList() {
    return failedTaggedMetrics_;
  }
  /**
   * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.zenoss.cloud.dataReceiver.TaggedMetricErrorOrBuilder> 
      getFailedTaggedMetricsOrBuilderList() {
    return failedTaggedMetrics_;
  }
  /**
   * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
   */
  @java.lang.Override
  public int getFailedTaggedMetricsCount() {
    return failedTaggedMetrics_.size();
  }
  /**
   * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
   */
  @java.lang.Override
  public org.zenoss.cloud.dataReceiver.TaggedMetricError getFailedTaggedMetrics(int index) {
    return failedTaggedMetrics_.get(index);
  }
  /**
   * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
   */
  @java.lang.Override
  public org.zenoss.cloud.dataReceiver.TaggedMetricErrorOrBuilder getFailedTaggedMetricsOrBuilder(
      int index) {
    return failedTaggedMetrics_.get(index);
  }

  public static final int FAILEDMETRICS_FIELD_NUMBER = 6;
  private java.util.List<org.zenoss.cloud.dataReceiver.MetricError> failedMetrics_;
  /**
   * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
   */
  @java.lang.Override
  public java.util.List<org.zenoss.cloud.dataReceiver.MetricError> getFailedMetricsList() {
    return failedMetrics_;
  }
  /**
   * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.zenoss.cloud.dataReceiver.MetricErrorOrBuilder> 
      getFailedMetricsOrBuilderList() {
    return failedMetrics_;
  }
  /**
   * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
   */
  @java.lang.Override
  public int getFailedMetricsCount() {
    return failedMetrics_.size();
  }
  /**
   * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
   */
  @java.lang.Override
  public org.zenoss.cloud.dataReceiver.MetricError getFailedMetrics(int index) {
    return failedMetrics_.get(index);
  }
  /**
   * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
   */
  @java.lang.Override
  public org.zenoss.cloud.dataReceiver.MetricErrorOrBuilder getFailedMetricsOrBuilder(
      int index) {
    return failedMetrics_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (failed_ != 0) {
      output.writeInt32(1, failed_);
    }
    if (succeeded_ != 0) {
      output.writeInt32(2, succeeded_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, message_);
    }
    for (int i = 0; i < failedCompactMetrics_.size(); i++) {
      output.writeMessage(4, failedCompactMetrics_.get(i));
    }
    for (int i = 0; i < failedTaggedMetrics_.size(); i++) {
      output.writeMessage(5, failedTaggedMetrics_.get(i));
    }
    for (int i = 0; i < failedMetrics_.size(); i++) {
      output.writeMessage(6, failedMetrics_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (failed_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, failed_);
    }
    if (succeeded_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, succeeded_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, message_);
    }
    for (int i = 0; i < failedCompactMetrics_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, failedCompactMetrics_.get(i));
    }
    for (int i = 0; i < failedTaggedMetrics_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, failedTaggedMetrics_.get(i));
    }
    for (int i = 0; i < failedMetrics_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, failedMetrics_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.zenoss.cloud.dataReceiver.StatusResult)) {
      return super.equals(obj);
    }
    org.zenoss.cloud.dataReceiver.StatusResult other = (org.zenoss.cloud.dataReceiver.StatusResult) obj;

    if (getFailed()
        != other.getFailed()) return false;
    if (getSucceeded()
        != other.getSucceeded()) return false;
    if (!getMessage()
        .equals(other.getMessage())) return false;
    if (!getFailedCompactMetricsList()
        .equals(other.getFailedCompactMetricsList())) return false;
    if (!getFailedTaggedMetricsList()
        .equals(other.getFailedTaggedMetricsList())) return false;
    if (!getFailedMetricsList()
        .equals(other.getFailedMetricsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + FAILED_FIELD_NUMBER;
    hash = (53 * hash) + getFailed();
    hash = (37 * hash) + SUCCEEDED_FIELD_NUMBER;
    hash = (53 * hash) + getSucceeded();
    hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
    hash = (53 * hash) + getMessage().hashCode();
    if (getFailedCompactMetricsCount() > 0) {
      hash = (37 * hash) + FAILEDCOMPACTMETRICS_FIELD_NUMBER;
      hash = (53 * hash) + getFailedCompactMetricsList().hashCode();
    }
    if (getFailedTaggedMetricsCount() > 0) {
      hash = (37 * hash) + FAILEDTAGGEDMETRICS_FIELD_NUMBER;
      hash = (53 * hash) + getFailedTaggedMetricsList().hashCode();
    }
    if (getFailedMetricsCount() > 0) {
      hash = (37 * hash) + FAILEDMETRICS_FIELD_NUMBER;
      hash = (53 * hash) + getFailedMetricsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.zenoss.cloud.dataReceiver.StatusResult parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.zenoss.cloud.dataReceiver.StatusResult parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.zenoss.cloud.dataReceiver.StatusResult parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.zenoss.cloud.dataReceiver.StatusResult parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.zenoss.cloud.dataReceiver.StatusResult parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.zenoss.cloud.dataReceiver.StatusResult parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.zenoss.cloud.dataReceiver.StatusResult parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.zenoss.cloud.dataReceiver.StatusResult parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.zenoss.cloud.dataReceiver.StatusResult parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.zenoss.cloud.dataReceiver.StatusResult parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.zenoss.cloud.dataReceiver.StatusResult parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.zenoss.cloud.dataReceiver.StatusResult parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.zenoss.cloud.dataReceiver.StatusResult prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code zenoss.cloud.StatusResult}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:zenoss.cloud.StatusResult)
      org.zenoss.cloud.dataReceiver.StatusResultOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.zenoss.cloud.dataReceiver.DataReceiver.internal_static_zenoss_cloud_StatusResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.zenoss.cloud.dataReceiver.DataReceiver.internal_static_zenoss_cloud_StatusResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.zenoss.cloud.dataReceiver.StatusResult.class, org.zenoss.cloud.dataReceiver.StatusResult.Builder.class);
    }

    // Construct using org.zenoss.cloud.dataReceiver.StatusResult.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      failed_ = 0;

      succeeded_ = 0;

      message_ = "";

      if (failedCompactMetricsBuilder_ == null) {
        failedCompactMetrics_ = java.util.Collections.emptyList();
      } else {
        failedCompactMetrics_ = null;
        failedCompactMetricsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (failedTaggedMetricsBuilder_ == null) {
        failedTaggedMetrics_ = java.util.Collections.emptyList();
      } else {
        failedTaggedMetrics_ = null;
        failedTaggedMetricsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (failedMetricsBuilder_ == null) {
        failedMetrics_ = java.util.Collections.emptyList();
      } else {
        failedMetrics_ = null;
        failedMetricsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.zenoss.cloud.dataReceiver.DataReceiver.internal_static_zenoss_cloud_StatusResult_descriptor;
    }

    @java.lang.Override
    public org.zenoss.cloud.dataReceiver.StatusResult getDefaultInstanceForType() {
      return org.zenoss.cloud.dataReceiver.StatusResult.getDefaultInstance();
    }

    @java.lang.Override
    public org.zenoss.cloud.dataReceiver.StatusResult build() {
      org.zenoss.cloud.dataReceiver.StatusResult result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.zenoss.cloud.dataReceiver.StatusResult buildPartial() {
      org.zenoss.cloud.dataReceiver.StatusResult result = new org.zenoss.cloud.dataReceiver.StatusResult(this);
      int from_bitField0_ = bitField0_;
      result.failed_ = failed_;
      result.succeeded_ = succeeded_;
      result.message_ = message_;
      if (failedCompactMetricsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          failedCompactMetrics_ = java.util.Collections.unmodifiableList(failedCompactMetrics_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.failedCompactMetrics_ = failedCompactMetrics_;
      } else {
        result.failedCompactMetrics_ = failedCompactMetricsBuilder_.build();
      }
      if (failedTaggedMetricsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          failedTaggedMetrics_ = java.util.Collections.unmodifiableList(failedTaggedMetrics_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.failedTaggedMetrics_ = failedTaggedMetrics_;
      } else {
        result.failedTaggedMetrics_ = failedTaggedMetricsBuilder_.build();
      }
      if (failedMetricsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          failedMetrics_ = java.util.Collections.unmodifiableList(failedMetrics_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.failedMetrics_ = failedMetrics_;
      } else {
        result.failedMetrics_ = failedMetricsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.zenoss.cloud.dataReceiver.StatusResult) {
        return mergeFrom((org.zenoss.cloud.dataReceiver.StatusResult)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.zenoss.cloud.dataReceiver.StatusResult other) {
      if (other == org.zenoss.cloud.dataReceiver.StatusResult.getDefaultInstance()) return this;
      if (other.getFailed() != 0) {
        setFailed(other.getFailed());
      }
      if (other.getSucceeded() != 0) {
        setSucceeded(other.getSucceeded());
      }
      if (!other.getMessage().isEmpty()) {
        message_ = other.message_;
        onChanged();
      }
      if (failedCompactMetricsBuilder_ == null) {
        if (!other.failedCompactMetrics_.isEmpty()) {
          if (failedCompactMetrics_.isEmpty()) {
            failedCompactMetrics_ = other.failedCompactMetrics_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFailedCompactMetricsIsMutable();
            failedCompactMetrics_.addAll(other.failedCompactMetrics_);
          }
          onChanged();
        }
      } else {
        if (!other.failedCompactMetrics_.isEmpty()) {
          if (failedCompactMetricsBuilder_.isEmpty()) {
            failedCompactMetricsBuilder_.dispose();
            failedCompactMetricsBuilder_ = null;
            failedCompactMetrics_ = other.failedCompactMetrics_;
            bitField0_ = (bitField0_ & ~0x00000001);
            failedCompactMetricsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFailedCompactMetricsFieldBuilder() : null;
          } else {
            failedCompactMetricsBuilder_.addAllMessages(other.failedCompactMetrics_);
          }
        }
      }
      if (failedTaggedMetricsBuilder_ == null) {
        if (!other.failedTaggedMetrics_.isEmpty()) {
          if (failedTaggedMetrics_.isEmpty()) {
            failedTaggedMetrics_ = other.failedTaggedMetrics_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFailedTaggedMetricsIsMutable();
            failedTaggedMetrics_.addAll(other.failedTaggedMetrics_);
          }
          onChanged();
        }
      } else {
        if (!other.failedTaggedMetrics_.isEmpty()) {
          if (failedTaggedMetricsBuilder_.isEmpty()) {
            failedTaggedMetricsBuilder_.dispose();
            failedTaggedMetricsBuilder_ = null;
            failedTaggedMetrics_ = other.failedTaggedMetrics_;
            bitField0_ = (bitField0_ & ~0x00000002);
            failedTaggedMetricsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFailedTaggedMetricsFieldBuilder() : null;
          } else {
            failedTaggedMetricsBuilder_.addAllMessages(other.failedTaggedMetrics_);
          }
        }
      }
      if (failedMetricsBuilder_ == null) {
        if (!other.failedMetrics_.isEmpty()) {
          if (failedMetrics_.isEmpty()) {
            failedMetrics_ = other.failedMetrics_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureFailedMetricsIsMutable();
            failedMetrics_.addAll(other.failedMetrics_);
          }
          onChanged();
        }
      } else {
        if (!other.failedMetrics_.isEmpty()) {
          if (failedMetricsBuilder_.isEmpty()) {
            failedMetricsBuilder_.dispose();
            failedMetricsBuilder_ = null;
            failedMetrics_ = other.failedMetrics_;
            bitField0_ = (bitField0_ & ~0x00000004);
            failedMetricsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFailedMetricsFieldBuilder() : null;
          } else {
            failedMetricsBuilder_.addAllMessages(other.failedMetrics_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              failed_ = input.readInt32();

              break;
            } // case 8
            case 16: {
              succeeded_ = input.readInt32();

              break;
            } // case 16
            case 26: {
              message_ = input.readStringRequireUtf8();

              break;
            } // case 26
            case 34: {
              org.zenoss.cloud.dataReceiver.CompactMetricError m =
                  input.readMessage(
                      org.zenoss.cloud.dataReceiver.CompactMetricError.parser(),
                      extensionRegistry);
              if (failedCompactMetricsBuilder_ == null) {
                ensureFailedCompactMetricsIsMutable();
                failedCompactMetrics_.add(m);
              } else {
                failedCompactMetricsBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              org.zenoss.cloud.dataReceiver.TaggedMetricError m =
                  input.readMessage(
                      org.zenoss.cloud.dataReceiver.TaggedMetricError.parser(),
                      extensionRegistry);
              if (failedTaggedMetricsBuilder_ == null) {
                ensureFailedTaggedMetricsIsMutable();
                failedTaggedMetrics_.add(m);
              } else {
                failedTaggedMetricsBuilder_.addMessage(m);
              }
              break;
            } // case 42
            case 50: {
              org.zenoss.cloud.dataReceiver.MetricError m =
                  input.readMessage(
                      org.zenoss.cloud.dataReceiver.MetricError.parser(),
                      extensionRegistry);
              if (failedMetricsBuilder_ == null) {
                ensureFailedMetricsIsMutable();
                failedMetrics_.add(m);
              } else {
                failedMetricsBuilder_.addMessage(m);
              }
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int failed_ ;
    /**
     * <pre>
     * failed is the count of metrics that failed to be accepted
     * </pre>
     *
     * <code>int32 failed = 1 [json_name = "failed"];</code>
     * @return The failed.
     */
    @java.lang.Override
    public int getFailed() {
      return failed_;
    }
    /**
     * <pre>
     * failed is the count of metrics that failed to be accepted
     * </pre>
     *
     * <code>int32 failed = 1 [json_name = "failed"];</code>
     * @param value The failed to set.
     * @return This builder for chaining.
     */
    public Builder setFailed(int value) {
      
      failed_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * failed is the count of metrics that failed to be accepted
     * </pre>
     *
     * <code>int32 failed = 1 [json_name = "failed"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFailed() {
      
      failed_ = 0;
      onChanged();
      return this;
    }

    private int succeeded_ ;
    /**
     * <pre>
     * succeeded is the count of metrics that were accepted
     * </pre>
     *
     * <code>int32 succeeded = 2 [json_name = "succeeded"];</code>
     * @return The succeeded.
     */
    @java.lang.Override
    public int getSucceeded() {
      return succeeded_;
    }
    /**
     * <pre>
     * succeeded is the count of metrics that were accepted
     * </pre>
     *
     * <code>int32 succeeded = 2 [json_name = "succeeded"];</code>
     * @param value The succeeded to set.
     * @return This builder for chaining.
     */
    public Builder setSucceeded(int value) {
      
      succeeded_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * succeeded is the count of metrics that were accepted
     * </pre>
     *
     * <code>int32 succeeded = 2 [json_name = "succeeded"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSucceeded() {
      
      succeeded_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object message_ = "";
    /**
     * <pre>
     * message is an informational message that may or may not be set
     * </pre>
     *
     * <code>string message = 3 [json_name = "message"];</code>
     * @return The message.
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * message is an informational message that may or may not be set
     * </pre>
     *
     * <code>string message = 3 [json_name = "message"];</code>
     * @return The bytes for message.
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * message is an informational message that may or may not be set
     * </pre>
     *
     * <code>string message = 3 [json_name = "message"];</code>
     * @param value The message to set.
     * @return This builder for chaining.
     */
    public Builder setMessage(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      message_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * message is an informational message that may or may not be set
     * </pre>
     *
     * <code>string message = 3 [json_name = "message"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMessage() {
      
      message_ = getDefaultInstance().getMessage();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * message is an informational message that may or may not be set
     * </pre>
     *
     * <code>string message = 3 [json_name = "message"];</code>
     * @param value The bytes for message to set.
     * @return This builder for chaining.
     */
    public Builder setMessageBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      message_ = value;
      onChanged();
      return this;
    }

    private java.util.List<org.zenoss.cloud.dataReceiver.CompactMetricError> failedCompactMetrics_ =
      java.util.Collections.emptyList();
    private void ensureFailedCompactMetricsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        failedCompactMetrics_ = new java.util.ArrayList<org.zenoss.cloud.dataReceiver.CompactMetricError>(failedCompactMetrics_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.zenoss.cloud.dataReceiver.CompactMetricError, org.zenoss.cloud.dataReceiver.CompactMetricError.Builder, org.zenoss.cloud.dataReceiver.CompactMetricErrorOrBuilder> failedCompactMetricsBuilder_;

    /**
     * <pre>
     *Failed metrics only returned if detailedResponse is set to true
     * </pre>
     *
     * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
     */
    public java.util.List<org.zenoss.cloud.dataReceiver.CompactMetricError> getFailedCompactMetricsList() {
      if (failedCompactMetricsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(failedCompactMetrics_);
      } else {
        return failedCompactMetricsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *Failed metrics only returned if detailedResponse is set to true
     * </pre>
     *
     * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
     */
    public int getFailedCompactMetricsCount() {
      if (failedCompactMetricsBuilder_ == null) {
        return failedCompactMetrics_.size();
      } else {
        return failedCompactMetricsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *Failed metrics only returned if detailedResponse is set to true
     * </pre>
     *
     * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
     */
    public org.zenoss.cloud.dataReceiver.CompactMetricError getFailedCompactMetrics(int index) {
      if (failedCompactMetricsBuilder_ == null) {
        return failedCompactMetrics_.get(index);
      } else {
        return failedCompactMetricsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *Failed metrics only returned if detailedResponse is set to true
     * </pre>
     *
     * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
     */
    public Builder setFailedCompactMetrics(
        int index, org.zenoss.cloud.dataReceiver.CompactMetricError value) {
      if (failedCompactMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFailedCompactMetricsIsMutable();
        failedCompactMetrics_.set(index, value);
        onChanged();
      } else {
        failedCompactMetricsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *Failed metrics only returned if detailedResponse is set to true
     * </pre>
     *
     * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
     */
    public Builder setFailedCompactMetrics(
        int index, org.zenoss.cloud.dataReceiver.CompactMetricError.Builder builderForValue) {
      if (failedCompactMetricsBuilder_ == null) {
        ensureFailedCompactMetricsIsMutable();
        failedCompactMetrics_.set(index, builderForValue.build());
        onChanged();
      } else {
        failedCompactMetricsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *Failed metrics only returned if detailedResponse is set to true
     * </pre>
     *
     * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
     */
    public Builder addFailedCompactMetrics(org.zenoss.cloud.dataReceiver.CompactMetricError value) {
      if (failedCompactMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFailedCompactMetricsIsMutable();
        failedCompactMetrics_.add(value);
        onChanged();
      } else {
        failedCompactMetricsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *Failed metrics only returned if detailedResponse is set to true
     * </pre>
     *
     * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
     */
    public Builder addFailedCompactMetrics(
        int index, org.zenoss.cloud.dataReceiver.CompactMetricError value) {
      if (failedCompactMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFailedCompactMetricsIsMutable();
        failedCompactMetrics_.add(index, value);
        onChanged();
      } else {
        failedCompactMetricsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *Failed metrics only returned if detailedResponse is set to true
     * </pre>
     *
     * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
     */
    public Builder addFailedCompactMetrics(
        org.zenoss.cloud.dataReceiver.CompactMetricError.Builder builderForValue) {
      if (failedCompactMetricsBuilder_ == null) {
        ensureFailedCompactMetricsIsMutable();
        failedCompactMetrics_.add(builderForValue.build());
        onChanged();
      } else {
        failedCompactMetricsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *Failed metrics only returned if detailedResponse is set to true
     * </pre>
     *
     * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
     */
    public Builder addFailedCompactMetrics(
        int index, org.zenoss.cloud.dataReceiver.CompactMetricError.Builder builderForValue) {
      if (failedCompactMetricsBuilder_ == null) {
        ensureFailedCompactMetricsIsMutable();
        failedCompactMetrics_.add(index, builderForValue.build());
        onChanged();
      } else {
        failedCompactMetricsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *Failed metrics only returned if detailedResponse is set to true
     * </pre>
     *
     * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
     */
    public Builder addAllFailedCompactMetrics(
        java.lang.Iterable<? extends org.zenoss.cloud.dataReceiver.CompactMetricError> values) {
      if (failedCompactMetricsBuilder_ == null) {
        ensureFailedCompactMetricsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, failedCompactMetrics_);
        onChanged();
      } else {
        failedCompactMetricsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *Failed metrics only returned if detailedResponse is set to true
     * </pre>
     *
     * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
     */
    public Builder clearFailedCompactMetrics() {
      if (failedCompactMetricsBuilder_ == null) {
        failedCompactMetrics_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        failedCompactMetricsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *Failed metrics only returned if detailedResponse is set to true
     * </pre>
     *
     * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
     */
    public Builder removeFailedCompactMetrics(int index) {
      if (failedCompactMetricsBuilder_ == null) {
        ensureFailedCompactMetricsIsMutable();
        failedCompactMetrics_.remove(index);
        onChanged();
      } else {
        failedCompactMetricsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *Failed metrics only returned if detailedResponse is set to true
     * </pre>
     *
     * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
     */
    public org.zenoss.cloud.dataReceiver.CompactMetricError.Builder getFailedCompactMetricsBuilder(
        int index) {
      return getFailedCompactMetricsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *Failed metrics only returned if detailedResponse is set to true
     * </pre>
     *
     * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
     */
    public org.zenoss.cloud.dataReceiver.CompactMetricErrorOrBuilder getFailedCompactMetricsOrBuilder(
        int index) {
      if (failedCompactMetricsBuilder_ == null) {
        return failedCompactMetrics_.get(index);  } else {
        return failedCompactMetricsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *Failed metrics only returned if detailedResponse is set to true
     * </pre>
     *
     * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
     */
    public java.util.List<? extends org.zenoss.cloud.dataReceiver.CompactMetricErrorOrBuilder> 
         getFailedCompactMetricsOrBuilderList() {
      if (failedCompactMetricsBuilder_ != null) {
        return failedCompactMetricsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(failedCompactMetrics_);
      }
    }
    /**
     * <pre>
     *Failed metrics only returned if detailedResponse is set to true
     * </pre>
     *
     * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
     */
    public org.zenoss.cloud.dataReceiver.CompactMetricError.Builder addFailedCompactMetricsBuilder() {
      return getFailedCompactMetricsFieldBuilder().addBuilder(
          org.zenoss.cloud.dataReceiver.CompactMetricError.getDefaultInstance());
    }
    /**
     * <pre>
     *Failed metrics only returned if detailedResponse is set to true
     * </pre>
     *
     * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
     */
    public org.zenoss.cloud.dataReceiver.CompactMetricError.Builder addFailedCompactMetricsBuilder(
        int index) {
      return getFailedCompactMetricsFieldBuilder().addBuilder(
          index, org.zenoss.cloud.dataReceiver.CompactMetricError.getDefaultInstance());
    }
    /**
     * <pre>
     *Failed metrics only returned if detailedResponse is set to true
     * </pre>
     *
     * <code>repeated .zenoss.cloud.CompactMetricError failedCompactMetrics = 4 [json_name = "failedCompactMetrics"];</code>
     */
    public java.util.List<org.zenoss.cloud.dataReceiver.CompactMetricError.Builder> 
         getFailedCompactMetricsBuilderList() {
      return getFailedCompactMetricsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.zenoss.cloud.dataReceiver.CompactMetricError, org.zenoss.cloud.dataReceiver.CompactMetricError.Builder, org.zenoss.cloud.dataReceiver.CompactMetricErrorOrBuilder> 
        getFailedCompactMetricsFieldBuilder() {
      if (failedCompactMetricsBuilder_ == null) {
        failedCompactMetricsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.zenoss.cloud.dataReceiver.CompactMetricError, org.zenoss.cloud.dataReceiver.CompactMetricError.Builder, org.zenoss.cloud.dataReceiver.CompactMetricErrorOrBuilder>(
                failedCompactMetrics_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        failedCompactMetrics_ = null;
      }
      return failedCompactMetricsBuilder_;
    }

    private java.util.List<org.zenoss.cloud.dataReceiver.TaggedMetricError> failedTaggedMetrics_ =
      java.util.Collections.emptyList();
    private void ensureFailedTaggedMetricsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        failedTaggedMetrics_ = new java.util.ArrayList<org.zenoss.cloud.dataReceiver.TaggedMetricError>(failedTaggedMetrics_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.zenoss.cloud.dataReceiver.TaggedMetricError, org.zenoss.cloud.dataReceiver.TaggedMetricError.Builder, org.zenoss.cloud.dataReceiver.TaggedMetricErrorOrBuilder> failedTaggedMetricsBuilder_;

    /**
     * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
     */
    public java.util.List<org.zenoss.cloud.dataReceiver.TaggedMetricError> getFailedTaggedMetricsList() {
      if (failedTaggedMetricsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(failedTaggedMetrics_);
      } else {
        return failedTaggedMetricsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
     */
    public int getFailedTaggedMetricsCount() {
      if (failedTaggedMetricsBuilder_ == null) {
        return failedTaggedMetrics_.size();
      } else {
        return failedTaggedMetricsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
     */
    public org.zenoss.cloud.dataReceiver.TaggedMetricError getFailedTaggedMetrics(int index) {
      if (failedTaggedMetricsBuilder_ == null) {
        return failedTaggedMetrics_.get(index);
      } else {
        return failedTaggedMetricsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
     */
    public Builder setFailedTaggedMetrics(
        int index, org.zenoss.cloud.dataReceiver.TaggedMetricError value) {
      if (failedTaggedMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFailedTaggedMetricsIsMutable();
        failedTaggedMetrics_.set(index, value);
        onChanged();
      } else {
        failedTaggedMetricsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
     */
    public Builder setFailedTaggedMetrics(
        int index, org.zenoss.cloud.dataReceiver.TaggedMetricError.Builder builderForValue) {
      if (failedTaggedMetricsBuilder_ == null) {
        ensureFailedTaggedMetricsIsMutable();
        failedTaggedMetrics_.set(index, builderForValue.build());
        onChanged();
      } else {
        failedTaggedMetricsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
     */
    public Builder addFailedTaggedMetrics(org.zenoss.cloud.dataReceiver.TaggedMetricError value) {
      if (failedTaggedMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFailedTaggedMetricsIsMutable();
        failedTaggedMetrics_.add(value);
        onChanged();
      } else {
        failedTaggedMetricsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
     */
    public Builder addFailedTaggedMetrics(
        int index, org.zenoss.cloud.dataReceiver.TaggedMetricError value) {
      if (failedTaggedMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFailedTaggedMetricsIsMutable();
        failedTaggedMetrics_.add(index, value);
        onChanged();
      } else {
        failedTaggedMetricsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
     */
    public Builder addFailedTaggedMetrics(
        org.zenoss.cloud.dataReceiver.TaggedMetricError.Builder builderForValue) {
      if (failedTaggedMetricsBuilder_ == null) {
        ensureFailedTaggedMetricsIsMutable();
        failedTaggedMetrics_.add(builderForValue.build());
        onChanged();
      } else {
        failedTaggedMetricsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
     */
    public Builder addFailedTaggedMetrics(
        int index, org.zenoss.cloud.dataReceiver.TaggedMetricError.Builder builderForValue) {
      if (failedTaggedMetricsBuilder_ == null) {
        ensureFailedTaggedMetricsIsMutable();
        failedTaggedMetrics_.add(index, builderForValue.build());
        onChanged();
      } else {
        failedTaggedMetricsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
     */
    public Builder addAllFailedTaggedMetrics(
        java.lang.Iterable<? extends org.zenoss.cloud.dataReceiver.TaggedMetricError> values) {
      if (failedTaggedMetricsBuilder_ == null) {
        ensureFailedTaggedMetricsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, failedTaggedMetrics_);
        onChanged();
      } else {
        failedTaggedMetricsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
     */
    public Builder clearFailedTaggedMetrics() {
      if (failedTaggedMetricsBuilder_ == null) {
        failedTaggedMetrics_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        failedTaggedMetricsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
     */
    public Builder removeFailedTaggedMetrics(int index) {
      if (failedTaggedMetricsBuilder_ == null) {
        ensureFailedTaggedMetricsIsMutable();
        failedTaggedMetrics_.remove(index);
        onChanged();
      } else {
        failedTaggedMetricsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
     */
    public org.zenoss.cloud.dataReceiver.TaggedMetricError.Builder getFailedTaggedMetricsBuilder(
        int index) {
      return getFailedTaggedMetricsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
     */
    public org.zenoss.cloud.dataReceiver.TaggedMetricErrorOrBuilder getFailedTaggedMetricsOrBuilder(
        int index) {
      if (failedTaggedMetricsBuilder_ == null) {
        return failedTaggedMetrics_.get(index);  } else {
        return failedTaggedMetricsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
     */
    public java.util.List<? extends org.zenoss.cloud.dataReceiver.TaggedMetricErrorOrBuilder> 
         getFailedTaggedMetricsOrBuilderList() {
      if (failedTaggedMetricsBuilder_ != null) {
        return failedTaggedMetricsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(failedTaggedMetrics_);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
     */
    public org.zenoss.cloud.dataReceiver.TaggedMetricError.Builder addFailedTaggedMetricsBuilder() {
      return getFailedTaggedMetricsFieldBuilder().addBuilder(
          org.zenoss.cloud.dataReceiver.TaggedMetricError.getDefaultInstance());
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
     */
    public org.zenoss.cloud.dataReceiver.TaggedMetricError.Builder addFailedTaggedMetricsBuilder(
        int index) {
      return getFailedTaggedMetricsFieldBuilder().addBuilder(
          index, org.zenoss.cloud.dataReceiver.TaggedMetricError.getDefaultInstance());
    }
    /**
     * <code>repeated .zenoss.cloud.TaggedMetricError failedTaggedMetrics = 5 [json_name = "failedTaggedMetrics"];</code>
     */
    public java.util.List<org.zenoss.cloud.dataReceiver.TaggedMetricError.Builder> 
         getFailedTaggedMetricsBuilderList() {
      return getFailedTaggedMetricsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.zenoss.cloud.dataReceiver.TaggedMetricError, org.zenoss.cloud.dataReceiver.TaggedMetricError.Builder, org.zenoss.cloud.dataReceiver.TaggedMetricErrorOrBuilder> 
        getFailedTaggedMetricsFieldBuilder() {
      if (failedTaggedMetricsBuilder_ == null) {
        failedTaggedMetricsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.zenoss.cloud.dataReceiver.TaggedMetricError, org.zenoss.cloud.dataReceiver.TaggedMetricError.Builder, org.zenoss.cloud.dataReceiver.TaggedMetricErrorOrBuilder>(
                failedTaggedMetrics_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        failedTaggedMetrics_ = null;
      }
      return failedTaggedMetricsBuilder_;
    }

    private java.util.List<org.zenoss.cloud.dataReceiver.MetricError> failedMetrics_ =
      java.util.Collections.emptyList();
    private void ensureFailedMetricsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        failedMetrics_ = new java.util.ArrayList<org.zenoss.cloud.dataReceiver.MetricError>(failedMetrics_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.zenoss.cloud.dataReceiver.MetricError, org.zenoss.cloud.dataReceiver.MetricError.Builder, org.zenoss.cloud.dataReceiver.MetricErrorOrBuilder> failedMetricsBuilder_;

    /**
     * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
     */
    public java.util.List<org.zenoss.cloud.dataReceiver.MetricError> getFailedMetricsList() {
      if (failedMetricsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(failedMetrics_);
      } else {
        return failedMetricsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
     */
    public int getFailedMetricsCount() {
      if (failedMetricsBuilder_ == null) {
        return failedMetrics_.size();
      } else {
        return failedMetricsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
     */
    public org.zenoss.cloud.dataReceiver.MetricError getFailedMetrics(int index) {
      if (failedMetricsBuilder_ == null) {
        return failedMetrics_.get(index);
      } else {
        return failedMetricsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
     */
    public Builder setFailedMetrics(
        int index, org.zenoss.cloud.dataReceiver.MetricError value) {
      if (failedMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFailedMetricsIsMutable();
        failedMetrics_.set(index, value);
        onChanged();
      } else {
        failedMetricsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
     */
    public Builder setFailedMetrics(
        int index, org.zenoss.cloud.dataReceiver.MetricError.Builder builderForValue) {
      if (failedMetricsBuilder_ == null) {
        ensureFailedMetricsIsMutable();
        failedMetrics_.set(index, builderForValue.build());
        onChanged();
      } else {
        failedMetricsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
     */
    public Builder addFailedMetrics(org.zenoss.cloud.dataReceiver.MetricError value) {
      if (failedMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFailedMetricsIsMutable();
        failedMetrics_.add(value);
        onChanged();
      } else {
        failedMetricsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
     */
    public Builder addFailedMetrics(
        int index, org.zenoss.cloud.dataReceiver.MetricError value) {
      if (failedMetricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFailedMetricsIsMutable();
        failedMetrics_.add(index, value);
        onChanged();
      } else {
        failedMetricsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
     */
    public Builder addFailedMetrics(
        org.zenoss.cloud.dataReceiver.MetricError.Builder builderForValue) {
      if (failedMetricsBuilder_ == null) {
        ensureFailedMetricsIsMutable();
        failedMetrics_.add(builderForValue.build());
        onChanged();
      } else {
        failedMetricsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
     */
    public Builder addFailedMetrics(
        int index, org.zenoss.cloud.dataReceiver.MetricError.Builder builderForValue) {
      if (failedMetricsBuilder_ == null) {
        ensureFailedMetricsIsMutable();
        failedMetrics_.add(index, builderForValue.build());
        onChanged();
      } else {
        failedMetricsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
     */
    public Builder addAllFailedMetrics(
        java.lang.Iterable<? extends org.zenoss.cloud.dataReceiver.MetricError> values) {
      if (failedMetricsBuilder_ == null) {
        ensureFailedMetricsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, failedMetrics_);
        onChanged();
      } else {
        failedMetricsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
     */
    public Builder clearFailedMetrics() {
      if (failedMetricsBuilder_ == null) {
        failedMetrics_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        failedMetricsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
     */
    public Builder removeFailedMetrics(int index) {
      if (failedMetricsBuilder_ == null) {
        ensureFailedMetricsIsMutable();
        failedMetrics_.remove(index);
        onChanged();
      } else {
        failedMetricsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
     */
    public org.zenoss.cloud.dataReceiver.MetricError.Builder getFailedMetricsBuilder(
        int index) {
      return getFailedMetricsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
     */
    public org.zenoss.cloud.dataReceiver.MetricErrorOrBuilder getFailedMetricsOrBuilder(
        int index) {
      if (failedMetricsBuilder_ == null) {
        return failedMetrics_.get(index);  } else {
        return failedMetricsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
     */
    public java.util.List<? extends org.zenoss.cloud.dataReceiver.MetricErrorOrBuilder> 
         getFailedMetricsOrBuilderList() {
      if (failedMetricsBuilder_ != null) {
        return failedMetricsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(failedMetrics_);
      }
    }
    /**
     * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
     */
    public org.zenoss.cloud.dataReceiver.MetricError.Builder addFailedMetricsBuilder() {
      return getFailedMetricsFieldBuilder().addBuilder(
          org.zenoss.cloud.dataReceiver.MetricError.getDefaultInstance());
    }
    /**
     * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
     */
    public org.zenoss.cloud.dataReceiver.MetricError.Builder addFailedMetricsBuilder(
        int index) {
      return getFailedMetricsFieldBuilder().addBuilder(
          index, org.zenoss.cloud.dataReceiver.MetricError.getDefaultInstance());
    }
    /**
     * <code>repeated .zenoss.cloud.MetricError failedMetrics = 6 [json_name = "failedMetrics"];</code>
     */
    public java.util.List<org.zenoss.cloud.dataReceiver.MetricError.Builder> 
         getFailedMetricsBuilderList() {
      return getFailedMetricsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.zenoss.cloud.dataReceiver.MetricError, org.zenoss.cloud.dataReceiver.MetricError.Builder, org.zenoss.cloud.dataReceiver.MetricErrorOrBuilder> 
        getFailedMetricsFieldBuilder() {
      if (failedMetricsBuilder_ == null) {
        failedMetricsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.zenoss.cloud.dataReceiver.MetricError, org.zenoss.cloud.dataReceiver.MetricError.Builder, org.zenoss.cloud.dataReceiver.MetricErrorOrBuilder>(
                failedMetrics_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        failedMetrics_ = null;
      }
      return failedMetricsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:zenoss.cloud.StatusResult)
  }

  // @@protoc_insertion_point(class_scope:zenoss.cloud.StatusResult)
  private static final org.zenoss.cloud.dataReceiver.StatusResult DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.zenoss.cloud.dataReceiver.StatusResult();
  }

  public static org.zenoss.cloud.dataReceiver.StatusResult getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<StatusResult>
      PARSER = new com.google.protobuf.AbstractParser<StatusResult>() {
    @java.lang.Override
    public StatusResult parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<StatusResult> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<StatusResult> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.zenoss.cloud.dataReceiver.StatusResult getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

