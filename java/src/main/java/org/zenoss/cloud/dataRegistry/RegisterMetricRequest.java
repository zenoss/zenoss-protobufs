// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zenoss/cloud/data_registry.proto

package org.zenoss.cloud.dataRegistry;

/**
 * Protobuf type {@code zenoss.cloud.RegisterMetricRequest}
 */
public final class RegisterMetricRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:zenoss.cloud.RegisterMetricRequest)
    RegisterMetricRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RegisterMetricRequest.newBuilder() to construct.
  private RegisterMetricRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RegisterMetricRequest() {
    updateMode_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RegisterMetricRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.zenoss.cloud.dataRegistry.DataRegistry.internal_static_zenoss_cloud_RegisterMetricRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.zenoss.cloud.dataRegistry.DataRegistry.internal_static_zenoss_cloud_RegisterMetricRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.zenoss.cloud.dataRegistry.RegisterMetricRequest.class, org.zenoss.cloud.dataRegistry.RegisterMetricRequest.Builder.class);
  }

  private int bitField0_;
  public static final int METRIC_FIELD_NUMBER = 1;
  private org.zenoss.cloud.dataReceiver.MetricWrapper metric_;
  /**
   * <code>.zenoss.cloud.MetricWrapper metric = 1 [json_name = "metric"];</code>
   * @return Whether the metric field is set.
   */
  @java.lang.Override
  public boolean hasMetric() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.zenoss.cloud.MetricWrapper metric = 1 [json_name = "metric"];</code>
   * @return The metric.
   */
  @java.lang.Override
  public org.zenoss.cloud.dataReceiver.MetricWrapper getMetric() {
    return metric_ == null ? org.zenoss.cloud.dataReceiver.MetricWrapper.getDefaultInstance() : metric_;
  }
  /**
   * <code>.zenoss.cloud.MetricWrapper metric = 1 [json_name = "metric"];</code>
   */
  @java.lang.Override
  public org.zenoss.cloud.dataReceiver.MetricWrapperOrBuilder getMetricOrBuilder() {
    return metric_ == null ? org.zenoss.cloud.dataReceiver.MetricWrapper.getDefaultInstance() : metric_;
  }

  public static final int UPDATE_MODE_FIELD_NUMBER = 2;
  private int updateMode_ = 0;
  /**
   * <code>.zenoss.cloud.UpdateMode update_mode = 2 [json_name = "updateMode"];</code>
   * @return The enum numeric value on the wire for updateMode.
   */
  @java.lang.Override public int getUpdateModeValue() {
    return updateMode_;
  }
  /**
   * <code>.zenoss.cloud.UpdateMode update_mode = 2 [json_name = "updateMode"];</code>
   * @return The updateMode.
   */
  @java.lang.Override public org.zenoss.cloud.dataRegistry.UpdateMode getUpdateMode() {
    org.zenoss.cloud.dataRegistry.UpdateMode result = org.zenoss.cloud.dataRegistry.UpdateMode.forNumber(updateMode_);
    return result == null ? org.zenoss.cloud.dataRegistry.UpdateMode.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getMetric());
    }
    if (updateMode_ != org.zenoss.cloud.dataRegistry.UpdateMode.MERGE.getNumber()) {
      output.writeEnum(2, updateMode_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getMetric());
    }
    if (updateMode_ != org.zenoss.cloud.dataRegistry.UpdateMode.MERGE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, updateMode_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.zenoss.cloud.dataRegistry.RegisterMetricRequest)) {
      return super.equals(obj);
    }
    org.zenoss.cloud.dataRegistry.RegisterMetricRequest other = (org.zenoss.cloud.dataRegistry.RegisterMetricRequest) obj;

    if (hasMetric() != other.hasMetric()) return false;
    if (hasMetric()) {
      if (!getMetric()
          .equals(other.getMetric())) return false;
    }
    if (updateMode_ != other.updateMode_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasMetric()) {
      hash = (37 * hash) + METRIC_FIELD_NUMBER;
      hash = (53 * hash) + getMetric().hashCode();
    }
    hash = (37 * hash) + UPDATE_MODE_FIELD_NUMBER;
    hash = (53 * hash) + updateMode_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.zenoss.cloud.dataRegistry.RegisterMetricRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.zenoss.cloud.dataRegistry.RegisterMetricRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.zenoss.cloud.dataRegistry.RegisterMetricRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.zenoss.cloud.dataRegistry.RegisterMetricRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.zenoss.cloud.dataRegistry.RegisterMetricRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.zenoss.cloud.dataRegistry.RegisterMetricRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.zenoss.cloud.dataRegistry.RegisterMetricRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.zenoss.cloud.dataRegistry.RegisterMetricRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.zenoss.cloud.dataRegistry.RegisterMetricRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.zenoss.cloud.dataRegistry.RegisterMetricRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.zenoss.cloud.dataRegistry.RegisterMetricRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.zenoss.cloud.dataRegistry.RegisterMetricRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.zenoss.cloud.dataRegistry.RegisterMetricRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code zenoss.cloud.RegisterMetricRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:zenoss.cloud.RegisterMetricRequest)
      org.zenoss.cloud.dataRegistry.RegisterMetricRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.zenoss.cloud.dataRegistry.DataRegistry.internal_static_zenoss_cloud_RegisterMetricRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.zenoss.cloud.dataRegistry.DataRegistry.internal_static_zenoss_cloud_RegisterMetricRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.zenoss.cloud.dataRegistry.RegisterMetricRequest.class, org.zenoss.cloud.dataRegistry.RegisterMetricRequest.Builder.class);
    }

    // Construct using org.zenoss.cloud.dataRegistry.RegisterMetricRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getMetricFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      metric_ = null;
      if (metricBuilder_ != null) {
        metricBuilder_.dispose();
        metricBuilder_ = null;
      }
      updateMode_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.zenoss.cloud.dataRegistry.DataRegistry.internal_static_zenoss_cloud_RegisterMetricRequest_descriptor;
    }

    @java.lang.Override
    public org.zenoss.cloud.dataRegistry.RegisterMetricRequest getDefaultInstanceForType() {
      return org.zenoss.cloud.dataRegistry.RegisterMetricRequest.getDefaultInstance();
    }

    @java.lang.Override
    public org.zenoss.cloud.dataRegistry.RegisterMetricRequest build() {
      org.zenoss.cloud.dataRegistry.RegisterMetricRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.zenoss.cloud.dataRegistry.RegisterMetricRequest buildPartial() {
      org.zenoss.cloud.dataRegistry.RegisterMetricRequest result = new org.zenoss.cloud.dataRegistry.RegisterMetricRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(org.zenoss.cloud.dataRegistry.RegisterMetricRequest result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.metric_ = metricBuilder_ == null
            ? metric_
            : metricBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.updateMode_ = updateMode_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.zenoss.cloud.dataRegistry.RegisterMetricRequest) {
        return mergeFrom((org.zenoss.cloud.dataRegistry.RegisterMetricRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.zenoss.cloud.dataRegistry.RegisterMetricRequest other) {
      if (other == org.zenoss.cloud.dataRegistry.RegisterMetricRequest.getDefaultInstance()) return this;
      if (other.hasMetric()) {
        mergeMetric(other.getMetric());
      }
      if (other.updateMode_ != 0) {
        setUpdateModeValue(other.getUpdateModeValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getMetricFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              updateMode_ = input.readEnum();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private org.zenoss.cloud.dataReceiver.MetricWrapper metric_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.zenoss.cloud.dataReceiver.MetricWrapper, org.zenoss.cloud.dataReceiver.MetricWrapper.Builder, org.zenoss.cloud.dataReceiver.MetricWrapperOrBuilder> metricBuilder_;
    /**
     * <code>.zenoss.cloud.MetricWrapper metric = 1 [json_name = "metric"];</code>
     * @return Whether the metric field is set.
     */
    public boolean hasMetric() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.zenoss.cloud.MetricWrapper metric = 1 [json_name = "metric"];</code>
     * @return The metric.
     */
    public org.zenoss.cloud.dataReceiver.MetricWrapper getMetric() {
      if (metricBuilder_ == null) {
        return metric_ == null ? org.zenoss.cloud.dataReceiver.MetricWrapper.getDefaultInstance() : metric_;
      } else {
        return metricBuilder_.getMessage();
      }
    }
    /**
     * <code>.zenoss.cloud.MetricWrapper metric = 1 [json_name = "metric"];</code>
     */
    public Builder setMetric(org.zenoss.cloud.dataReceiver.MetricWrapper value) {
      if (metricBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metric_ = value;
      } else {
        metricBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.zenoss.cloud.MetricWrapper metric = 1 [json_name = "metric"];</code>
     */
    public Builder setMetric(
        org.zenoss.cloud.dataReceiver.MetricWrapper.Builder builderForValue) {
      if (metricBuilder_ == null) {
        metric_ = builderForValue.build();
      } else {
        metricBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.zenoss.cloud.MetricWrapper metric = 1 [json_name = "metric"];</code>
     */
    public Builder mergeMetric(org.zenoss.cloud.dataReceiver.MetricWrapper value) {
      if (metricBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          metric_ != null &&
          metric_ != org.zenoss.cloud.dataReceiver.MetricWrapper.getDefaultInstance()) {
          getMetricBuilder().mergeFrom(value);
        } else {
          metric_ = value;
        }
      } else {
        metricBuilder_.mergeFrom(value);
      }
      if (metric_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.zenoss.cloud.MetricWrapper metric = 1 [json_name = "metric"];</code>
     */
    public Builder clearMetric() {
      bitField0_ = (bitField0_ & ~0x00000001);
      metric_ = null;
      if (metricBuilder_ != null) {
        metricBuilder_.dispose();
        metricBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.zenoss.cloud.MetricWrapper metric = 1 [json_name = "metric"];</code>
     */
    public org.zenoss.cloud.dataReceiver.MetricWrapper.Builder getMetricBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getMetricFieldBuilder().getBuilder();
    }
    /**
     * <code>.zenoss.cloud.MetricWrapper metric = 1 [json_name = "metric"];</code>
     */
    public org.zenoss.cloud.dataReceiver.MetricWrapperOrBuilder getMetricOrBuilder() {
      if (metricBuilder_ != null) {
        return metricBuilder_.getMessageOrBuilder();
      } else {
        return metric_ == null ?
            org.zenoss.cloud.dataReceiver.MetricWrapper.getDefaultInstance() : metric_;
      }
    }
    /**
     * <code>.zenoss.cloud.MetricWrapper metric = 1 [json_name = "metric"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.zenoss.cloud.dataReceiver.MetricWrapper, org.zenoss.cloud.dataReceiver.MetricWrapper.Builder, org.zenoss.cloud.dataReceiver.MetricWrapperOrBuilder> 
        getMetricFieldBuilder() {
      if (metricBuilder_ == null) {
        metricBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.zenoss.cloud.dataReceiver.MetricWrapper, org.zenoss.cloud.dataReceiver.MetricWrapper.Builder, org.zenoss.cloud.dataReceiver.MetricWrapperOrBuilder>(
                getMetric(),
                getParentForChildren(),
                isClean());
        metric_ = null;
      }
      return metricBuilder_;
    }

    private int updateMode_ = 0;
    /**
     * <code>.zenoss.cloud.UpdateMode update_mode = 2 [json_name = "updateMode"];</code>
     * @return The enum numeric value on the wire for updateMode.
     */
    @java.lang.Override public int getUpdateModeValue() {
      return updateMode_;
    }
    /**
     * <code>.zenoss.cloud.UpdateMode update_mode = 2 [json_name = "updateMode"];</code>
     * @param value The enum numeric value on the wire for updateMode to set.
     * @return This builder for chaining.
     */
    public Builder setUpdateModeValue(int value) {
      updateMode_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>.zenoss.cloud.UpdateMode update_mode = 2 [json_name = "updateMode"];</code>
     * @return The updateMode.
     */
    @java.lang.Override
    public org.zenoss.cloud.dataRegistry.UpdateMode getUpdateMode() {
      org.zenoss.cloud.dataRegistry.UpdateMode result = org.zenoss.cloud.dataRegistry.UpdateMode.forNumber(updateMode_);
      return result == null ? org.zenoss.cloud.dataRegistry.UpdateMode.UNRECOGNIZED : result;
    }
    /**
     * <code>.zenoss.cloud.UpdateMode update_mode = 2 [json_name = "updateMode"];</code>
     * @param value The updateMode to set.
     * @return This builder for chaining.
     */
    public Builder setUpdateMode(org.zenoss.cloud.dataRegistry.UpdateMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      updateMode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.zenoss.cloud.UpdateMode update_mode = 2 [json_name = "updateMode"];</code>
     * @return This builder for chaining.
     */
    public Builder clearUpdateMode() {
      bitField0_ = (bitField0_ & ~0x00000002);
      updateMode_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:zenoss.cloud.RegisterMetricRequest)
  }

  // @@protoc_insertion_point(class_scope:zenoss.cloud.RegisterMetricRequest)
  private static final org.zenoss.cloud.dataRegistry.RegisterMetricRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.zenoss.cloud.dataRegistry.RegisterMetricRequest();
  }

  public static org.zenoss.cloud.dataRegistry.RegisterMetricRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RegisterMetricRequest>
      PARSER = new com.google.protobuf.AbstractParser<RegisterMetricRequest>() {
    @java.lang.Override
    public RegisterMetricRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<RegisterMetricRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RegisterMetricRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.zenoss.cloud.dataRegistry.RegisterMetricRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

