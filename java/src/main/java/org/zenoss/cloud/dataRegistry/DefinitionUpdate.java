// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zenoss/cloud/data_registry.proto

package org.zenoss.cloud.dataRegistry;

/**
 * Protobuf type {@code zenoss.cloud.DefinitionUpdate}
 */
public final class DefinitionUpdate extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:zenoss.cloud.DefinitionUpdate)
    DefinitionUpdateOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DefinitionUpdate.newBuilder() to construct.
  private DefinitionUpdate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DefinitionUpdate() {
    definitionId_ = "";
    updateMode_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DefinitionUpdate();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DefinitionUpdate(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            definitionId_ = s;
            break;
          }
          case 18: {
            com.google.protobuf.Struct.Builder subBuilder = null;
            if (metadataFields_ != null) {
              subBuilder = metadataFields_.toBuilder();
            }
            metadataFields_ = input.readMessage(com.google.protobuf.Struct.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(metadataFields_);
              metadataFields_ = subBuilder.buildPartial();
            }

            break;
          }
          case 24: {
            int rawValue = input.readEnum();

            updateMode_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.zenoss.cloud.dataRegistry.DataRegistry.internal_static_zenoss_cloud_DefinitionUpdate_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.zenoss.cloud.dataRegistry.DataRegistry.internal_static_zenoss_cloud_DefinitionUpdate_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.zenoss.cloud.dataRegistry.DefinitionUpdate.class, org.zenoss.cloud.dataRegistry.DefinitionUpdate.Builder.class);
  }

  public static final int DEFINITION_ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object definitionId_;
  /**
   * <pre>
   * The metric name
   * </pre>
   *
   * <code>string definition_id = 1;</code>
   * @return The definitionId.
   */
  @java.lang.Override
  public java.lang.String getDefinitionId() {
    java.lang.Object ref = definitionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      definitionId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The metric name
   * </pre>
   *
   * <code>string definition_id = 1;</code>
   * @return The bytes for definitionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDefinitionIdBytes() {
    java.lang.Object ref = definitionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      definitionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int METADATAFIELDS_FIELD_NUMBER = 2;
  private com.google.protobuf.Struct metadataFields_;
  /**
   * <pre>
   * Metadata for the datapoint. Note: using Struct as it is easier than AnyArray when using json representations
   * </pre>
   *
   * <code>.google.protobuf.Struct metadataFields = 2;</code>
   * @return Whether the metadataFields field is set.
   */
  @java.lang.Override
  public boolean hasMetadataFields() {
    return metadataFields_ != null;
  }
  /**
   * <pre>
   * Metadata for the datapoint. Note: using Struct as it is easier than AnyArray when using json representations
   * </pre>
   *
   * <code>.google.protobuf.Struct metadataFields = 2;</code>
   * @return The metadataFields.
   */
  @java.lang.Override
  public com.google.protobuf.Struct getMetadataFields() {
    return metadataFields_ == null ? com.google.protobuf.Struct.getDefaultInstance() : metadataFields_;
  }
  /**
   * <pre>
   * Metadata for the datapoint. Note: using Struct as it is easier than AnyArray when using json representations
   * </pre>
   *
   * <code>.google.protobuf.Struct metadataFields = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StructOrBuilder getMetadataFieldsOrBuilder() {
    return getMetadataFields();
  }

  public static final int UPDATE_MODE_FIELD_NUMBER = 3;
  private int updateMode_;
  /**
   * <pre>
   * Determines what happens to the existing definition metadata fields.  If MERGE (default), the provided metadata
   * is merged with the existing metadata.  If REPLACE, the provided metadata replaces the metadata on the existing
   * definition.
   * </pre>
   *
   * <code>.zenoss.cloud.UpdateMode update_mode = 3;</code>
   * @return The enum numeric value on the wire for updateMode.
   */
  @java.lang.Override public int getUpdateModeValue() {
    return updateMode_;
  }
  /**
   * <pre>
   * Determines what happens to the existing definition metadata fields.  If MERGE (default), the provided metadata
   * is merged with the existing metadata.  If REPLACE, the provided metadata replaces the metadata on the existing
   * definition.
   * </pre>
   *
   * <code>.zenoss.cloud.UpdateMode update_mode = 3;</code>
   * @return The updateMode.
   */
  @java.lang.Override public org.zenoss.cloud.dataRegistry.UpdateMode getUpdateMode() {
    @SuppressWarnings("deprecation")
    org.zenoss.cloud.dataRegistry.UpdateMode result = org.zenoss.cloud.dataRegistry.UpdateMode.valueOf(updateMode_);
    return result == null ? org.zenoss.cloud.dataRegistry.UpdateMode.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getDefinitionIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, definitionId_);
    }
    if (metadataFields_ != null) {
      output.writeMessage(2, getMetadataFields());
    }
    if (updateMode_ != org.zenoss.cloud.dataRegistry.UpdateMode.MERGE.getNumber()) {
      output.writeEnum(3, updateMode_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getDefinitionIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, definitionId_);
    }
    if (metadataFields_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getMetadataFields());
    }
    if (updateMode_ != org.zenoss.cloud.dataRegistry.UpdateMode.MERGE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, updateMode_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.zenoss.cloud.dataRegistry.DefinitionUpdate)) {
      return super.equals(obj);
    }
    org.zenoss.cloud.dataRegistry.DefinitionUpdate other = (org.zenoss.cloud.dataRegistry.DefinitionUpdate) obj;

    if (!getDefinitionId()
        .equals(other.getDefinitionId())) return false;
    if (hasMetadataFields() != other.hasMetadataFields()) return false;
    if (hasMetadataFields()) {
      if (!getMetadataFields()
          .equals(other.getMetadataFields())) return false;
    }
    if (updateMode_ != other.updateMode_) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DEFINITION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getDefinitionId().hashCode();
    if (hasMetadataFields()) {
      hash = (37 * hash) + METADATAFIELDS_FIELD_NUMBER;
      hash = (53 * hash) + getMetadataFields().hashCode();
    }
    hash = (37 * hash) + UPDATE_MODE_FIELD_NUMBER;
    hash = (53 * hash) + updateMode_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.zenoss.cloud.dataRegistry.DefinitionUpdate parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.zenoss.cloud.dataRegistry.DefinitionUpdate parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.zenoss.cloud.dataRegistry.DefinitionUpdate parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.zenoss.cloud.dataRegistry.DefinitionUpdate parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.zenoss.cloud.dataRegistry.DefinitionUpdate parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.zenoss.cloud.dataRegistry.DefinitionUpdate parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.zenoss.cloud.dataRegistry.DefinitionUpdate parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.zenoss.cloud.dataRegistry.DefinitionUpdate parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.zenoss.cloud.dataRegistry.DefinitionUpdate parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.zenoss.cloud.dataRegistry.DefinitionUpdate parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.zenoss.cloud.dataRegistry.DefinitionUpdate parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.zenoss.cloud.dataRegistry.DefinitionUpdate parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.zenoss.cloud.dataRegistry.DefinitionUpdate prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code zenoss.cloud.DefinitionUpdate}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:zenoss.cloud.DefinitionUpdate)
      org.zenoss.cloud.dataRegistry.DefinitionUpdateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.zenoss.cloud.dataRegistry.DataRegistry.internal_static_zenoss_cloud_DefinitionUpdate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.zenoss.cloud.dataRegistry.DataRegistry.internal_static_zenoss_cloud_DefinitionUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.zenoss.cloud.dataRegistry.DefinitionUpdate.class, org.zenoss.cloud.dataRegistry.DefinitionUpdate.Builder.class);
    }

    // Construct using org.zenoss.cloud.dataRegistry.DefinitionUpdate.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      definitionId_ = "";

      if (metadataFieldsBuilder_ == null) {
        metadataFields_ = null;
      } else {
        metadataFields_ = null;
        metadataFieldsBuilder_ = null;
      }
      updateMode_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.zenoss.cloud.dataRegistry.DataRegistry.internal_static_zenoss_cloud_DefinitionUpdate_descriptor;
    }

    @java.lang.Override
    public org.zenoss.cloud.dataRegistry.DefinitionUpdate getDefaultInstanceForType() {
      return org.zenoss.cloud.dataRegistry.DefinitionUpdate.getDefaultInstance();
    }

    @java.lang.Override
    public org.zenoss.cloud.dataRegistry.DefinitionUpdate build() {
      org.zenoss.cloud.dataRegistry.DefinitionUpdate result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.zenoss.cloud.dataRegistry.DefinitionUpdate buildPartial() {
      org.zenoss.cloud.dataRegistry.DefinitionUpdate result = new org.zenoss.cloud.dataRegistry.DefinitionUpdate(this);
      result.definitionId_ = definitionId_;
      if (metadataFieldsBuilder_ == null) {
        result.metadataFields_ = metadataFields_;
      } else {
        result.metadataFields_ = metadataFieldsBuilder_.build();
      }
      result.updateMode_ = updateMode_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.zenoss.cloud.dataRegistry.DefinitionUpdate) {
        return mergeFrom((org.zenoss.cloud.dataRegistry.DefinitionUpdate)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.zenoss.cloud.dataRegistry.DefinitionUpdate other) {
      if (other == org.zenoss.cloud.dataRegistry.DefinitionUpdate.getDefaultInstance()) return this;
      if (!other.getDefinitionId().isEmpty()) {
        definitionId_ = other.definitionId_;
        onChanged();
      }
      if (other.hasMetadataFields()) {
        mergeMetadataFields(other.getMetadataFields());
      }
      if (other.updateMode_ != 0) {
        setUpdateModeValue(other.getUpdateModeValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.zenoss.cloud.dataRegistry.DefinitionUpdate parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.zenoss.cloud.dataRegistry.DefinitionUpdate) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object definitionId_ = "";
    /**
     * <pre>
     * The metric name
     * </pre>
     *
     * <code>string definition_id = 1;</code>
     * @return The definitionId.
     */
    public java.lang.String getDefinitionId() {
      java.lang.Object ref = definitionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        definitionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The metric name
     * </pre>
     *
     * <code>string definition_id = 1;</code>
     * @return The bytes for definitionId.
     */
    public com.google.protobuf.ByteString
        getDefinitionIdBytes() {
      java.lang.Object ref = definitionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        definitionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The metric name
     * </pre>
     *
     * <code>string definition_id = 1;</code>
     * @param value The definitionId to set.
     * @return This builder for chaining.
     */
    public Builder setDefinitionId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      definitionId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The metric name
     * </pre>
     *
     * <code>string definition_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearDefinitionId() {
      
      definitionId_ = getDefaultInstance().getDefinitionId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The metric name
     * </pre>
     *
     * <code>string definition_id = 1;</code>
     * @param value The bytes for definitionId to set.
     * @return This builder for chaining.
     */
    public Builder setDefinitionIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      definitionId_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.Struct metadataFields_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> metadataFieldsBuilder_;
    /**
     * <pre>
     * Metadata for the datapoint. Note: using Struct as it is easier than AnyArray when using json representations
     * </pre>
     *
     * <code>.google.protobuf.Struct metadataFields = 2;</code>
     * @return Whether the metadataFields field is set.
     */
    public boolean hasMetadataFields() {
      return metadataFieldsBuilder_ != null || metadataFields_ != null;
    }
    /**
     * <pre>
     * Metadata for the datapoint. Note: using Struct as it is easier than AnyArray when using json representations
     * </pre>
     *
     * <code>.google.protobuf.Struct metadataFields = 2;</code>
     * @return The metadataFields.
     */
    public com.google.protobuf.Struct getMetadataFields() {
      if (metadataFieldsBuilder_ == null) {
        return metadataFields_ == null ? com.google.protobuf.Struct.getDefaultInstance() : metadataFields_;
      } else {
        return metadataFieldsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Metadata for the datapoint. Note: using Struct as it is easier than AnyArray when using json representations
     * </pre>
     *
     * <code>.google.protobuf.Struct metadataFields = 2;</code>
     */
    public Builder setMetadataFields(com.google.protobuf.Struct value) {
      if (metadataFieldsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadataFields_ = value;
        onChanged();
      } else {
        metadataFieldsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Metadata for the datapoint. Note: using Struct as it is easier than AnyArray when using json representations
     * </pre>
     *
     * <code>.google.protobuf.Struct metadataFields = 2;</code>
     */
    public Builder setMetadataFields(
        com.google.protobuf.Struct.Builder builderForValue) {
      if (metadataFieldsBuilder_ == null) {
        metadataFields_ = builderForValue.build();
        onChanged();
      } else {
        metadataFieldsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Metadata for the datapoint. Note: using Struct as it is easier than AnyArray when using json representations
     * </pre>
     *
     * <code>.google.protobuf.Struct metadataFields = 2;</code>
     */
    public Builder mergeMetadataFields(com.google.protobuf.Struct value) {
      if (metadataFieldsBuilder_ == null) {
        if (metadataFields_ != null) {
          metadataFields_ =
            com.google.protobuf.Struct.newBuilder(metadataFields_).mergeFrom(value).buildPartial();
        } else {
          metadataFields_ = value;
        }
        onChanged();
      } else {
        metadataFieldsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Metadata for the datapoint. Note: using Struct as it is easier than AnyArray when using json representations
     * </pre>
     *
     * <code>.google.protobuf.Struct metadataFields = 2;</code>
     */
    public Builder clearMetadataFields() {
      if (metadataFieldsBuilder_ == null) {
        metadataFields_ = null;
        onChanged();
      } else {
        metadataFields_ = null;
        metadataFieldsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Metadata for the datapoint. Note: using Struct as it is easier than AnyArray when using json representations
     * </pre>
     *
     * <code>.google.protobuf.Struct metadataFields = 2;</code>
     */
    public com.google.protobuf.Struct.Builder getMetadataFieldsBuilder() {
      
      onChanged();
      return getMetadataFieldsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Metadata for the datapoint. Note: using Struct as it is easier than AnyArray when using json representations
     * </pre>
     *
     * <code>.google.protobuf.Struct metadataFields = 2;</code>
     */
    public com.google.protobuf.StructOrBuilder getMetadataFieldsOrBuilder() {
      if (metadataFieldsBuilder_ != null) {
        return metadataFieldsBuilder_.getMessageOrBuilder();
      } else {
        return metadataFields_ == null ?
            com.google.protobuf.Struct.getDefaultInstance() : metadataFields_;
      }
    }
    /**
     * <pre>
     * Metadata for the datapoint. Note: using Struct as it is easier than AnyArray when using json representations
     * </pre>
     *
     * <code>.google.protobuf.Struct metadataFields = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> 
        getMetadataFieldsFieldBuilder() {
      if (metadataFieldsBuilder_ == null) {
        metadataFieldsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder>(
                getMetadataFields(),
                getParentForChildren(),
                isClean());
        metadataFields_ = null;
      }
      return metadataFieldsBuilder_;
    }

    private int updateMode_ = 0;
    /**
     * <pre>
     * Determines what happens to the existing definition metadata fields.  If MERGE (default), the provided metadata
     * is merged with the existing metadata.  If REPLACE, the provided metadata replaces the metadata on the existing
     * definition.
     * </pre>
     *
     * <code>.zenoss.cloud.UpdateMode update_mode = 3;</code>
     * @return The enum numeric value on the wire for updateMode.
     */
    @java.lang.Override public int getUpdateModeValue() {
      return updateMode_;
    }
    /**
     * <pre>
     * Determines what happens to the existing definition metadata fields.  If MERGE (default), the provided metadata
     * is merged with the existing metadata.  If REPLACE, the provided metadata replaces the metadata on the existing
     * definition.
     * </pre>
     *
     * <code>.zenoss.cloud.UpdateMode update_mode = 3;</code>
     * @param value The enum numeric value on the wire for updateMode to set.
     * @return This builder for chaining.
     */
    public Builder setUpdateModeValue(int value) {
      
      updateMode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines what happens to the existing definition metadata fields.  If MERGE (default), the provided metadata
     * is merged with the existing metadata.  If REPLACE, the provided metadata replaces the metadata on the existing
     * definition.
     * </pre>
     *
     * <code>.zenoss.cloud.UpdateMode update_mode = 3;</code>
     * @return The updateMode.
     */
    @java.lang.Override
    public org.zenoss.cloud.dataRegistry.UpdateMode getUpdateMode() {
      @SuppressWarnings("deprecation")
      org.zenoss.cloud.dataRegistry.UpdateMode result = org.zenoss.cloud.dataRegistry.UpdateMode.valueOf(updateMode_);
      return result == null ? org.zenoss.cloud.dataRegistry.UpdateMode.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Determines what happens to the existing definition metadata fields.  If MERGE (default), the provided metadata
     * is merged with the existing metadata.  If REPLACE, the provided metadata replaces the metadata on the existing
     * definition.
     * </pre>
     *
     * <code>.zenoss.cloud.UpdateMode update_mode = 3;</code>
     * @param value The updateMode to set.
     * @return This builder for chaining.
     */
    public Builder setUpdateMode(org.zenoss.cloud.dataRegistry.UpdateMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      updateMode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines what happens to the existing definition metadata fields.  If MERGE (default), the provided metadata
     * is merged with the existing metadata.  If REPLACE, the provided metadata replaces the metadata on the existing
     * definition.
     * </pre>
     *
     * <code>.zenoss.cloud.UpdateMode update_mode = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearUpdateMode() {
      
      updateMode_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:zenoss.cloud.DefinitionUpdate)
  }

  // @@protoc_insertion_point(class_scope:zenoss.cloud.DefinitionUpdate)
  private static final org.zenoss.cloud.dataRegistry.DefinitionUpdate DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.zenoss.cloud.dataRegistry.DefinitionUpdate();
  }

  public static org.zenoss.cloud.dataRegistry.DefinitionUpdate getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DefinitionUpdate>
      PARSER = new com.google.protobuf.AbstractParser<DefinitionUpdate>() {
    @java.lang.Override
    public DefinitionUpdate parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new DefinitionUpdate(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DefinitionUpdate> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DefinitionUpdate> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.zenoss.cloud.dataRegistry.DefinitionUpdate getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

