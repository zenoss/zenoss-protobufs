// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zenoss/cloud/credentialsmanagement.proto

package org.zenoss.cloud.credentialsManagement;

/**
 * Protobuf type {@code zenoss.cloud.Credential}
 */
public final class Credential extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:zenoss.cloud.Credential)
    CredentialOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Credential.newBuilder() to construct.
  private Credential(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Credential() {
    id_ = "";
    name_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Credential();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.zenoss.cloud.credentialsManagement.Credentialsmanagement.internal_static_zenoss_cloud_Credential_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.zenoss.cloud.credentialsManagement.Credentialsmanagement.internal_static_zenoss_cloud_Credential_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.zenoss.cloud.credentialsManagement.Credential.class, org.zenoss.cloud.credentialsManagement.Credential.Builder.class);
  }

  private int secretCase_ = 0;
  private java.lang.Object secret_;
  public enum SecretCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    API_KEY(3),
    USERNAME_PASSWORD(4),
    CLIENT_CREDENTIALS(5),
    SECRET_NOT_SET(0);
    private final int value;
    private SecretCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SecretCase valueOf(int value) {
      return forNumber(value);
    }

    public static SecretCase forNumber(int value) {
      switch (value) {
        case 3: return API_KEY;
        case 4: return USERNAME_PASSWORD;
        case 5: return CLIENT_CREDENTIALS;
        case 0: return SECRET_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public SecretCase
  getSecretCase() {
    return SecretCase.forNumber(
        secretCase_);
  }

  public static final int ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object id_;
  /**
   * <code>string id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <code>string id = 1 [json_name = "id"];</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NAME_FIELD_NUMBER = 2;
  private volatile java.lang.Object name_;
  /**
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int API_KEY_FIELD_NUMBER = 3;
  /**
   * <code>string api_key = 3 [json_name = "apiKey"];</code>
   * @return Whether the apiKey field is set.
   */
  public boolean hasApiKey() {
    return secretCase_ == 3;
  }
  /**
   * <code>string api_key = 3 [json_name = "apiKey"];</code>
   * @return The apiKey.
   */
  public java.lang.String getApiKey() {
    java.lang.Object ref = "";
    if (secretCase_ == 3) {
      ref = secret_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (secretCase_ == 3) {
        secret_ = s;
      }
      return s;
    }
  }
  /**
   * <code>string api_key = 3 [json_name = "apiKey"];</code>
   * @return The bytes for apiKey.
   */
  public com.google.protobuf.ByteString
      getApiKeyBytes() {
    java.lang.Object ref = "";
    if (secretCase_ == 3) {
      ref = secret_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (secretCase_ == 3) {
        secret_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USERNAME_PASSWORD_FIELD_NUMBER = 4;
  /**
   * <code>.zenoss.cloud.CredsPair username_password = 4 [json_name = "usernamePassword"];</code>
   * @return Whether the usernamePassword field is set.
   */
  @java.lang.Override
  public boolean hasUsernamePassword() {
    return secretCase_ == 4;
  }
  /**
   * <code>.zenoss.cloud.CredsPair username_password = 4 [json_name = "usernamePassword"];</code>
   * @return The usernamePassword.
   */
  @java.lang.Override
  public org.zenoss.cloud.credentialsManagement.CredsPair getUsernamePassword() {
    if (secretCase_ == 4) {
       return (org.zenoss.cloud.credentialsManagement.CredsPair) secret_;
    }
    return org.zenoss.cloud.credentialsManagement.CredsPair.getDefaultInstance();
  }
  /**
   * <code>.zenoss.cloud.CredsPair username_password = 4 [json_name = "usernamePassword"];</code>
   */
  @java.lang.Override
  public org.zenoss.cloud.credentialsManagement.CredsPairOrBuilder getUsernamePasswordOrBuilder() {
    if (secretCase_ == 4) {
       return (org.zenoss.cloud.credentialsManagement.CredsPair) secret_;
    }
    return org.zenoss.cloud.credentialsManagement.CredsPair.getDefaultInstance();
  }

  public static final int CLIENT_CREDENTIALS_FIELD_NUMBER = 5;
  /**
   * <code>.zenoss.cloud.CredsPair client_credentials = 5 [json_name = "clientCredentials"];</code>
   * @return Whether the clientCredentials field is set.
   */
  @java.lang.Override
  public boolean hasClientCredentials() {
    return secretCase_ == 5;
  }
  /**
   * <code>.zenoss.cloud.CredsPair client_credentials = 5 [json_name = "clientCredentials"];</code>
   * @return The clientCredentials.
   */
  @java.lang.Override
  public org.zenoss.cloud.credentialsManagement.CredsPair getClientCredentials() {
    if (secretCase_ == 5) {
       return (org.zenoss.cloud.credentialsManagement.CredsPair) secret_;
    }
    return org.zenoss.cloud.credentialsManagement.CredsPair.getDefaultInstance();
  }
  /**
   * <code>.zenoss.cloud.CredsPair client_credentials = 5 [json_name = "clientCredentials"];</code>
   */
  @java.lang.Override
  public org.zenoss.cloud.credentialsManagement.CredsPairOrBuilder getClientCredentialsOrBuilder() {
    if (secretCase_ == 5) {
       return (org.zenoss.cloud.credentialsManagement.CredsPair) secret_;
    }
    return org.zenoss.cloud.credentialsManagement.CredsPair.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
    }
    if (secretCase_ == 3) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, secret_);
    }
    if (secretCase_ == 4) {
      output.writeMessage(4, (org.zenoss.cloud.credentialsManagement.CredsPair) secret_);
    }
    if (secretCase_ == 5) {
      output.writeMessage(5, (org.zenoss.cloud.credentialsManagement.CredsPair) secret_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
    }
    if (secretCase_ == 3) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, secret_);
    }
    if (secretCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (org.zenoss.cloud.credentialsManagement.CredsPair) secret_);
    }
    if (secretCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (org.zenoss.cloud.credentialsManagement.CredsPair) secret_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.zenoss.cloud.credentialsManagement.Credential)) {
      return super.equals(obj);
    }
    org.zenoss.cloud.credentialsManagement.Credential other = (org.zenoss.cloud.credentialsManagement.Credential) obj;

    if (!getId()
        .equals(other.getId())) return false;
    if (!getName()
        .equals(other.getName())) return false;
    if (!getSecretCase().equals(other.getSecretCase())) return false;
    switch (secretCase_) {
      case 3:
        if (!getApiKey()
            .equals(other.getApiKey())) return false;
        break;
      case 4:
        if (!getUsernamePassword()
            .equals(other.getUsernamePassword())) return false;
        break;
      case 5:
        if (!getClientCredentials()
            .equals(other.getClientCredentials())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    switch (secretCase_) {
      case 3:
        hash = (37 * hash) + API_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getApiKey().hashCode();
        break;
      case 4:
        hash = (37 * hash) + USERNAME_PASSWORD_FIELD_NUMBER;
        hash = (53 * hash) + getUsernamePassword().hashCode();
        break;
      case 5:
        hash = (37 * hash) + CLIENT_CREDENTIALS_FIELD_NUMBER;
        hash = (53 * hash) + getClientCredentials().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.zenoss.cloud.credentialsManagement.Credential parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.zenoss.cloud.credentialsManagement.Credential parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.zenoss.cloud.credentialsManagement.Credential parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.zenoss.cloud.credentialsManagement.Credential parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.zenoss.cloud.credentialsManagement.Credential parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.zenoss.cloud.credentialsManagement.Credential parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.zenoss.cloud.credentialsManagement.Credential parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.zenoss.cloud.credentialsManagement.Credential parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.zenoss.cloud.credentialsManagement.Credential parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.zenoss.cloud.credentialsManagement.Credential parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.zenoss.cloud.credentialsManagement.Credential parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.zenoss.cloud.credentialsManagement.Credential parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.zenoss.cloud.credentialsManagement.Credential prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code zenoss.cloud.Credential}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:zenoss.cloud.Credential)
      org.zenoss.cloud.credentialsManagement.CredentialOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.zenoss.cloud.credentialsManagement.Credentialsmanagement.internal_static_zenoss_cloud_Credential_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.zenoss.cloud.credentialsManagement.Credentialsmanagement.internal_static_zenoss_cloud_Credential_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.zenoss.cloud.credentialsManagement.Credential.class, org.zenoss.cloud.credentialsManagement.Credential.Builder.class);
    }

    // Construct using org.zenoss.cloud.credentialsManagement.Credential.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      id_ = "";

      name_ = "";

      if (usernamePasswordBuilder_ != null) {
        usernamePasswordBuilder_.clear();
      }
      if (clientCredentialsBuilder_ != null) {
        clientCredentialsBuilder_.clear();
      }
      secretCase_ = 0;
      secret_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.zenoss.cloud.credentialsManagement.Credentialsmanagement.internal_static_zenoss_cloud_Credential_descriptor;
    }

    @java.lang.Override
    public org.zenoss.cloud.credentialsManagement.Credential getDefaultInstanceForType() {
      return org.zenoss.cloud.credentialsManagement.Credential.getDefaultInstance();
    }

    @java.lang.Override
    public org.zenoss.cloud.credentialsManagement.Credential build() {
      org.zenoss.cloud.credentialsManagement.Credential result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.zenoss.cloud.credentialsManagement.Credential buildPartial() {
      org.zenoss.cloud.credentialsManagement.Credential result = new org.zenoss.cloud.credentialsManagement.Credential(this);
      result.id_ = id_;
      result.name_ = name_;
      if (secretCase_ == 3) {
        result.secret_ = secret_;
      }
      if (secretCase_ == 4) {
        if (usernamePasswordBuilder_ == null) {
          result.secret_ = secret_;
        } else {
          result.secret_ = usernamePasswordBuilder_.build();
        }
      }
      if (secretCase_ == 5) {
        if (clientCredentialsBuilder_ == null) {
          result.secret_ = secret_;
        } else {
          result.secret_ = clientCredentialsBuilder_.build();
        }
      }
      result.secretCase_ = secretCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.zenoss.cloud.credentialsManagement.Credential) {
        return mergeFrom((org.zenoss.cloud.credentialsManagement.Credential)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.zenoss.cloud.credentialsManagement.Credential other) {
      if (other == org.zenoss.cloud.credentialsManagement.Credential.getDefaultInstance()) return this;
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        onChanged();
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      switch (other.getSecretCase()) {
        case API_KEY: {
          secretCase_ = 3;
          secret_ = other.secret_;
          onChanged();
          break;
        }
        case USERNAME_PASSWORD: {
          mergeUsernamePassword(other.getUsernamePassword());
          break;
        }
        case CLIENT_CREDENTIALS: {
          mergeClientCredentials(other.getClientCredentials());
          break;
        }
        case SECRET_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              id_ = input.readStringRequireUtf8();

              break;
            } // case 10
            case 18: {
              name_ = input.readStringRequireUtf8();

              break;
            } // case 18
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              secretCase_ = 3;
              secret_ = s;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getUsernamePasswordFieldBuilder().getBuilder(),
                  extensionRegistry);
              secretCase_ = 4;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getClientCredentialsFieldBuilder().getBuilder(),
                  extensionRegistry);
              secretCase_ = 5;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int secretCase_ = 0;
    private java.lang.Object secret_;
    public SecretCase
        getSecretCase() {
      return SecretCase.forNumber(
          secretCase_);
    }

    public Builder clearSecret() {
      secretCase_ = 0;
      secret_ = null;
      onChanged();
      return this;
    }


    private java.lang.Object id_ = "";
    /**
     * <code>string id = 1 [json_name = "id"];</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string id = 1 [json_name = "id"];</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string id = 1 [json_name = "id"];</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string id = 1 [json_name = "id"];</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      
      id_ = getDefaultInstance().getId();
      onChanged();
      return this;
    }
    /**
     * <code>string id = 1 [json_name = "id"];</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      id_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <code>string name = 2 [json_name = "name"];</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string name = 2 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string name = 2 [json_name = "name"];</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string name = 2 [json_name = "name"];</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <code>string name = 2 [json_name = "name"];</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    /**
     * <code>string api_key = 3 [json_name = "apiKey"];</code>
     * @return Whether the apiKey field is set.
     */
    @java.lang.Override
    public boolean hasApiKey() {
      return secretCase_ == 3;
    }
    /**
     * <code>string api_key = 3 [json_name = "apiKey"];</code>
     * @return The apiKey.
     */
    @java.lang.Override
    public java.lang.String getApiKey() {
      java.lang.Object ref = "";
      if (secretCase_ == 3) {
        ref = secret_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (secretCase_ == 3) {
          secret_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string api_key = 3 [json_name = "apiKey"];</code>
     * @return The bytes for apiKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getApiKeyBytes() {
      java.lang.Object ref = "";
      if (secretCase_ == 3) {
        ref = secret_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (secretCase_ == 3) {
          secret_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string api_key = 3 [json_name = "apiKey"];</code>
     * @param value The apiKey to set.
     * @return This builder for chaining.
     */
    public Builder setApiKey(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  secretCase_ = 3;
      secret_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string api_key = 3 [json_name = "apiKey"];</code>
     * @return This builder for chaining.
     */
    public Builder clearApiKey() {
      if (secretCase_ == 3) {
        secretCase_ = 0;
        secret_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <code>string api_key = 3 [json_name = "apiKey"];</code>
     * @param value The bytes for apiKey to set.
     * @return This builder for chaining.
     */
    public Builder setApiKeyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      secretCase_ = 3;
      secret_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.zenoss.cloud.credentialsManagement.CredsPair, org.zenoss.cloud.credentialsManagement.CredsPair.Builder, org.zenoss.cloud.credentialsManagement.CredsPairOrBuilder> usernamePasswordBuilder_;
    /**
     * <code>.zenoss.cloud.CredsPair username_password = 4 [json_name = "usernamePassword"];</code>
     * @return Whether the usernamePassword field is set.
     */
    @java.lang.Override
    public boolean hasUsernamePassword() {
      return secretCase_ == 4;
    }
    /**
     * <code>.zenoss.cloud.CredsPair username_password = 4 [json_name = "usernamePassword"];</code>
     * @return The usernamePassword.
     */
    @java.lang.Override
    public org.zenoss.cloud.credentialsManagement.CredsPair getUsernamePassword() {
      if (usernamePasswordBuilder_ == null) {
        if (secretCase_ == 4) {
          return (org.zenoss.cloud.credentialsManagement.CredsPair) secret_;
        }
        return org.zenoss.cloud.credentialsManagement.CredsPair.getDefaultInstance();
      } else {
        if (secretCase_ == 4) {
          return usernamePasswordBuilder_.getMessage();
        }
        return org.zenoss.cloud.credentialsManagement.CredsPair.getDefaultInstance();
      }
    }
    /**
     * <code>.zenoss.cloud.CredsPair username_password = 4 [json_name = "usernamePassword"];</code>
     */
    public Builder setUsernamePassword(org.zenoss.cloud.credentialsManagement.CredsPair value) {
      if (usernamePasswordBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        secret_ = value;
        onChanged();
      } else {
        usernamePasswordBuilder_.setMessage(value);
      }
      secretCase_ = 4;
      return this;
    }
    /**
     * <code>.zenoss.cloud.CredsPair username_password = 4 [json_name = "usernamePassword"];</code>
     */
    public Builder setUsernamePassword(
        org.zenoss.cloud.credentialsManagement.CredsPair.Builder builderForValue) {
      if (usernamePasswordBuilder_ == null) {
        secret_ = builderForValue.build();
        onChanged();
      } else {
        usernamePasswordBuilder_.setMessage(builderForValue.build());
      }
      secretCase_ = 4;
      return this;
    }
    /**
     * <code>.zenoss.cloud.CredsPair username_password = 4 [json_name = "usernamePassword"];</code>
     */
    public Builder mergeUsernamePassword(org.zenoss.cloud.credentialsManagement.CredsPair value) {
      if (usernamePasswordBuilder_ == null) {
        if (secretCase_ == 4 &&
            secret_ != org.zenoss.cloud.credentialsManagement.CredsPair.getDefaultInstance()) {
          secret_ = org.zenoss.cloud.credentialsManagement.CredsPair.newBuilder((org.zenoss.cloud.credentialsManagement.CredsPair) secret_)
              .mergeFrom(value).buildPartial();
        } else {
          secret_ = value;
        }
        onChanged();
      } else {
        if (secretCase_ == 4) {
          usernamePasswordBuilder_.mergeFrom(value);
        } else {
          usernamePasswordBuilder_.setMessage(value);
        }
      }
      secretCase_ = 4;
      return this;
    }
    /**
     * <code>.zenoss.cloud.CredsPair username_password = 4 [json_name = "usernamePassword"];</code>
     */
    public Builder clearUsernamePassword() {
      if (usernamePasswordBuilder_ == null) {
        if (secretCase_ == 4) {
          secretCase_ = 0;
          secret_ = null;
          onChanged();
        }
      } else {
        if (secretCase_ == 4) {
          secretCase_ = 0;
          secret_ = null;
        }
        usernamePasswordBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.zenoss.cloud.CredsPair username_password = 4 [json_name = "usernamePassword"];</code>
     */
    public org.zenoss.cloud.credentialsManagement.CredsPair.Builder getUsernamePasswordBuilder() {
      return getUsernamePasswordFieldBuilder().getBuilder();
    }
    /**
     * <code>.zenoss.cloud.CredsPair username_password = 4 [json_name = "usernamePassword"];</code>
     */
    @java.lang.Override
    public org.zenoss.cloud.credentialsManagement.CredsPairOrBuilder getUsernamePasswordOrBuilder() {
      if ((secretCase_ == 4) && (usernamePasswordBuilder_ != null)) {
        return usernamePasswordBuilder_.getMessageOrBuilder();
      } else {
        if (secretCase_ == 4) {
          return (org.zenoss.cloud.credentialsManagement.CredsPair) secret_;
        }
        return org.zenoss.cloud.credentialsManagement.CredsPair.getDefaultInstance();
      }
    }
    /**
     * <code>.zenoss.cloud.CredsPair username_password = 4 [json_name = "usernamePassword"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.zenoss.cloud.credentialsManagement.CredsPair, org.zenoss.cloud.credentialsManagement.CredsPair.Builder, org.zenoss.cloud.credentialsManagement.CredsPairOrBuilder> 
        getUsernamePasswordFieldBuilder() {
      if (usernamePasswordBuilder_ == null) {
        if (!(secretCase_ == 4)) {
          secret_ = org.zenoss.cloud.credentialsManagement.CredsPair.getDefaultInstance();
        }
        usernamePasswordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.zenoss.cloud.credentialsManagement.CredsPair, org.zenoss.cloud.credentialsManagement.CredsPair.Builder, org.zenoss.cloud.credentialsManagement.CredsPairOrBuilder>(
                (org.zenoss.cloud.credentialsManagement.CredsPair) secret_,
                getParentForChildren(),
                isClean());
        secret_ = null;
      }
      secretCase_ = 4;
      onChanged();;
      return usernamePasswordBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.zenoss.cloud.credentialsManagement.CredsPair, org.zenoss.cloud.credentialsManagement.CredsPair.Builder, org.zenoss.cloud.credentialsManagement.CredsPairOrBuilder> clientCredentialsBuilder_;
    /**
     * <code>.zenoss.cloud.CredsPair client_credentials = 5 [json_name = "clientCredentials"];</code>
     * @return Whether the clientCredentials field is set.
     */
    @java.lang.Override
    public boolean hasClientCredentials() {
      return secretCase_ == 5;
    }
    /**
     * <code>.zenoss.cloud.CredsPair client_credentials = 5 [json_name = "clientCredentials"];</code>
     * @return The clientCredentials.
     */
    @java.lang.Override
    public org.zenoss.cloud.credentialsManagement.CredsPair getClientCredentials() {
      if (clientCredentialsBuilder_ == null) {
        if (secretCase_ == 5) {
          return (org.zenoss.cloud.credentialsManagement.CredsPair) secret_;
        }
        return org.zenoss.cloud.credentialsManagement.CredsPair.getDefaultInstance();
      } else {
        if (secretCase_ == 5) {
          return clientCredentialsBuilder_.getMessage();
        }
        return org.zenoss.cloud.credentialsManagement.CredsPair.getDefaultInstance();
      }
    }
    /**
     * <code>.zenoss.cloud.CredsPair client_credentials = 5 [json_name = "clientCredentials"];</code>
     */
    public Builder setClientCredentials(org.zenoss.cloud.credentialsManagement.CredsPair value) {
      if (clientCredentialsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        secret_ = value;
        onChanged();
      } else {
        clientCredentialsBuilder_.setMessage(value);
      }
      secretCase_ = 5;
      return this;
    }
    /**
     * <code>.zenoss.cloud.CredsPair client_credentials = 5 [json_name = "clientCredentials"];</code>
     */
    public Builder setClientCredentials(
        org.zenoss.cloud.credentialsManagement.CredsPair.Builder builderForValue) {
      if (clientCredentialsBuilder_ == null) {
        secret_ = builderForValue.build();
        onChanged();
      } else {
        clientCredentialsBuilder_.setMessage(builderForValue.build());
      }
      secretCase_ = 5;
      return this;
    }
    /**
     * <code>.zenoss.cloud.CredsPair client_credentials = 5 [json_name = "clientCredentials"];</code>
     */
    public Builder mergeClientCredentials(org.zenoss.cloud.credentialsManagement.CredsPair value) {
      if (clientCredentialsBuilder_ == null) {
        if (secretCase_ == 5 &&
            secret_ != org.zenoss.cloud.credentialsManagement.CredsPair.getDefaultInstance()) {
          secret_ = org.zenoss.cloud.credentialsManagement.CredsPair.newBuilder((org.zenoss.cloud.credentialsManagement.CredsPair) secret_)
              .mergeFrom(value).buildPartial();
        } else {
          secret_ = value;
        }
        onChanged();
      } else {
        if (secretCase_ == 5) {
          clientCredentialsBuilder_.mergeFrom(value);
        } else {
          clientCredentialsBuilder_.setMessage(value);
        }
      }
      secretCase_ = 5;
      return this;
    }
    /**
     * <code>.zenoss.cloud.CredsPair client_credentials = 5 [json_name = "clientCredentials"];</code>
     */
    public Builder clearClientCredentials() {
      if (clientCredentialsBuilder_ == null) {
        if (secretCase_ == 5) {
          secretCase_ = 0;
          secret_ = null;
          onChanged();
        }
      } else {
        if (secretCase_ == 5) {
          secretCase_ = 0;
          secret_ = null;
        }
        clientCredentialsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.zenoss.cloud.CredsPair client_credentials = 5 [json_name = "clientCredentials"];</code>
     */
    public org.zenoss.cloud.credentialsManagement.CredsPair.Builder getClientCredentialsBuilder() {
      return getClientCredentialsFieldBuilder().getBuilder();
    }
    /**
     * <code>.zenoss.cloud.CredsPair client_credentials = 5 [json_name = "clientCredentials"];</code>
     */
    @java.lang.Override
    public org.zenoss.cloud.credentialsManagement.CredsPairOrBuilder getClientCredentialsOrBuilder() {
      if ((secretCase_ == 5) && (clientCredentialsBuilder_ != null)) {
        return clientCredentialsBuilder_.getMessageOrBuilder();
      } else {
        if (secretCase_ == 5) {
          return (org.zenoss.cloud.credentialsManagement.CredsPair) secret_;
        }
        return org.zenoss.cloud.credentialsManagement.CredsPair.getDefaultInstance();
      }
    }
    /**
     * <code>.zenoss.cloud.CredsPair client_credentials = 5 [json_name = "clientCredentials"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.zenoss.cloud.credentialsManagement.CredsPair, org.zenoss.cloud.credentialsManagement.CredsPair.Builder, org.zenoss.cloud.credentialsManagement.CredsPairOrBuilder> 
        getClientCredentialsFieldBuilder() {
      if (clientCredentialsBuilder_ == null) {
        if (!(secretCase_ == 5)) {
          secret_ = org.zenoss.cloud.credentialsManagement.CredsPair.getDefaultInstance();
        }
        clientCredentialsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.zenoss.cloud.credentialsManagement.CredsPair, org.zenoss.cloud.credentialsManagement.CredsPair.Builder, org.zenoss.cloud.credentialsManagement.CredsPairOrBuilder>(
                (org.zenoss.cloud.credentialsManagement.CredsPair) secret_,
                getParentForChildren(),
                isClean());
        secret_ = null;
      }
      secretCase_ = 5;
      onChanged();;
      return clientCredentialsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:zenoss.cloud.Credential)
  }

  // @@protoc_insertion_point(class_scope:zenoss.cloud.Credential)
  private static final org.zenoss.cloud.credentialsManagement.Credential DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.zenoss.cloud.credentialsManagement.Credential();
  }

  public static org.zenoss.cloud.credentialsManagement.Credential getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Credential>
      PARSER = new com.google.protobuf.AbstractParser<Credential>() {
    @java.lang.Override
    public Credential parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Credential> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Credential> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.zenoss.cloud.credentialsManagement.Credential getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

